# mil
0x0:
    r12  :      ?  <- Ancestral  anc_name:AncestralName("stack_bottom")  reg_type:Bytes(8)  
    r3   :      ?  <- Ancestral  anc_name:AncestralName("PF")  reg_type:Bool  
    r4   :      ?  <- Ancestral  anc_name:AncestralName("AF")  reg_type:Bool  
    r5   :      ?  <- Ancestral  anc_name:AncestralName("ZF")  reg_type:Bool  
    r6   :      ?  <- Ancestral  anc_name:AncestralName("SF")  reg_type:Bool  
    r7   :      ?  <- Ancestral  anc_name:AncestralName("TF")  reg_type:Bool  
    r8   :      ?  <- Ancestral  anc_name:AncestralName("IF")  reg_type:Bool  
    r9   :      ?  <- Ancestral  anc_name:AncestralName("DF")  reg_type:Bool  
    r10  :      ?  <- Ancestral  anc_name:AncestralName("OF")  reg_type:Bool  
    r11  :      ?  <- Ancestral  anc_name:AncestralName("RBP")  reg_type:Bytes(8)  
    r12  :      ?  <- Ancestral  anc_name:AncestralName("RSP")  reg_type:Bytes(8)  
    r13  :      ?  <- Ancestral  anc_name:AncestralName("RIP")  reg_type:Bytes(8)  
    r14  :      ?  <- Ancestral  anc_name:AncestralName("RDI")  reg_type:Bytes(8)  
    r15  :      ?  <- Ancestral  anc_name:AncestralName("RSI")  reg_type:Bytes(8)  
    r16  :      ?  <- Ancestral  anc_name:AncestralName("RAX")  reg_type:Bytes(8)  
    r17  :      ?  <- Ancestral  anc_name:AncestralName("RBX")  reg_type:Bytes(8)  
    r18  :      ?  <- Ancestral  anc_name:AncestralName("RCX")  reg_type:Bytes(8)  
    r19  :      ?  <- Ancestral  anc_name:AncestralName("RDX")  reg_type:Bytes(8)  
    r20  :      ?  <- Ancestral  anc_name:AncestralName("R8")  reg_type:Bytes(8)  
    r21  :      ?  <- Ancestral  anc_name:AncestralName("R9")  reg_type:Bytes(8)  
    r22  :      ?  <- Ancestral  anc_name:AncestralName("R10")  reg_type:Bytes(8)  
    r23  :      ?  <- Ancestral  anc_name:AncestralName("R11")  reg_type:Bytes(8)  
    r24  :      ?  <- Ancestral  anc_name:AncestralName("R12")  reg_type:Bytes(8)  
    r25  :      ?  <- Ancestral  anc_name:AncestralName("R13")  reg_type:Bytes(8)  
    r26  :      ?  <- Ancestral  anc_name:AncestralName("R14")  reg_type:Bytes(8)  
    r27  :      ?  <- Ancestral  anc_name:AncestralName("R15")  reg_type:Bytes(8)  
    r28  :      ?  <- Ancestral  anc_name:AncestralName("ZMM0")  reg_type:Bytes(64)  
    r29  :      ?  <- Ancestral  anc_name:AncestralName("ZMM1")  reg_type:Bytes(64)  
    r30  :      ?  <- Ancestral  anc_name:AncestralName("ZMM2")  reg_type:Bytes(64)  
    r31  :      ?  <- Ancestral  anc_name:AncestralName("ZMM3")  reg_type:Bytes(64)  
    r32  :      ?  <- Ancestral  anc_name:AncestralName("ZMM4")  reg_type:Bytes(64)  
    r33  :      ?  <- Ancestral  anc_name:AncestralName("ZMM5")  reg_type:Bytes(64)  
    r34  :      ?  <- Ancestral  anc_name:AncestralName("ZMM6")  reg_type:Bytes(64)  
    r35  :      ?  <- Ancestral  anc_name:AncestralName("ZMM7")  reg_type:Bytes(64)  
    r36  :      ?  <- Ancestral  anc_name:AncestralName("ZMM8")  reg_type:Bytes(64)  
    r37  :      ?  <- Ancestral  anc_name:AncestralName("ZMM9")  reg_type:Bytes(64)  
    r38  :      ?  <- Ancestral  anc_name:AncestralName("ZMM10")  reg_type:Bytes(64)  
    r39  :      ?  <- Ancestral  anc_name:AncestralName("ZMM11")  reg_type:Bytes(64)  
    r40  :      ?  <- Ancestral  anc_name:AncestralName("ZMM12")  reg_type:Bytes(64)  
    r41  :      ?  <- Ancestral  anc_name:AncestralName("ZMM13")  reg_type:Bytes(64)  
    r42  :      ?  <- Ancestral  anc_name:AncestralName("ZMM14")  reg_type:Bytes(64)  
    r43  :      ?  <- Ancestral  anc_name:AncestralName("ZMM15")  reg_type:Bytes(64)  
0x486540:
    r12  :      ?  <- ArithK     0:Add  1:r12  2:-8  
    r46  :      ?  <- StoreMem   addr:r12  value:r11  
0x486541:
    r11  :      ?  <- Get        0:r12  
0x486544:
    r12  :      ?  <- ArithK     0:Add  1:r12  2:-8  
    r46  :      ?  <- StoreMem   addr:r12  value:r25  
0x486546:
    r12  :      ?  <- ArithK     0:Add  1:r12  2:-8  
    r46  :      ?  <- StoreMem   addr:r12  value:r24  
0x486548:
    r12  :      ?  <- ArithK     0:Add  1:r12  2:-8  
    r46  :      ?  <- StoreMem   addr:r12  value:r17  
0x486549:
    r17  :      ?  <- Get        0:r14  
0x48654c:
    r14  :      ?  <- Get        0:r15  
0x48654f:
    r46  :      ?  <- Int        value:8  size:8  
    r12  :      ?  <- Arith      0:Sub  1:r12  2:r46  
    r12  :      ?  <- Get        0:r12  
    r10  :      ?  <- OverflowOf 0:r12  
    r2   :      ?  <- CarryOf    0:r12  
    r6   :      ?  <- SignOf     0:r12  
    r5   :      ?  <- IsZero     0:r12  
    r47  :      ?  <- Part       src:r12  offset:0  size:1  
    r3   :      ?  <- Parity     0:r47  
0x486553:
    r46  :      ?  <- Int        value:0  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r17  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r16  :      ?  <- Get        0:r45  
0x486556:
    r46  :      ?  <- Int        value:0  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r16  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r24  :      ?  <- Get        0:r45  
0x486559:
    r45  :      ?  <- Int        value:4575568  size:8  
    r47  :      ?  <- Void       
    r47  :      ?  <- Get        0:r14  
    r46  :      ?  <- CArg       value:r47  next_arg:None  
    r46  :      ?  <- Call       callee:r45  first_arg:r46  
    r2   :      ?  <- UndefinedBool 
    r3   :      ?  <- UndefinedBool 
    r4   :      ?  <- UndefinedBool 
    r5   :      ?  <- UndefinedBool 
    r6   :      ?  <- UndefinedBool 
    r7   :      ?  <- UndefinedBool 
    r8   :      ?  <- UndefinedBool 
    r9   :      ?  <- UndefinedBool 
    r10  :      ?  <- UndefinedBool 
    r16  :      ?  <- Part       src:r46  offset:0  size:8  
0x48655e:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r16  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r15  :      ?  <- Get        0:r45  
0x486562:
    r25  :      ?  <- Get        0:r16  
0x486565:
    r46  :      ?  <- Int        value:-1  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r15  
    r45  :      ?  <- LoadMem    addr:r46  size:1  
    r45  :      ?  <- Widen      reg:r45  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r18  offset:1  size:7  
    r18  :      ?  <- Concat     lo:r45  hi:r47  
0x486569:
    r46  :      ?  <- Part       src:r18  offset:0  size:4  
    r46  :      ?  <- Widen      reg:r46  target_size:8  sign:false  
    r16  :      ?  <- Get        0:r46  
0x48656b:
    r46  :      ?  <- Part       src:r16  offset:0  size:4  
    r47  :      ?  <- Int        value:7  size:4  
    r46  :      ?  <- Arith      0:BitAnd  1:r46  2:r47  
    r46  :      ?  <- Widen      reg:r46  target_size:8  sign:false  
    r16  :      ?  <- Get        0:r46  
    r10  :      ?  <- False      
    r2   :      ?  <- False      
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r48  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r48  
0x48656e:
    r46  :      ?  <- Part       src:r16  offset:0  size:1  
    r47  :      ?  <- Int        value:4  size:1  
    r46  :      ?  <- Arith      0:Sub  1:r46  2:r47  
    r10  :      ?  <- OverflowOf 0:r46  
    r2   :      ?  <- CarryOf    0:r46  
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r48  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r48  
0x486570:
    r45  :      ?  <- Not        0:r6  
    r46  :      ?  <- Not        0:r5  
    r45  :      ?  <- Bool       0:And  1:r45  2:r46  
    r47  :      ?  <- SetJumpCondition 0:r45  
    r47  :      ?  <- Control    0:JmpExtIf(4203618)  
0x486576:
    r46  :      ?  <- Part       src:r16  offset:0  size:1  
    r46  :      ?  <- Widen      reg:r46  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r16  offset:1  size:7  
    r16  :      ?  <- Concat     lo:r46  hi:r47  
0x486579:
    r46  :      ?  <- Int        value:6851792  size:8  
    r47  :      ?  <- ArithK     0:Mul  1:r16  2:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r47  
    r46  :      ?  <- SetJumpTarget 0:r46  
    r45  :      ?  <- Control    0:JmpIndirect  
0x486580:
    r46  :      ?  <- Int        value:-9  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r15  
    r45  :      ?  <- LoadMem    addr:r46  size:4  
    r45  :      ?  <- Widen      reg:r45  target_size:8  sign:false  
    r18  :      ?  <- Get        0:r45  
0x486583:
    r46  :      ?  <- Int        value:0  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r17  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r19  :      ?  <- Get        0:r45  
0x486586:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r19  
    r45  :      ?  <- LoadMem    addr:r46  size:1  
    r45  :      ?  <- Widen      reg:r45  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r16  offset:1  size:7  
    r16  :      ?  <- Concat     lo:r45  hi:r47  
0x48658a:
    r46  :      ?  <- Part       src:r16  offset:0  size:1  
    r47  :      ?  <- Int        value:9  size:1  
    r46  :      ?  <- Arith      0:Sub  1:r46  2:r47  
    r10  :      ?  <- OverflowOf 0:r46  
    r2   :      ?  <- CarryOf    0:r46  
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r48  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r48  
0x48658c:
    r45  :      ?  <- SetJumpCondition 0:r5  
    r45  :      ?  <- Control    0:JmpExtIf(4744672)  
0x48658e:
    r46  :      ?  <- Part       src:r16  offset:0  size:1  
    r47  :      ?  <- Int        value:11  size:1  
    r46  :      ?  <- Arith      0:Sub  1:r46  2:r47  
    r10  :      ?  <- OverflowOf 0:r46  
    r2   :      ?  <- CarryOf    0:r46  
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r48  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r48  
0x486590:
    r45  :      ?  <- Not        0:r5  
    r46  :      ?  <- SetJumpCondition 0:r45  
    r46  :      ?  <- Control    0:JmpExtIf(4744731)  
0x486596:
    r46  :      ?  <- Int        value:8  size:8  
    r12  :      ?  <- Arith      0:Sub  1:r12  2:r46  
    r12  :      ?  <- Get        0:r12  
    r10  :      ?  <- OverflowOf 0:r12  
    r2   :      ?  <- CarryOf    0:r12  
    r6   :      ?  <- SignOf     0:r12  
    r5   :      ?  <- IsZero     0:r12  
    r47  :      ?  <- Part       src:r12  offset:0  size:1  
    r3   :      ?  <- Parity     0:r47  
0x48659a:
    r45  :      ?  <- Int        value:8  size:8  
    r45  :      ?  <- Arith      0:Add  1:r45  2:r17  
    r16  :      ?  <- Get        0:r45  
0x48659e:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r24  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r14  :      ?  <- Get        0:r45  
0x4865a3:
    r46  :      ?  <- Part       src:r19  offset:0  size:4  
    r48  :      ?  <- Part       src:r19  offset:0  size:4  
    r46  :      ?  <- Arith      0:BitXor  1:r46  2:r48  
    r46  :      ?  <- Widen      reg:r46  target_size:8  sign:false  
    r19  :      ?  <- Get        0:r46  
    r10  :      ?  <- False      
    r2   :      ?  <- False      
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r49  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r49  
0x4865a5:
    r12  :      ?  <- ArithK     0:Add  1:r12  2:-8  
    r46  :      ?  <- StoreMem   addr:r12  value:r16  
0x4865a6:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r17  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r20  :      ?  <- Get        0:r45  
0x4865aa:
    r45  :      ?  <- Int        value:2  size:4  
    r45  :      ?  <- Widen      reg:r45  target_size:8  sign:false  
    r21  :      ?  <- Get        0:r45  
0x4865b0:
    r45  :      ?  <- Int        value:5624160  size:8  
    r47  :      ?  <- Void       
    r47  :      ?  <- Get        0:r14  
    r48  :      ?  <- Void       
    r48  :      ?  <- Get        0:r15  
    r49  :      ?  <- Void       
    r49  :      ?  <- Get        0:r19  
    r50  :      ?  <- Void       
    r50  :      ?  <- Get        0:r18  
    r50  :      ?  <- Part       src:r50  offset:0  size:4  
    r51  :      ?  <- Void       
    r51  :      ?  <- Get        0:r20  
    r52  :      ?  <- Void       
    r52  :      ?  <- Get        0:r21  
    r52  :      ?  <- Part       src:r52  offset:0  size:4  
    r53  :      ?  <- Void       
    r54  :      ?  <- ArithK     0:Add  1:r12  2:8  
    r53  :      ?  <- LoadMem    addr:r54  size:8  
    r46  :      ?  <- CArg       value:r53  next_arg:None  
    r46  :      ?  <- CArg       value:r52  next_arg:r46  
    r46  :      ?  <- CArg       value:r51  next_arg:r46  
    r46  :      ?  <- CArg       value:r50  next_arg:r46  
    r46  :      ?  <- CArg       value:r49  next_arg:r46  
    r46  :      ?  <- CArg       value:r48  next_arg:r46  
    r46  :      ?  <- CArg       value:r47  next_arg:r46  
    r46  :      ?  <- Call       callee:r45  first_arg:r46  
    r2   :      ?  <- UndefinedBool 
    r3   :      ?  <- UndefinedBool 
    r4   :      ?  <- UndefinedBool 
    r5   :      ?  <- UndefinedBool 
    r6   :      ?  <- UndefinedBool 
    r7   :      ?  <- UndefinedBool 
    r8   :      ?  <- UndefinedBool 
    r9   :      ?  <- UndefinedBool 
    r10  :      ?  <- UndefinedBool 
    r16  :      ?  <- Part       src:r46  offset:0  size:8  
0x4865b5:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r24  
    r46  :      ?  <- StoreMem   addr:r46  value:r16  
0x4865ba:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r16  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865bb:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r19  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865bc:
    r45  :      ?  <- Int        value:-24  size:8  
    r45  :      ?  <- Arith      0:Add  1:r45  2:r11  
    r12  :      ?  <- Get        0:r45  
0x4865c0:
    r14  :      ?  <- Get        0:r25  
0x4865c3:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r17  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865c4:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r24  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865c6:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r25  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865c8:
    r45  :      ?  <- LoadMem    addr:r12  size:8  
    r11  :      ?  <- Get        0:r45  
    r12  :      ?  <- ArithK     0:Add  1:r12  2:8  
0x4865c9:
    r45  :      ?  <- Control    0:JmpExt(4577184)  
0x4865d0:
    r46  :      ?  <- Int        value:0  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r17  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r19  :      ?  <- Get        0:r45  
0x4865d3:
    r46  :      ?  <- Int        value:-17  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r15  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r18  :      ?  <- Get        0:r45  
0x4865d7:
    r46  :      ?  <- Int        value:8  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r19  
    r45  :      ?  <- LoadMem    addr:r46  size:1  
    r45  :      ?  <- Widen      reg:r45  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r16  offset:1  size:7  
    r16  :      ?  <- Concat     lo:r45  hi:r47  
0x4865db:
    r46  :      ?  <- Part       src:r16  offset:0  size:1  
    r47  :      ?  <- Int        value:9  size:1  
    r46  :      ?  <- Arith      0:Sub  1:r46  2:r47  
    r10  :      ?  <- OverflowOf 0:r46  
    r2   :      ?  <- CarryOf    0:r46  
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r48  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r48  
0x4865dd:
    r45  :      ?  <- Not        0:r5  
    r46  :      ?  <- SetJumpCondition 0:r45  
    r46  :      ?  <- Control    0:JmpExtIf(4744590)  
0x4865e0:
    r46  :      ?  <- Int        value:24  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r19  
    r45  :      ?  <- LoadMem    addr:r46  size:8  
    r14  :      ?  <- Get        0:r45  
0x4865e4:
    r46  :      ?  <- Int        value:16  size:8  
    r17  :      ?  <- Arith      0:Add  1:r17  2:r46  
    r17  :      ?  <- Get        0:r17  
    r10  :      ?  <- OverflowOf 0:r17  
    r2   :      ?  <- CarryOf    0:r17  
    r6   :      ?  <- SignOf     0:r17  
    r5   :      ?  <- IsZero     0:r17  
    r47  :      ?  <- Part       src:r17  offset:0  size:1  
    r3   :      ?  <- Parity     0:r47  
0x4865e8:
    r19  :      ?  <- Get        0:r15  
0x4865eb:
    r15  :      ?  <- Get        0:r17  
0x4865ee:
    r45  :      ?  <- Int        value:4299888  size:8  
    r47  :      ?  <- Void       
    r47  :      ?  <- Get        0:r14  
    r48  :      ?  <- Void       
    r48  :      ?  <- Get        0:r15  
    r49  :      ?  <- Void       
    r49  :      ?  <- Get        0:r19  
    r50  :      ?  <- Void       
    r50  :      ?  <- Get        0:r18  
    r46  :      ?  <- CArg       value:r50  next_arg:None  
    r46  :      ?  <- CArg       value:r49  next_arg:r46  
    r46  :      ?  <- CArg       value:r48  next_arg:r46  
    r46  :      ?  <- CArg       value:r47  next_arg:r46  
    r46  :      ?  <- Call       callee:r45  first_arg:r46  
    r2   :      ?  <- UndefinedBool 
    r3   :      ?  <- UndefinedBool 
    r4   :      ?  <- UndefinedBool 
    r5   :      ?  <- UndefinedBool 
    r6   :      ?  <- UndefinedBool 
    r7   :      ?  <- UndefinedBool 
    r8   :      ?  <- UndefinedBool 
    r9   :      ?  <- UndefinedBool 
    r10  :      ?  <- UndefinedBool 
0x4865f3:
    r45  :      ?  <- Control    0:JmpExt(4744636)  
0x4865f8:
    r46  :      ?  <- Int        value:-3  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r15  
    r45  :      ?  <- LoadMem    addr:r46  size:1  
    r45  :      ?  <- Widen      reg:r45  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r18  offset:1  size:7  
    r18  :      ?  <- Concat     lo:r45  hi:r47  
0x4865fc:
    r45  :      ?  <- Control    0:JmpExt(4744579)  
0x486600:
    r46  :      ?  <- Int        value:-5  size:8  
    r46  :      ?  <- Arith      0:Add  1:r46  2:r15  
    r45  :      ?  <- LoadMem    addr:r46  size:2  
    r45  :      ?  <- Widen      reg:r45  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r18  offset:2  size:6  
    r18  :      ?  <- Concat     lo:r45  hi:r47  
0x486604:
    r45  :      ?  <- Control    0:JmpExt(4744579)  
0x486610:
    r46  :      ?  <- Part       src:r18  offset:0  size:1  
    r47  :      ?  <- Int        value:3  size:1  
    r46  :      ?  <- Arith      0:Shr  1:r46  2:r47  
    r48  :      ?  <- Part       src:r18  offset:1  size:7  
    r18  :      ?  <- Concat     lo:r46  hi:r48  
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r49  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r49  
0x486613:
    r46  :      ?  <- Part       src:r18  offset:0  size:1  
    r46  :      ?  <- Widen      reg:r46  target_size:4  sign:false  
    r47  :      ?  <- Part       src:r18  offset:1  size:7  
    r18  :      ?  <- Concat     lo:r46  hi:r47  
0x486616:
    r45  :      ?  <- Control    0:JmpExt(4744579)  
0x48661b:
    r45  :      ?  <- Int        value:6979771  size:4  
    r45  :      ?  <- Widen      reg:r45  target_size:8  sign:false  
    r19  :      ?  <- Get        0:r45  
0x486620:
    r45  :      ?  <- Int        value:352  size:4  
    r45  :      ?  <- Widen      reg:r45  target_size:8  sign:false  
    r15  :      ?  <- Get        0:r45  
0x486625:
    r45  :      ?  <- Int        value:6982459  size:4  
    r45  :      ?  <- Widen      reg:r45  target_size:8  sign:false  
    r14  :      ?  <- Get        0:r45  
0x48662a:
    r46  :      ?  <- Part       src:r16  offset:0  size:4  
    r48  :      ?  <- Part       src:r16  offset:0  size:4  
    r46  :      ?  <- Arith      0:BitXor  1:r46  2:r48  
    r46  :      ?  <- Widen      reg:r46  target_size:8  sign:false  
    r16  :      ?  <- Get        0:r46  
    r10  :      ?  <- False      
    r2   :      ?  <- False      
    r6   :      ?  <- SignOf     0:r46  
    r5   :      ?  <- IsZero     0:r46  
    r49  :      ?  <- Part       src:r46  offset:0  size:1  
    r3   :      ?  <- Parity     0:r49  
0x48662c:
    r45  :      ?  <- Int        value:4990320  size:8  
    r47  :      ?  <- Void       
    r47  :      ?  <- Get        0:r14  
    r48  :      ?  <- Void       
    r48  :      ?  <- Get        0:r15  
    r48  :      ?  <- Part       src:r48  offset:0  size:4  
    r49  :      ?  <- Void       
    r49  :      ?  <- Get        0:r19  
    r46  :      ?  <- CArg       value:r49  next_arg:None  
    r46  :      ?  <- CArg       value:r48  next_arg:r46  
    r46  :      ?  <- CArg       value:r47  next_arg:r46  
    r46  :      ?  <- Call       callee:r45  first_arg:r46  
    r2   :      ?  <- UndefinedBool 
    r3   :      ?  <- UndefinedBool 
    r4   :      ?  <- UndefinedBool 
    r5   :      ?  <- UndefinedBool 
    r6   :      ?  <- UndefinedBool 
    r7   :      ?  <- UndefinedBool 
    r8   :      ?  <- UndefinedBool 
    r9   :      ?  <- UndefinedBool 
    r10  :      ?  <- UndefinedBool 

# ssa
B0:
    r5   :   bool  <- Ancestral  anc_name:AncestralName("TF")  reg_type:Bool  
    r9   :      8  <- Ancestral  anc_name:AncestralName("RBP")  reg_type:Bytes(8)  
    r10  :      8  <- Ancestral  anc_name:AncestralName("RSP")  reg_type:Bytes(8)  
    r12  :      8  <- Ancestral  anc_name:AncestralName("RDI")  reg_type:Bytes(8)  
    r13  :      8  <- Ancestral  anc_name:AncestralName("RSI")  reg_type:Bytes(8)    ;; TID:2338212
    r15  :      8  <- Ancestral  anc_name:AncestralName("RBX")  reg_type:Bytes(8)  
    r16  :      8  <- Ancestral  anc_name:AncestralName("RCX")  reg_type:Bytes(8)  
    r22  :      8  <- Ancestral  anc_name:AncestralName("R12")  reg_type:Bytes(8)  
    r23  :      8  <- Ancestral  anc_name:AncestralName("R13")  reg_type:Bytes(8)  
    r42  :     16  <- ArithK     0:Add  1:r10  2:-8  
    r43  : effect  <- StoreMem   addr:r42  value:r9  
    r45  :     16  <- ArithK     0:Add  1:r10  2:-16  
    r46  : effect  <- StoreMem   addr:r45  value:r23  
    r47  :     16  <- ArithK     0:Add  1:r10  2:-24  
    r48  : effect  <- StoreMem   addr:r47  value:r22  
    r49  :     16  <- ArithK     0:Add  1:r10  2:-32  
    r50  : effect  <- StoreMem   addr:r49  value:r15  
    r70  :      8  <- Int        value:4575568  size:8    ;; TID:617493
    r73  :      8  <- CArg       value:r13  next_arg:None  
    r74  :      8  <- Call       callee:r70  first_arg:r73    ;; TID:2338212
    r86  :     16  <- ArithK     0:Add  1:r74  2:8  
    r87  :      8  <- LoadMem    addr:r86  size:8  
    r91  :     16  <- ArithK     0:Add  1:r87  2:-1  
    r92  :      1  <- LoadMem    addr:r91  size:1  
    r96  :      4  <- Widen      reg:r92  target_size:4  sign:false  
    r101 :      8  <- ArithK     0:BitAnd  1:r96  2:7  
    r110 :      1  <- Part       src:r101  offset:0  size:1  
    r112 :      2  <- ArithK     0:Add  1:r110  2:-4  
    r115 :   bool  <- SignOf     0:r112  
    r116 :   bool  <- IsZero     0:r112  
    r119 :   bool  <- Not        0:r115  
    r120 :   bool  <- Not        0:r116  
    r121 :   bool  <- Bool       0:And  1:r119  2:r120  
    r122 : effect  <- SetJumpCondition 0:r121  
    -> Conditional { pos: Ext(4203618), neg: Block(BlockID(1)) }
B2:
    -> Always(Undefined)
B1:
    r124 :      1  <- Part       src:r101  offset:0  size:1  
    r125 :      4  <- Widen      reg:r124  target_size:4  sign:false  
    r126 :      7  <- Part       src:r101  offset:1  size:7  
    r127 :     11  <- Concat     lo:r125  hi:r126  
    r129 :     22  <- ArithK     0:Mul  1:r127  2:8  
    r130 :     44  <- ArithK     0:Add  1:r129  2:6851792  
    r131 : effect  <- SetJumpTarget 0:r130  
    -> Always(Indirect)
B11:
    -> Always(Undefined)
B12:
    r393 :    !!!  <- Call       callee:r45  first_arg:r46  
    -> Always(Undefined)
B7:
    r293 :    !!!  <- SetJumpCondition 0:r45  
    -> Always(Undefined)
B10:
    -> Always(Undefined)
B5:
    r199 :    !!!  <- StoreMem   addr:r12  value:r16  
    r232 :    !!!  <- Call       callee:r45  first_arg:r46  
    r245 :    !!!  <- StoreMem   addr:r46  value:r16  
    -> Always(Undefined)
B8:
    r323 :    !!!  <- Call       callee:r45  first_arg:r46  
    -> Always(Undefined)
B9:
    -> Always(Undefined)
B3:
    r157 :    !!!  <- SetJumpCondition 0:r5  
    -> Always(Undefined)
B4:
    r169 :    !!!  <- SetJumpCondition 0:r45  
    -> Always(Undefined)
B6:
    -> Always(Undefined)
