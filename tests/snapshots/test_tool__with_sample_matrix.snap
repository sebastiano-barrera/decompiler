---
source: tests/test_tool.rs
expression: out
---
sum_matrix 0x4011c9+115 (file 0x11c9)
          4011c9: 55                      push rbp
          4011ca: 48 89 e5                mov rbp,rsp
          4011cd: 48 89 f8                mov rax,rdi
          4011d0: 48 89 f1                mov rcx,rsi
          4011d3: 48 89 c0                mov rax,rax
          4011d6: ba 00 00 00 00          mov edx,0
          4011db: 48 89 ca                mov rdx,rcx
          4011de: 48 89 45 e0             mov [rbp-20h],rax
          4011e2: 48 89 55 e8             mov [rbp-18h],rdx
          4011e6: c7 45 fc 00 00 00 00    mov dword ptr [rbp-4],0
          4011ed: c7 45 f8 00 00 00 00    mov dword ptr [rbp-8],0
          4011f4: eb 39                   jmp short 000000000040122Fh
          4011f6: c7 45 f4 00 00 00 00    mov dword ptr [rbp-0Ch],0
          4011fd: eb 24                   jmp short 0000000000401223h
          4011ff: 48 8b 55 e0             mov rdx,[rbp-20h]
          401203: 8b 45 ec                mov eax,[rbp-14h]
          401206: 0f af 45 f8             imul eax,[rbp-8]
          40120a: 89 c1                   mov ecx,eax
          40120c: 8b 45 f4                mov eax,[rbp-0Ch]
          40120f: 01 c8                   add eax,ecx
          401211: 48 98                   cdqe
          401213: 48 c1 e0 02             shl rax,2
          401217: 48 01 d0                add rax,rdx
          40121a: 8b 00                   mov eax,[rax]
          40121c: 01 45 fc                add [rbp-4],eax
          40121f: 83 45 f4 01             add dword ptr [rbp-0Ch],1
          401223: 8b 45 ec                mov eax,[rbp-14h]
          401226: 39 45 f4                cmp [rbp-0Ch],eax
          401229: 7c d4                   jl short 00000000004011FFh
          40122b: 83 45 f8 01             add dword ptr [rbp-8],1
          40122f: 8b 45 e8                mov eax,[rbp-18h]
          401232: 39 45 f8                cmp [rbp-8],eax
          401235: 7c bf                   jl short 00000000004011F6h
          401237: 8b 45 fc                mov eax,[rbp-4]
          40123a: 5d                      pop rbp
          40123b: c3                      ret

mil program = 
program  195 instrs
    0 r12 <- #pre:stack_bottom
    1 r2 <- #pre:CF
    2 r3 <- #pre:PF
    3 r4 <- #pre:AF
    4 r5 <- #pre:ZF
    5 r6 <- #pre:SF
    6 r7 <- #pre:TF
    7 r8 <- #pre:IF
    8 r9 <- #pre:DF
    9 r10 <- #pre:OF
   10 r11 <- #pre:RBP
   11 r12 <- #pre:RSP
   12 r13 <- #pre:RIP
   13 r14 <- #pre:RDI
   14 r15 <- #pre:RSI
   15 r16 <- #pre:RAX
   16 r17 <- #pre:RBX
   17 r18 <- #pre:RCX
   18 r19 <- #pre:RDX
   19 r20 <- #pre:R8
   20 r21 <- #pre:R9
   21 r22 <- #pre:R10
   22 r23 <- #pre:R11
   23 r24 <- #pre:R12
   24 r25 <- #pre:R13
   25 r26 <- #pre:R14
   26 r27 <- #pre:R15
   27 r28 <- undef
   28 r29 <- undef
   29 r30 <- undef
   30 r31 <- undef
   31 r32 <- undef
   32 r33 <- undef
   33 r34 <- undef
0x4011c9:
   34 r12 <- addk     r12,-8 qword
   35 r29 <- store    *r12 ← r11
0x4011ca:
   36 r11 <- get      r12
0x4011cd:
   37 r16 <- get      r14
0x4011d0:
   38 r18 <- get      r15
0x4011d3:
   39 r16 <- get      r16
0x4011d6:
   40 r28 <- const4   0 (0x0)
   41 r19 <- v8.l4=   r19 ← r28
0x4011db:
   42 r19 <- get      r18
0x4011de:
   43 r29 <- const8   -32 (0xffffffffffffffe0)
   44 r29 <- add      r29,r11  qword
   45 r30 <- store    *r29 ← r16
0x4011e2:
   46 r29 <- const8   -24 (0xffffffffffffffe8)
   47 r29 <- add      r29,r11  qword
   48 r30 <- store    *r29 ← r19
0x4011e6:
   49 r28 <- const4   0 (0x0)
   50 r29 <- const8   -4 (0xfffffffffffffffc)
   51 r29 <- add      r29,r11  qword
   52 r30 <- store    *r29 ← r28
0x4011ed:
   53 r28 <- const4   0 (0x0)
   54 r29 <- const8   -8 (0xfffffffffffffff8)
   55 r29 <- add      r29,r11  qword
   56 r30 <- store    *r29 ← r28
0x4011f4:
   57 r28 <- jmp      169
0x4011f6:
   58 r28 <- const4   0 (0x0)
   59 r29 <- const8   -12 (0xfffffffffffffff4)
   60 r29 <- add      r29,r11  qword
   61 r30 <- store    *r29 ← r28
0x4011fd:
   62 r28 <- jmp      137
0x4011ff:
   63 r29 <- const8   -32 (0xffffffffffffffe0)
   64 r29 <- add      r29,r11  qword
   65 r28 <- loadm8   addr:r29
   66 r19 <- get      r28
0x401203:
   67 r29 <- const8   -20 (0xffffffffffffffec)
   68 r29 <- add      r29,r11  qword
   69 r28 <- loadm4   addr:r29
   70 r16 <- v8.l4=   r16 ← r28
0x401206:
   71 r28 <- TODO     unsupported: imul eax,[rbp-8]
0x40120a:
   72 r28 <- l4       r16
   73 r18 <- v8.l4=   r18 ← r28
0x40120c:
   74 r29 <- const8   -12 (0xfffffffffffffff4)
   75 r29 <- add      r29,r11  qword
   76 r28 <- loadm4   addr:r29
   77 r16 <- v8.l4=   r16 ← r28
0x40120f:
   78 r28 <- l4       r16
   79 r29 <- l4       r18
   80 r28 <- add      r28,r29  dword
   81 r16 <- v8.l4=   r16 ← r28
   82 r10 <- overflow r28
   83 r2 <- carry    r28
   84 r6 <- sign     r28
   85 r5 <- is0      r28
   86 r30 <- l1       r28
   87 r3 <- parity   r30
0x401211:
   88 r28 <- TODO     unsupported: cdqe
0x401213:
   89 r29 <- const1   2 (0x2)
   90 r29 <- widen    1->8 r29
   91 r16 <- shl      r16,r29  qword
   92 r16 <- get      r16
   93 r6 <- sign     r16
   94 r5 <- is0      r16
   95 r30 <- l1       r16
   96 r3 <- parity   r30
0x401217:
   97 r16 <- add      r16,r19  qword
   98 r16 <- get      r16
   99 r10 <- overflow r16
  100 r2 <- carry    r16
  101 r6 <- sign     r16
  102 r5 <- is0      r16
  103 r30 <- l1       r16
  104 r3 <- parity   r30
0x40121a:
  105 r29 <- const8   0 (0x0)
  106 r29 <- add      r29,r16  qword
  107 r28 <- loadm4   addr:r29
  108 r16 <- v8.l4=   r16 ← r28
0x40121c:
  109 r29 <- const8   -4 (0xfffffffffffffffc)
  110 r29 <- add      r29,r11  qword
  111 r28 <- loadm4   addr:r29
  112 r30 <- l4       r16
  113 r28 <- add      r28,r30  dword
  114 r31 <- const8   -4 (0xfffffffffffffffc)
  115 r31 <- add      r31,r11  qword
  116 r32 <- store    *r31 ← r28
  117 r10 <- overflow r28
  118 r2 <- carry    r28
  119 r6 <- sign     r28
  120 r5 <- is0      r28
  121 r33 <- l1       r28
  122 r3 <- parity   r33
0x40121f:
  123 r29 <- const8   -12 (0xfffffffffffffff4)
  124 r29 <- add      r29,r11  qword
  125 r28 <- loadm4   addr:r29
  126 r30 <- const4   1 (0x1)
  127 r28 <- add      r28,r30  dword
  128 r31 <- const8   -12 (0xfffffffffffffff4)
  129 r31 <- add      r31,r11  qword
  130 r32 <- store    *r31 ← r28
  131 r10 <- overflow r28
  132 r2 <- carry    r28
  133 r6 <- sign     r28
  134 r5 <- is0      r28
  135 r33 <- l1       r28
  136 r3 <- parity   r33
0x401223:
  137 r29 <- const8   -20 (0xffffffffffffffec)
  138 r29 <- add      r29,r11  qword
  139 r28 <- loadm4   addr:r29
  140 r16 <- v8.l4=   r16 ← r28
0x401226:
  141 r29 <- const8   -12 (0xfffffffffffffff4)
  142 r29 <- add      r29,r11  qword
  143 r28 <- loadm4   addr:r29
  144 r30 <- l4       r16
  145 r28 <- sub      r28,r30  dword
  146 r10 <- overflow r28
  147 r2 <- carry    r28
  148 r6 <- sign     r28
  149 r5 <- is0      r28
  150 r31 <- l1       r28
  151 r3 <- parity   r31
0x401229:
  152 r28 <- ==       r6,r10
  153 r28 <- not      r28
  154 r29 <- jmp.if   r28,63
0x40122b:
  155 r29 <- const8   -8 (0xfffffffffffffff8)
  156 r29 <- add      r29,r11  qword
  157 r28 <- loadm4   addr:r29
  158 r30 <- const4   1 (0x1)
  159 r28 <- add      r28,r30  dword
  160 r31 <- const8   -8 (0xfffffffffffffff8)
  161 r31 <- add      r31,r11  qword
  162 r32 <- store    *r31 ← r28
  163 r10 <- overflow r28
  164 r2 <- carry    r28
  165 r6 <- sign     r28
  166 r5 <- is0      r28
  167 r33 <- l1       r28
  168 r3 <- parity   r33
0x40122f:
  169 r29 <- const8   -24 (0xffffffffffffffe8)
  170 r29 <- add      r29,r11  qword
  171 r28 <- loadm4   addr:r29
  172 r16 <- v8.l4=   r16 ← r28
0x401232:
  173 r29 <- const8   -8 (0xfffffffffffffff8)
  174 r29 <- add      r29,r11  qword
  175 r28 <- loadm4   addr:r29
  176 r30 <- l4       r16
  177 r28 <- sub      r28,r30  dword
  178 r10 <- overflow r28
  179 r2 <- carry    r28
  180 r6 <- sign     r28
  181 r5 <- is0      r28
  182 r31 <- l1       r28
  183 r3 <- parity   r31
0x401235:
  184 r28 <- ==       r6,r10
  185 r28 <- not      r28
  186 r29 <- jmp.if   r28,58
0x401237:
  187 r29 <- const8   -4 (0xfffffffffffffffc)
  188 r29 <- add      r29,r11  qword
  189 r28 <- loadm4   addr:r29
  190 r16 <- v8.l4=   r16 ← r28
0x40123a:
  191 r28 <- loadm8   addr:r12
  192 r11 <- get      r28
  193 r12 <- addk     r12,8 qword
0x40123b:
  194 r28 <- ret      r16


ssa pre-xform:
ssa program  112 instrs
.B0:    ;;  addr:0x0; 58 insn 0 phis
         r10 <- #pre:RBP
         r11 <- #pre:RSP
  (  2)  r13 <- #pre:RDI
  (  2)  r14 <- #pre:RSI
  ( 20)  r34 <- addk     r11,-8 qword
         r35 <- store    *r34 ← r10
         r43 <- const8   -32 (0xffffffffffffffe0)
         r44 <- add      r43,r34  qword
         r45 <- store    *r44 ← r13
         r46 <- const8   -24 (0xffffffffffffffe8)
         r47 <- add      r46,r34  qword
         r48 <- store    *r47 ← r14
         r49 <- const4   0 (0x0)
         r50 <- const8   -4 (0xfffffffffffffffc)
         r51 <- add      r50,r34  qword
         r52 <- store    *r51 ← r49
         r53 <- const4   0 (0x0)
         r54 <- const8   -8 (0xfffffffffffffff8)
         r55 <- add      r54,r34  qword
         r56 <- store    *r55 ← r53
         r57 <- jmp      169
.B5:    ;;  preds:B0,B4  addr:0x40122f; 18 insn 1 phis
                  ɸ  B0     B4     
           r198   <- r13    r140   
         r169 <- const8   -24 (0xffffffffffffffe8)
         r170 <- add      r169,r34  qword
         r171 <- loadm4   addr:r170
  (  3)  r172 <- v8.l4=   r198 ← r171
         r173 <- const8   -8 (0xfffffffffffffff8)
         r174 <- add      r173,r34  qword
         r175 <- loadm4   addr:r174
         r176 <- l4       r172
  (  2)  r177 <- sub      r175,r176  dword
         r178 <- overflow r177
         r180 <- sign     r177
         r184 <- ==       r180,r178
         r185 <- not      r184
         r186 <- jmp.if   r185,58
.B1:    ;;  preds:B5  addr:0x4011f6; 5 insn 0 phis
         r58 <- const4   0 (0x0)
         r59 <- const8   -12 (0xfffffffffffffff4)
         r60 <- add      r59,r34  qword
         r61 <- store    *r60 ← r58
         r62 <- jmp      137
.B3:    ;;  preds:B1,B2  addr:0x401223; 18 insn 1 phis
                  ɸ  B1     B2     
           r195   <- r172   r108   
         r137 <- const8   -20 (0xffffffffffffffec)
         r138 <- add      r137,r34  qword
         r139 <- loadm4   addr:r138
  (  3)  r140 <- v8.l4=   r195 ← r139
         r141 <- const8   -12 (0xfffffffffffffff4)
         r142 <- add      r141,r34  qword
         r143 <- loadm4   addr:r142
         r144 <- l4       r140
  (  2)  r145 <- sub      r143,r144  dword
         r146 <- overflow r145
         r148 <- sign     r145
         r152 <- ==       r148,r146
         r153 <- not      r152
         r154 <- jmp.if   r153,63
.B2:    ;;  preds:B3  addr:0x4011ff; 74 insn 0 phis
         r63 <- const8   -32 (0xffffffffffffffe0)
         r64 <- add      r63,r34  qword
  (  2)  r65 <- loadm8   addr:r64
         r67 <- const8   -20 (0xffffffffffffffec)
         r68 <- add      r67,r34  qword
         r69 <- loadm4   addr:r68
  (  3)  r70 <- v8.l4=   r140 ← r69
         r71 <- TODO     unsupported: imul eax,[rbp-8]
         r72 <- l4       r70
         r73 <- v8.l4=   r14 ← r72
         r74 <- const8   -12 (0xfffffffffffffff4)
         r75 <- add      r74,r34  qword
  (  2)  r76 <- loadm4   addr:r75
  (  2)  r77 <- v8.l4=   r70 ← r76
         r78 <- l4       r77
         r79 <- l4       r73
         r80 <- add      r78,r79  dword
         r81 <- v8.l4=   r77 ← r80
         r88 <- TODO     unsupported: cdqe
         r89 <- const1   2 (0x2)
         r90 <- widen    1->8 r89
  (  2)  r91 <- shl      r81,r90  qword
  (  2)  r97 <- add      r91,r65  qword
         r105 <- const8   0 (0x0)
         r106 <- add      r105,r97  qword
         r107 <- loadm4   addr:r106
  (  2)  r108 <- v8.l4=   r97 ← r107
         r109 <- const8   -4 (0xfffffffffffffffc)
         r110 <- add      r109,r34  qword
         r111 <- loadm4   addr:r110
         r112 <- l4       r108
         r113 <- add      r111,r112  dword
         r114 <- const8   -4 (0xfffffffffffffffc)
         r115 <- add      r114,r34  qword
         r116 <- store    *r115 ← r113
         r123 <- const8   -12 (0xfffffffffffffff4)
         r124 <- add      r123,r34  qword
         r125 <- loadm4   addr:r124
         r126 <- const4   1 (0x1)
         r127 <- add      r125,r126  dword
         r128 <- const8   -12 (0xfffffffffffffff4)
         r129 <- add      r128,r34  qword
         r130 <- store    *r129 ← r127
.B4:    ;;  preds:B3  addr:0x40122b; 14 insn 0 phis
         r155 <- const8   -8 (0xfffffffffffffff8)
         r156 <- add      r155,r34  qword
         r157 <- loadm4   addr:r156
         r158 <- const4   1 (0x1)
         r159 <- add      r157,r158  dword
         r160 <- const8   -8 (0xfffffffffffffff8)
         r161 <- add      r160,r34  qword
         r162 <- store    *r161 ← r159
.B6:    ;;  preds:B5  addr:0x401237; 8 insn 0 phis
         r187 <- const8   -4 (0xfffffffffffffffc)
         r188 <- add      r187,r34  qword
         r189 <- loadm4   addr:r188
         r190 <- v8.l4=   r172 ← r189
         r194 <- ret      r190


ssa post-xform:
ssa program  81 instrs
.B0:    ;;  addr:0x0; 58 insn 0 phis
         r10 <- #pre:RBP
  ( 20)  r11 <- #pre:RSP
  (  2)  r13 <- #pre:RDI
         r14 <- #pre:RSI
         r34 <- addk     r11,-8 qword
         r35 <- store    *r34 ← r10
         r44 <- addk     r11,-40 qword
         r45 <- store    *r44 ← r13
         r47 <- addk     r11,-32 qword
         r48 <- store    *r47 ← r14
         r49 <- const4   0 (0x0)
         r51 <- addk     r11,-12 qword
         r52 <- store    *r51 ← r49
         r53 <- const4   0 (0x0)
         r55 <- addk     r11,-16 qword
         r56 <- store    *r55 ← r53
         r57 <- jmp      169
.B5:    ;;  preds:B0,B4  addr:0x40122f; 18 insn 1 phis
                  ɸ  B0     B4     
  (  2)    r198   <- r13    r140   
         r170 <- addk     r11,-32 qword
  (  2)  r171 <- loadm4   addr:r170
         r172 <- v8.l4=   r198 ← r171
         r174 <- addk     r11,-16 qword
         r175 <- loadm4   addr:r174
  (  2)  r177 <- sub      r175,r171  dword
         r178 <- overflow r177
         r180 <- sign     r177
         r184 <- ==       r180,r178
         r185 <- not      r184
         r186 <- jmp.if   r185,58
.B1:    ;;  preds:B5  addr:0x4011f6; 5 insn 0 phis
         r58 <- const4   0 (0x0)
         r60 <- addk     r11,-20 qword
         r61 <- store    *r60 ← r58
         r62 <- jmp      137
.B3:    ;;  preds:B1,B2  addr:0x401223; 18 insn 1 phis
                  ɸ  B1     B2     
  (  2)    r195   <- r172   r108   
         r138 <- addk     r11,-28 qword
  (  2)  r139 <- loadm4   addr:r138
         r140 <- v8.l4=   r195 ← r139
         r142 <- addk     r11,-20 qword
         r143 <- loadm4   addr:r142
  (  2)  r145 <- sub      r143,r139  dword
         r146 <- overflow r145
         r148 <- sign     r145
         r152 <- ==       r148,r146
         r153 <- not      r152
         r154 <- jmp.if   r153,63
.B2:    ;;  preds:B3  addr:0x4011ff; 74 insn 0 phis
         r64 <- addk     r11,-40 qword
  (  2)  r65 <- loadm8   addr:r64
         r68 <- addk     r11,-28 qword
         r69 <- loadm4   addr:r68
         r71 <- TODO     unsupported: imul eax,[rbp-8]
         r75 <- addk     r11,-20 qword
         r76 <- loadm4   addr:r75
         r80 <- add      r76,r69  dword
         r81 <- v8.l4=   r195 ← r80
         r88 <- TODO     unsupported: cdqe
         r89 <- const1   2 (0x2)
         r90 <- widen    1->8 r89
  (  2)  r91 <- shl      r81,r90  qword
         r97 <- add      r91,r65  qword
         r106 <- add      r91,r65  qword
  (  2)  r107 <- loadm4   addr:r106
         r108 <- v8.l4=   r97 ← r107
         r110 <- addk     r11,-12 qword
         r111 <- loadm4   addr:r110
         r113 <- add      r111,r107  dword
         r115 <- addk     r11,-12 qword
         r116 <- store    *r115 ← r113
         r124 <- addk     r11,-20 qword
         r125 <- loadm4   addr:r124
         r127 <- addk     r125,1 qword
         r129 <- addk     r11,-20 qword
         r130 <- store    *r129 ← r127
.B4:    ;;  preds:B3  addr:0x40122b; 14 insn 0 phis
         r156 <- addk     r11,-16 qword
         r157 <- loadm4   addr:r156
         r159 <- addk     r157,1 qword
         r161 <- addk     r11,-16 qword
         r162 <- store    *r161 ← r159
.B6:    ;;  preds:B5  addr:0x401237; 8 insn 0 phis
         r188 <- addk     r11,-12 qword
         r189 <- loadm4   addr:r188
         r190 <- v8.l4=   r198 ← r189
         r194 <- ret      r190



'T0: {
    [<pre:RSP> + -8]:8 = <pre:RBP>;
    [<pre:RSP> + -40]:8 = <pre:RDI>;
    [<pre:RSP> + -32]:8 = <pre:RSI>;
    [<pre:RSP> + -12]:4 = 0;
    [<pre:RSP> + -16]:4 = 0;
    let mut r198 = <pre:RDI>;
    
    'T5(r198): {
        let r177 = [<pre:RSP> + -16]:4 - [<pre:RSP> + -32]:4;
        if not sign (r177) == overflow (r177) return (r198 with l4 = [<pre:RSP> + -12]:4) else {
            [<pre:RSP> + -20]:4 = 0;
            let mut r195 = (r198 with l4 = [<pre:RSP> + -32]:4);
            
            'T3(r195): {
                let r145 = [<pre:RSP> + -20]:4 - [<pre:RSP> + -28]:4;
                if not sign (r145) == overflow (r145) {
                    [<pre:RSP> + -16]:8 = [<pre:RSP> + -16]:4 + 1;
                    goto T5 (r198 = (r195 with l4 = [<pre:RSP> + -28]:4))
                } else {
                    <-- TODO: unsupported: imul eax,[rbp-8] -->;
                    <-- TODO: unsupported: cdqe -->;
                    let r91 = (r195 with l4 = [<pre:RSP> + -20]:4 + [<pre:RSP> + -28]:4) << (2).widen[1->8];
                    [<pre:RSP> + -12]:4 = [<pre:RSP> + -12]:4 + [r91 + [<pre:RSP> + -40]:8]:4;
                    [<pre:RSP> + -20]:8 = [<pre:RSP> + -20]:4 + 1;
                    goto T3 (r195 = (r91 + [<pre:RSP> + -40]:8 with l4 = [r91 + [<pre:RSP> + -40]:8]:4))
                }
            }
        }
    }
}
