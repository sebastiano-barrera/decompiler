---
source: tests/test_tool.rs
assertion_line: 46
expression: out
---
sum_matrix 0x4011c9+115 (file 0x11c9)
          4011c9: 55                      push rbp
          4011ca: 48 89 e5                mov rbp,rsp
          4011cd: 48 89 f8                mov rax,rdi
          4011d0: 48 89 f1                mov rcx,rsi
          4011d3: 48 89 c0                mov rax,rax
          4011d6: ba 00 00 00 00          mov edx,0
          4011db: 48 89 ca                mov rdx,rcx
          4011de: 48 89 45 e0             mov [rbp-20h],rax
          4011e2: 48 89 55 e8             mov [rbp-18h],rdx
          4011e6: c7 45 fc 00 00 00 00    mov dword ptr [rbp-4],0
          4011ed: c7 45 f8 00 00 00 00    mov dword ptr [rbp-8],0
          4011f4: eb 39                   jmp short 000000000040122Fh
          4011f6: c7 45 f4 00 00 00 00    mov dword ptr [rbp-0Ch],0
          4011fd: eb 24                   jmp short 0000000000401223h
          4011ff: 48 8b 55 e0             mov rdx,[rbp-20h]
          401203: 8b 45 ec                mov eax,[rbp-14h]
          401206: 0f af 45 f8             imul eax,[rbp-8]
          40120a: 89 c1                   mov ecx,eax
          40120c: 8b 45 f4                mov eax,[rbp-0Ch]
          40120f: 01 c8                   add eax,ecx
          401211: 48 98                   cdqe
          401213: 48 c1 e0 02             shl rax,2
          401217: 48 01 d0                add rax,rdx
          40121a: 8b 00                   mov eax,[rax]
          40121c: 01 45 fc                add [rbp-4],eax
          40121f: 83 45 f4 01             add dword ptr [rbp-0Ch],1
          401223: 8b 45 ec                mov eax,[rbp-14h]
          401226: 39 45 f4                cmp [rbp-0Ch],eax
          401229: 7c d4                   jl short 00000000004011FFh
          40122b: 83 45 f8 01             add dword ptr [rbp-8],1
          40122f: 8b 45 e8                mov eax,[rbp-18h]
          401232: 39 45 f8                cmp [rbp-8],eax
          401235: 7c bf                   jl short 00000000004011F6h
          401237: 8b 45 fc                mov eax,[rbp-4]
          40123a: 5d                      pop rbp
          40123b: c3                      ret

mil program = 
program  208 instrs
    0 r12 <- Ancestral(AncestralName("stack_bottom"))
    1 r2 <- Ancestral(AncestralName("CF"))
    2 r3 <- Ancestral(AncestralName("PF"))
    3 r4 <- Ancestral(AncestralName("AF"))
    4 r5 <- Ancestral(AncestralName("ZF"))
    5 r6 <- Ancestral(AncestralName("SF"))
    6 r7 <- Ancestral(AncestralName("TF"))
    7 r8 <- Ancestral(AncestralName("IF"))
    8 r9 <- Ancestral(AncestralName("DF"))
    9 r10 <- Ancestral(AncestralName("OF"))
   10 r11 <- Ancestral(AncestralName("RBP"))
   11 r12 <- Ancestral(AncestralName("RSP"))
   12 r13 <- Ancestral(AncestralName("RIP"))
   13 r14 <- Ancestral(AncestralName("RDI"))
   14 r15 <- Ancestral(AncestralName("RSI"))
   15 r16 <- Ancestral(AncestralName("RAX"))
   16 r17 <- Ancestral(AncestralName("RBX"))
   17 r18 <- Ancestral(AncestralName("RCX"))
   18 r19 <- Ancestral(AncestralName("RDX"))
   19 r20 <- Ancestral(AncestralName("R8"))
   20 r21 <- Ancestral(AncestralName("R9"))
   21 r22 <- Ancestral(AncestralName("R10"))
   22 r23 <- Ancestral(AncestralName("R11"))
   23 r24 <- Ancestral(AncestralName("R12"))
   24 r25 <- Ancestral(AncestralName("R13"))
   25 r26 <- Ancestral(AncestralName("R14"))
   26 r27 <- Ancestral(AncestralName("R15"))
   27 r28 <- Undefined
   28 r29 <- Undefined
   29 r30 <- Undefined
   30 r31 <- Undefined
   31 r32 <- Undefined
   32 r33 <- Undefined
   33 r34 <- Undefined
   34 r35 <- Undefined
   35 r36 <- Undefined
   36 r37 <- Undefined
   37 r38 <- Undefined
0x4011c9:
   38 r12 <- ArithK8(Add, r12, -8)
   39 r29 <- StoreMem(r12, r11)
0x4011ca:
   40 r11 <- Get(r12)
0x4011cd:
   41 r16 <- Get(r14)
0x4011d0:
   42 r18 <- Get(r15)
0x4011d3:
   43 r16 <- Get(r16)
0x4011d6:
   44 r28 <- Const4(0)
   45 r19 <- Part { src: r19, offset: 4, size: 4 }
   46 r19 <- Concat { lo: r28, hi: r19 }
0x4011db:
   47 r19 <- Get(r18)
0x4011de:
   48 r29 <- Const8(-32)
   49 r29 <- Arith8(Add, r29, r11)
   50 r30 <- StoreMem(r29, r16)
0x4011e2:
   51 r29 <- Const8(-24)
   52 r29 <- Arith8(Add, r29, r11)
   53 r30 <- StoreMem(r29, r19)
0x4011e6:
   54 r28 <- Const4(0)
   55 r29 <- Const8(-4)
   56 r29 <- Arith8(Add, r29, r11)
   57 r30 <- StoreMem(r29, r28)
0x4011ed:
   58 r28 <- Const4(0)
   59 r29 <- Const8(-8)
   60 r29 <- Arith8(Add, r29, r11)
   61 r30 <- StoreMem(r29, r28)
0x4011f4:
   62 r28 <- Jmp(180)
0x4011f6:
   63 r28 <- Const4(0)
   64 r29 <- Const8(-12)
   65 r29 <- Arith8(Add, r29, r11)
   66 r30 <- StoreMem(r29, r28)
0x4011fd:
   67 r28 <- Jmp(147)
0x4011ff:
   68 r29 <- Const8(-32)
   69 r29 <- Arith8(Add, r29, r11)
   70 r28 <- LoadMem8(r29)
   71 r19 <- Get(r28)
0x401203:
   72 r29 <- Const8(-20)
   73 r29 <- Arith8(Add, r29, r11)
   74 r28 <- LoadMem4(r29)
   75 r16 <- Part { src: r16, offset: 4, size: 4 }
   76 r16 <- Concat { lo: r28, hi: r16 }
0x401206:
   77 r28 <- TODO("unsupported: imul eax,[rbp-8]")
0x40120a:
   78 r28 <- Part { src: r16, offset: 0, size: 4 }
   79 r18 <- Part { src: r18, offset: 4, size: 4 }
   80 r18 <- Concat { lo: r28, hi: r18 }
0x40120c:
   81 r29 <- Const8(-12)
   82 r29 <- Arith8(Add, r29, r11)
   83 r28 <- LoadMem4(r29)
   84 r16 <- Part { src: r16, offset: 4, size: 4 }
   85 r16 <- Concat { lo: r28, hi: r16 }
0x40120f:
   86 r28 <- Part { src: r16, offset: 0, size: 4 }
   87 r29 <- Part { src: r18, offset: 0, size: 4 }
   88 r28 <- Arith4(Add, r28, r29)
   89 r16 <- Part { src: r16, offset: 4, size: 4 }
   90 r16 <- Concat { lo: r28, hi: r16 }
   91 r10 <- OverflowOf(r28)
   92 r2 <- CarryOf(r28)
   93 r6 <- SignOf(r28)
   94 r5 <- IsZero(r28)
   95 r30 <- Part { src: r28, offset: 0, size: 1 }
   96 r3 <- Parity(r30)
0x401211:
   97 r28 <- TODO("unsupported: cdqe")
0x401213:
   98 r29 <- Const1(2)
   99 r29 <- Widen1_8(r29)
  100 r16 <- Arith8(Shl, r16, r29)
  101 r16 <- Get(r16)
  102 r6 <- SignOf(r16)
  103 r5 <- IsZero(r16)
  104 r30 <- Part { src: r16, offset: 0, size: 1 }
  105 r3 <- Parity(r30)
0x401217:
  106 r16 <- Arith8(Add, r16, r19)
  107 r16 <- Get(r16)
  108 r10 <- OverflowOf(r16)
  109 r2 <- CarryOf(r16)
  110 r6 <- SignOf(r16)
  111 r5 <- IsZero(r16)
  112 r30 <- Part { src: r16, offset: 0, size: 1 }
  113 r3 <- Parity(r30)
0x40121a:
  114 r29 <- Const8(0)
  115 r29 <- Arith8(Add, r29, r16)
  116 r28 <- LoadMem4(r29)
  117 r16 <- Part { src: r16, offset: 4, size: 4 }
  118 r16 <- Concat { lo: r28, hi: r16 }
0x40121c:
  119 r29 <- Const8(-4)
  120 r29 <- Arith8(Add, r29, r11)
  121 r28 <- LoadMem4(r29)
  122 r30 <- Part { src: r16, offset: 0, size: 4 }
  123 r28 <- Arith4(Add, r28, r30)
  124 r31 <- Const8(-4)
  125 r31 <- Arith8(Add, r31, r11)
  126 r32 <- StoreMem(r31, r28)
  127 r10 <- OverflowOf(r28)
  128 r2 <- CarryOf(r28)
  129 r6 <- SignOf(r28)
  130 r5 <- IsZero(r28)
  131 r33 <- Part { src: r28, offset: 0, size: 1 }
  132 r3 <- Parity(r33)
0x40121f:
  133 r29 <- Const8(-12)
  134 r29 <- Arith8(Add, r29, r11)
  135 r28 <- LoadMem4(r29)
  136 r30 <- Const4(1)
  137 r28 <- Arith4(Add, r28, r30)
  138 r31 <- Const8(-12)
  139 r31 <- Arith8(Add, r31, r11)
  140 r32 <- StoreMem(r31, r28)
  141 r10 <- OverflowOf(r28)
  142 r2 <- CarryOf(r28)
  143 r6 <- SignOf(r28)
  144 r5 <- IsZero(r28)
  145 r33 <- Part { src: r28, offset: 0, size: 1 }
  146 r3 <- Parity(r33)
0x401223:
  147 r29 <- Const8(-20)
  148 r29 <- Arith8(Add, r29, r11)
  149 r28 <- LoadMem4(r29)
  150 r16 <- Part { src: r16, offset: 4, size: 4 }
  151 r16 <- Concat { lo: r28, hi: r16 }
0x401226:
  152 r29 <- Const8(-12)
  153 r29 <- Arith8(Add, r29, r11)
  154 r28 <- LoadMem4(r29)
  155 r30 <- Part { src: r16, offset: 0, size: 4 }
  156 r28 <- Arith4(Sub, r28, r30)
  157 r10 <- OverflowOf(r28)
  158 r2 <- CarryOf(r28)
  159 r6 <- SignOf(r28)
  160 r5 <- IsZero(r28)
  161 r31 <- Part { src: r28, offset: 0, size: 1 }
  162 r3 <- Parity(r31)
0x401229:
  163 r28 <- Cmp(EQ, r6, r10)
  164 r28 <- Not(r28)
  165 r29 <- JmpIf { cond: r28, target: 68 }
0x40122b:
  166 r29 <- Const8(-8)
  167 r29 <- Arith8(Add, r29, r11)
  168 r28 <- LoadMem4(r29)
  169 r30 <- Const4(1)
  170 r28 <- Arith4(Add, r28, r30)
  171 r31 <- Const8(-8)
  172 r31 <- Arith8(Add, r31, r11)
  173 r32 <- StoreMem(r31, r28)
  174 r10 <- OverflowOf(r28)
  175 r2 <- CarryOf(r28)
  176 r6 <- SignOf(r28)
  177 r5 <- IsZero(r28)
  178 r33 <- Part { src: r28, offset: 0, size: 1 }
  179 r3 <- Parity(r33)
0x40122f:
  180 r29 <- Const8(-24)
  181 r29 <- Arith8(Add, r29, r11)
  182 r28 <- LoadMem4(r29)
  183 r16 <- Part { src: r16, offset: 4, size: 4 }
  184 r16 <- Concat { lo: r28, hi: r16 }
0x401232:
  185 r29 <- Const8(-8)
  186 r29 <- Arith8(Add, r29, r11)
  187 r28 <- LoadMem4(r29)
  188 r30 <- Part { src: r16, offset: 0, size: 4 }
  189 r28 <- Arith4(Sub, r28, r30)
  190 r10 <- OverflowOf(r28)
  191 r2 <- CarryOf(r28)
  192 r6 <- SignOf(r28)
  193 r5 <- IsZero(r28)
  194 r31 <- Part { src: r28, offset: 0, size: 1 }
  195 r3 <- Parity(r31)
0x401235:
  196 r28 <- Cmp(EQ, r6, r10)
  197 r28 <- Not(r28)
  198 r29 <- JmpIf { cond: r28, target: 63 }
0x401237:
  199 r29 <- Const8(-4)
  200 r29 <- Arith8(Add, r29, r11)
  201 r28 <- LoadMem4(r29)
  202 r16 <- Part { src: r16, offset: 4, size: 4 }
  203 r16 <- Concat { lo: r28, hi: r16 }
0x40123a:
  204 r28 <- LoadMem8(r12)
  205 r11 <- Get(r28)
  206 r12 <- ArithK8(Add, r12, 8)
0x40123b:
  207 r28 <- Ret(r16)


ssa pre-xform:
ssa program  214 instrs
.B0:    ;; .
         r62 <- Jmp(180)
         r13 <- Ancestral(AncestralName("RDI"))
         r210 <- Upsilon { value: r13, phi_ref: r209 }
.B5:    ;; preds:B0,B4.
         r11 <- Ancestral(AncestralName("RSP"))
  (  8)  r38 <- ArithK8(Add, r11, -8)
         r180 <- Const8(-24)
         r181 <- Arith8(Add, r180, r38)
         r182 <- LoadMem4(r181)
         r209 <- Phi { size: 8 }
         r183 <- Part { src: r209, offset: 4, size: 4 }
  (  3)  r184 <- Concat { lo: r182, hi: r183 }
         r188 <- Part { src: r184, offset: 0, size: 4 }
         r185 <- Const8(-8)
         r186 <- Arith8(Add, r185, r38)
         r187 <- LoadMem4(r186)
  (  2)  r189 <- Arith4(Sub, r187, r188)
         r190 <- OverflowOf(r189)
         r192 <- SignOf(r189)
         r196 <- Cmp(EQ, r192, r190)
         r197 <- Not(r196)
         r198 <- JmpIf { cond: r197, target: 63 }
.B1:    ;; preds:B5.
         r67 <- Jmp(147)
         r211 <- Upsilon { value: r184, phi_ref: r208 }
.B3:    ;; preds:B1,B2.
         r147 <- Const8(-20)
         r148 <- Arith8(Add, r147, r38)
         r149 <- LoadMem4(r148)
         r208 <- Phi { size: 8 }
         r150 <- Part { src: r208, offset: 4, size: 4 }
  (  3)  r151 <- Concat { lo: r149, hi: r150 }
         r155 <- Part { src: r151, offset: 0, size: 4 }
         r152 <- Const8(-12)
         r153 <- Arith8(Add, r152, r38)
         r154 <- LoadMem4(r153)
  (  2)  r156 <- Arith4(Sub, r154, r155)
         r157 <- OverflowOf(r156)
         r159 <- SignOf(r156)
         r163 <- Cmp(EQ, r159, r157)
         r164 <- Not(r163)
         r165 <- JmpIf { cond: r164, target: 68 }
.B2:    ;; preds:B3.
         r77 <- TODO("unsupported: imul eax,[rbp-8]")
         r97 <- TODO("unsupported: cdqe")
         r68 <- Const8(-32)
         r69 <- Arith8(Add, r68, r38)
         r70 <- LoadMem8(r69)
         r98 <- Const1(2)
         r99 <- Widen1_8(r98)
         r72 <- Const8(-20)
         r73 <- Arith8(Add, r72, r38)
         r74 <- LoadMem4(r73)
         r75 <- Part { src: r151, offset: 4, size: 4 }
  (  2)  r76 <- Concat { lo: r74, hi: r75 }
         r78 <- Part { src: r76, offset: 0, size: 4 }
         r14 <- Ancestral(AncestralName("RSI"))
         r79 <- Part { src: r14, offset: 4, size: 4 }
         r80 <- Concat { lo: r78, hi: r79 }
         r87 <- Part { src: r80, offset: 0, size: 4 }
         r81 <- Const8(-12)
         r82 <- Arith8(Add, r81, r38)
         r83 <- LoadMem4(r82)
         r84 <- Part { src: r76, offset: 4, size: 4 }
  (  2)  r85 <- Concat { lo: r83, hi: r84 }
         r86 <- Part { src: r85, offset: 0, size: 4 }
         r88 <- Arith4(Add, r86, r87)
         r89 <- Part { src: r85, offset: 4, size: 4 }
         r90 <- Concat { lo: r88, hi: r89 }
         r100 <- Arith8(Shl, r90, r99)
  (  2)  r106 <- Arith8(Add, r100, r70)
         r114 <- Const8(0)
         r115 <- Arith8(Add, r114, r106)
         r116 <- LoadMem4(r115)
         r117 <- Part { src: r106, offset: 4, size: 4 }
         r118 <- Concat { lo: r116, hi: r117 }
         r213 <- Upsilon { value: r118, phi_ref: r208 }
.B4:    ;; preds:B3.
         r212 <- Upsilon { value: r151, phi_ref: r209 }
.B6:    ;; preds:B5.
         r199 <- Const8(-4)
         r200 <- Arith8(Add, r199, r38)
         r201 <- LoadMem4(r200)
         r202 <- Part { src: r184, offset: 4, size: 4 }
         r203 <- Concat { lo: r201, hi: r202 }
         r207 <- Ret(r203)


ssa post-xform:
ssa program  214 instrs
.B0:    ;; .
         r62 <- Jmp(180)
         r13 <- Ancestral(AncestralName("RDI"))
         r210 <- Upsilon { value: r13, phi_ref: r209 }
.B5:    ;; preds:B0,B4.
         r11 <- Ancestral(AncestralName("RSP"))
  (  8)  r38 <- ArithK8(Add, r11, -8)
         r180 <- Const8(-24)
         r181 <- Arith8(Add, r180, r38)
         r182 <- LoadMem4(r181)
         r209 <- Phi { size: 8 }
         r183 <- Part { src: r209, offset: 4, size: 4 }
  (  3)  r184 <- Concat { lo: r182, hi: r183 }
         r188 <- Part { src: r184, offset: 0, size: 4 }
         r185 <- Const8(-8)
         r186 <- Arith8(Add, r185, r38)
         r187 <- LoadMem4(r186)
  (  2)  r189 <- Arith4(Sub, r187, r188)
         r190 <- OverflowOf(r189)
         r192 <- SignOf(r189)
         r196 <- Cmp(EQ, r192, r190)
         r197 <- Not(r196)
         r198 <- JmpIf { cond: r197, target: 63 }
.B1:    ;; preds:B5.
         r67 <- Jmp(147)
         r211 <- Upsilon { value: r184, phi_ref: r208 }
.B3:    ;; preds:B1,B2.
         r147 <- Const8(-20)
         r148 <- Arith8(Add, r147, r38)
         r149 <- LoadMem4(r148)
         r208 <- Phi { size: 8 }
         r150 <- Part { src: r208, offset: 4, size: 4 }
  (  3)  r151 <- Concat { lo: r149, hi: r150 }
         r155 <- Part { src: r151, offset: 0, size: 4 }
         r152 <- Const8(-12)
         r153 <- Arith8(Add, r152, r38)
         r154 <- LoadMem4(r153)
  (  2)  r156 <- Arith4(Sub, r154, r155)
         r157 <- OverflowOf(r156)
         r159 <- SignOf(r156)
         r163 <- Cmp(EQ, r159, r157)
         r164 <- Not(r163)
         r165 <- JmpIf { cond: r164, target: 68 }
.B2:    ;; preds:B3.
         r77 <- TODO("unsupported: imul eax,[rbp-8]")
         r97 <- TODO("unsupported: cdqe")
         r68 <- Const8(-32)
         r69 <- Arith8(Add, r68, r38)
         r70 <- LoadMem8(r69)
         r98 <- Const1(2)
         r99 <- Widen1_8(r98)
         r72 <- Const8(-20)
         r73 <- Arith8(Add, r72, r38)
         r74 <- LoadMem4(r73)
         r75 <- Part { src: r151, offset: 4, size: 4 }
  (  2)  r76 <- Concat { lo: r74, hi: r75 }
         r78 <- Part { src: r76, offset: 0, size: 4 }
         r14 <- Ancestral(AncestralName("RSI"))
         r79 <- Part { src: r14, offset: 4, size: 4 }
         r80 <- Concat { lo: r78, hi: r79 }
         r87 <- Part { src: r80, offset: 0, size: 4 }
         r81 <- Const8(-12)
         r82 <- Arith8(Add, r81, r38)
         r83 <- LoadMem4(r82)
         r84 <- Part { src: r76, offset: 4, size: 4 }
  (  2)  r85 <- Concat { lo: r83, hi: r84 }
         r86 <- Part { src: r85, offset: 0, size: 4 }
         r88 <- Arith4(Add, r86, r87)
         r89 <- Part { src: r85, offset: 4, size: 4 }
         r90 <- Concat { lo: r88, hi: r89 }
         r100 <- Arith8(Shl, r90, r99)
  (  2)  r106 <- Arith8(Add, r100, r70)
         r114 <- Const8(0)
         r115 <- Arith8(Add, r114, r106)
         r116 <- LoadMem4(r115)
         r117 <- Part { src: r106, offset: 4, size: 4 }
         r118 <- Concat { lo: r116, hi: r117 }
         r213 <- Upsilon { value: r118, phi_ref: r208 }
.B4:    ;; preds:B3.
         r212 <- Upsilon { value: r151, phi_ref: r209 }
.B6:    ;; preds:B5.
         r199 <- Const8(-4)
         r200 <- Arith8(Add, r199, r38)
         r201 <- LoadMem4(r200)
         r202 <- Part { src: r184, offset: 4, size: 4 }
         r203 <- Concat { lo: r201, hi: r202 }
         r207 <- Ret(r203)


cfg dom tree:
BlockID(0)
|  BlockID(5)
|  |  BlockID(1)
|  |  |  BlockID(3)
|  |  |  |  BlockID(2)
|  |  |  |  BlockID(4)
|  |  BlockID(6)

T0: {
  
  r209 := pre:RDI;
  goto T5
  T5: {
    let r38 = pre:RSP + -8;
    let r184 = r209[4 .. 8]⧺[0xffffffffffffffe8 /* -24 */ + r38]:4;
    let r189 = [0xfffffffffffffff8 /* -8 */ + r38]:4 - r184[0 .. 4];
    if(!(EQ(SignOf(r189), OverflowOf(r189)))) {
      
      r208 := r209[4 .. 8]⧺[0xffffffffffffffe8 /* -24 */ + r38]:4;
      goto T3
      T3: {
        let r151 = r208[4 .. 8]⧺[0xffffffffffffffec /* -20 */ + r38]:4;
        let r156 = [0xfffffffffffffff4 /* -12 */ + r38]:4 - r151[0 .. 4];
        if(!(EQ(SignOf(r156), OverflowOf(r156)))) {
          TODO /* unsupported: imul eax,[rbp-8] */
          TODO /* unsupported: cdqe */
          let r76 = r151[4 .. 8]⧺[0xffffffffffffffec /* -20 */ + r38]:4;
          let r85 = r76[4 .. 8]⧺[0xfffffffffffffff4 /* -12 */ + r38]:4;
          let r106 = r85[4 .. 8]⧺r85[0 .. 4] + pre:RSI[4 .. 8]⧺r76[0 .. 4][0 .. 4] / Widen1_8(0x2 /* 2 */) + [0xffffffffffffffe0 /* -32 */ + r38]:8;
          r208 := r106[4 .. 8]⧺[0x0 /* 0 */ + r106]:4;
          loop T3
        }
        r209 := r208[4 .. 8]⧺[0xffffffffffffffec /* -20 */ + r38]:4;
        loop T5
      }
    
    }
    Ret(r184[4 .. 8]⧺[0xfffffffffffffffc /* -4 */ + r38]:4)
  }

}
