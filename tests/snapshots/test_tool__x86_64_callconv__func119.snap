---
source: tests/test_tool.rs
expression: out
---
func119 0x40136d+7 (file 0x136d)
          40136d: f3 0f 10 44 24 10       movss xmm0,[rsp+10h]
          401373: c3                      ret

function type: "func119" func (arg0 *void <TypeID(1v1)>,
                               arg1 *void <TypeID(1v1)>,
                               arg2 *void <TypeID(1v1)>,
                               arg3 *void <TypeID(1v1)>,
                               arg4 small <TypeID(784v1)>,
                               arg5 small <TypeID(784v1)>) float <TypeID(782v1)>
0 warnings.


mil program = 
program  93 instrs
    0 r12 <- Ancestral(AncestralName("stack_bottom"))
    1 r2 <- Ancestral(AncestralName("CF"))
    2 r3 <- Ancestral(AncestralName("PF"))
    3 r4 <- Ancestral(AncestralName("AF"))
    4 r5 <- Ancestral(AncestralName("ZF"))
    5 r6 <- Ancestral(AncestralName("SF"))
    6 r7 <- Ancestral(AncestralName("TF"))
    7 r8 <- Ancestral(AncestralName("IF"))
    8 r9 <- Ancestral(AncestralName("DF"))
    9 r10 <- Ancestral(AncestralName("OF"))
   10 r11 <- Ancestral(AncestralName("RBP"))
   11 r12 <- Ancestral(AncestralName("RSP"))
   12 r13 <- Ancestral(AncestralName("RIP"))
   13 r14 <- Ancestral(AncestralName("RDI"))
   14 r15 <- Ancestral(AncestralName("RSI"))
   15 r16 <- Ancestral(AncestralName("RAX"))
   16 r17 <- Ancestral(AncestralName("RBX"))
   17 r18 <- Ancestral(AncestralName("RCX"))
   18 r19 <- Ancestral(AncestralName("RDX"))
   19 r20 <- Ancestral(AncestralName("R8"))
   20 r21 <- Ancestral(AncestralName("R9"))
   21 r22 <- Ancestral(AncestralName("R10"))
   22 r23 <- Ancestral(AncestralName("R11"))
   23 r24 <- Ancestral(AncestralName("R12"))
   24 r25 <- Ancestral(AncestralName("R13"))
   25 r26 <- Ancestral(AncestralName("R14"))
   26 r27 <- Ancestral(AncestralName("R15"))
   27 r28 <- Ancestral(AncestralName("ZMM0"))
   28 r29 <- Ancestral(AncestralName("ZMM1"))
   29 r30 <- Ancestral(AncestralName("ZMM2"))
   30 r31 <- Ancestral(AncestralName("ZMM3"))
   31 r32 <- Ancestral(AncestralName("ZMM4"))
   32 r33 <- Ancestral(AncestralName("ZMM5"))
   33 r34 <- Ancestral(AncestralName("ZMM6"))
   34 r35 <- Ancestral(AncestralName("ZMM7"))
   35 r36 <- Ancestral(AncestralName("ZMM8"))
   36 r37 <- Ancestral(AncestralName("ZMM9"))
   37 r38 <- Ancestral(AncestralName("ZMM10"))
   38 r39 <- Ancestral(AncestralName("ZMM11"))
   39 r40 <- Ancestral(AncestralName("ZMM12"))
   40 r41 <- Ancestral(AncestralName("ZMM13"))
   41 r42 <- Ancestral(AncestralName("ZMM14"))
   42 r43 <- Ancestral(AncestralName("ZMM15"))
   43 r44 <- Ancestral(AncestralName("memory"))
   44 r45 <- Undefined
   45 r46 <- Undefined
   46 r47 <- Undefined
   47 r48 <- Undefined
   48 r49 <- Undefined
   49 r50 <- Undefined
   50 r51 <- Undefined
   51 r52 <- Undefined
   52 r53 <- Undefined
   53 r54 <- Undefined
   54 r55 <- Undefined
   55 r56 <- Undefined
   56 r57 <- Undefined
   57 r58 <- Undefined
   58 r59 <- Undefined
   59 r60 <- Undefined
   60 r61 <- Undefined
   61 r62 <- Undefined
   62 r63 <- Undefined
   63 r64 <- Undefined
   64 r65 <- Undefined
   65 r45 <- Ancestral(AncestralName("arg0"))
   66 r15 <- Get(r45)
   67 r46 <- Ancestral(AncestralName("arg1"))
   68 r19 <- Get(r46)
   69 r47 <- Ancestral(AncestralName("arg2"))
   70 r18 <- Get(r47)
   71 r48 <- Ancestral(AncestralName("arg3"))
   72 r20 <- Get(r48)
   73 r49 <- Ancestral(AncestralName("arg4"))
   74 r51 <- Part { src: r49, offset: 0, size: 8 }
   75 r50 <- ArithK(Add, r12, 8)
   76 r44 <- StoreMem { mem: r44, addr: r50, value: r51 }
   77 r51 <- Part { src: r49, offset: 8, size: 8 }
   78 r50 <- ArithK(Add, r12, 16)
   79 r44 <- StoreMem { mem: r44, addr: r50, value: r51 }
   80 r52 <- Ancestral(AncestralName("arg5"))
   81 r54 <- Part { src: r52, offset: 0, size: 8 }
   82 r53 <- ArithK(Add, r12, 24)
   83 r44 <- StoreMem { mem: r44, addr: r53, value: r54 }
   84 r54 <- Part { src: r52, offset: 8, size: 8 }
   85 r53 <- ArithK(Add, r12, 32)
   86 r44 <- StoreMem { mem: r44, addr: r53, value: r54 }
0x40136d:
   87 r45 <- NotYetImplemented("unsupported: movss xmm0,[rsp+10h]")
0x401373:
   88 r45 <- Void
   89 r46 <- Part { src: r28, offset: 0, size: 8 }
   90 r45 <- Concat { lo: r45, hi: r46 }
   91 r45 <- Part { src: r45, offset: 0, size: 4 }
   92 r47 <- Ret(r45)


ssa pre-xform:
ssa program  93 instrs
.B0:    ;; .
  (  2)  r73 <- Ancestral(AncestralName("arg4"))
         r74 <- Part { src: r73, offset: 0, size: 8 }
  (  4)  r11 <- Ancestral(AncestralName("RSP"))
         r75 <- ArithK(Add, r11, 8)
         r43 <- Ancestral(AncestralName("memory"))
         r76 <- StoreMem { mem: r43, addr: r75, value: r74 }
         r77 <- Part { src: r73, offset: 8, size: 8 }
         r78 <- ArithK(Add, r11, 16)
         r79 <- StoreMem { mem: r76, addr: r78, value: r77 }
  (  2)  r80 <- Ancestral(AncestralName("arg5"))
         r81 <- Part { src: r80, offset: 0, size: 8 }
         r82 <- ArithK(Add, r11, 24)
         r83 <- StoreMem { mem: r79, addr: r82, value: r81 }
         r84 <- Part { src: r80, offset: 8, size: 8 }
         r85 <- ArithK(Add, r11, 32)
         r86 <- StoreMem { mem: r83, addr: r85, value: r84 }
         r87 <- NotYetImplemented("unsupported: movss xmm0,[rsp+10h]")
         r27 <- Ancestral(AncestralName("ZMM0"))
         r89 <- Part { src: r27, offset: 0, size: 8 }
         r88 <- Void
         r90 <- Concat { lo: r88, hi: r89 }
         r91 <- Part { src: r90, offset: 0, size: 4 }
         r92 <- Ret(r91)


cfg:
  entry: BlockID(0)
  BlockID(0) [0:93] -> Jmp(BlockID(1))
  BlockID(1) [93:93] -> End
  domtree:
    BlockID(0)
    |  BlockID(1)

ssa post-xform:
ssa program  93 instrs
.B0:    ;; .
  (  2)  r73 <- Ancestral(AncestralName("arg4"))
         r74 <- Part { src: r73, offset: 0, size: 8 }
  (  4)  r11 <- Ancestral(AncestralName("RSP"))
         r75 <- ArithK(Add, r11, 8)
         r43 <- Ancestral(AncestralName("memory"))
         r76 <- StoreMem { mem: r43, addr: r75, value: r74 }
         r77 <- Part { src: r73, offset: 8, size: 8 }
         r78 <- ArithK(Add, r11, 16)
         r79 <- StoreMem { mem: r76, addr: r78, value: r77 }
  (  2)  r80 <- Ancestral(AncestralName("arg5"))
         r81 <- Part { src: r80, offset: 0, size: 8 }
         r82 <- ArithK(Add, r11, 24)
         r83 <- StoreMem { mem: r79, addr: r82, value: r81 }
         r84 <- Part { src: r80, offset: 8, size: 8 }
         r85 <- ArithK(Add, r11, 32)
         r86 <- StoreMem { mem: r83, addr: r85, value: r84 }
         r87 <- NotYetImplemented("unsupported: movss xmm0,[rsp+10h]")
         r27 <- Ancestral(AncestralName("ZMM0"))
         r91 <- Part { src: r27, offset: 0, size: 4 }
         r92 <- Ret(r91)



T0: {
  [pre:RSP + 8] <- pre:arg4[8 .. 0];
  [pre:RSP + 16] <- pre:arg4[16 .. 8];
  [pre:RSP + 24] <- pre:arg5[8 .. 0];
  [pre:RSP + 32] <- pre:arg5[16 .. 8];
  TODO /* unsupported: movss xmm0,[rsp+10h] */
  Ret (pre:ZMM0[4 .. 0])
  end
}
