---
source: decompiler/tests/test_tool.rs
expression: out
---
 --- mil
program  1444 instrs
    0 r12: UnknownUnsized <- Ancestral(AncestralName("stack_bottom"))
    1 r2: UnknownUnsized <- Ancestral(AncestralName("CF"))
    2 r3: UnknownUnsized <- Ancestral(AncestralName("PF"))
    3 r4: UnknownUnsized <- Ancestral(AncestralName("AF"))
    4 r5: UnknownUnsized <- Ancestral(AncestralName("ZF"))
    5 r6: UnknownUnsized <- Ancestral(AncestralName("SF"))
    6 r7: UnknownUnsized <- Ancestral(AncestralName("TF"))
    7 r8: UnknownUnsized <- Ancestral(AncestralName("IF"))
    8 r9: UnknownUnsized <- Ancestral(AncestralName("DF"))
    9 r10: UnknownUnsized <- Ancestral(AncestralName("OF"))
   10 r11: UnknownUnsized <- Ancestral(AncestralName("RBP"))
   11 r12: UnknownUnsized <- Ancestral(AncestralName("RSP"))
   12 r13: UnknownUnsized <- Ancestral(AncestralName("RIP"))
   13 r14: UnknownUnsized <- Ancestral(AncestralName("RDI"))
   14 r15: UnknownUnsized <- Ancestral(AncestralName("RSI"))
   15 r16: UnknownUnsized <- Ancestral(AncestralName("RAX"))
   16 r17: UnknownUnsized <- Ancestral(AncestralName("RBX"))
   17 r18: UnknownUnsized <- Ancestral(AncestralName("RCX"))
   18 r19: UnknownUnsized <- Ancestral(AncestralName("RDX"))
   19 r20: UnknownUnsized <- Ancestral(AncestralName("R8"))
   20 r21: UnknownUnsized <- Ancestral(AncestralName("R9"))
   21 r22: UnknownUnsized <- Ancestral(AncestralName("R10"))
   22 r23: UnknownUnsized <- Ancestral(AncestralName("R11"))
   23 r24: UnknownUnsized <- Ancestral(AncestralName("R12"))
   24 r25: UnknownUnsized <- Ancestral(AncestralName("R13"))
   25 r26: UnknownUnsized <- Ancestral(AncestralName("R14"))
   26 r27: UnknownUnsized <- Ancestral(AncestralName("R15"))
   27 r28: UnknownUnsized <- Ancestral(AncestralName("ZMM0"))
   28 r29: UnknownUnsized <- Ancestral(AncestralName("ZMM1"))
   29 r30: UnknownUnsized <- Ancestral(AncestralName("ZMM2"))
   30 r31: UnknownUnsized <- Ancestral(AncestralName("ZMM3"))
   31 r32: UnknownUnsized <- Ancestral(AncestralName("ZMM4"))
   32 r33: UnknownUnsized <- Ancestral(AncestralName("ZMM5"))
   33 r34: UnknownUnsized <- Ancestral(AncestralName("ZMM6"))
   34 r35: UnknownUnsized <- Ancestral(AncestralName("ZMM7"))
   35 r36: UnknownUnsized <- Ancestral(AncestralName("ZMM8"))
   36 r37: UnknownUnsized <- Ancestral(AncestralName("ZMM9"))
   37 r38: UnknownUnsized <- Ancestral(AncestralName("ZMM10"))
   38 r39: UnknownUnsized <- Ancestral(AncestralName("ZMM11"))
   39 r40: UnknownUnsized <- Ancestral(AncestralName("ZMM12"))
   40 r41: UnknownUnsized <- Ancestral(AncestralName("ZMM13"))
   41 r42: UnknownUnsized <- Ancestral(AncestralName("ZMM14"))
   42 r43: UnknownUnsized <- Ancestral(AncestralName("ZMM15"))
0x5ddf40:
   43 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   44 r46: UnknownUnsized <- StoreMem { addr: r12, value: r27 }
0x5ddf42:
   45 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   46 r46: UnknownUnsized <- StoreMem { addr: r12, value: r26 }
0x5ddf44:
   47 r26: UnknownUnsized <- Get(r15)
0x5ddf47:
   48 r45: UnknownUnsized <- Const { value: 46, size: 4 }
   49 r46: UnknownUnsized <- Part { src: r15, offset: 4, size: 4 }
   50 r15: UnknownUnsized <- Concat { lo: r45, hi: r46 }
0x5ddf4c:
   51 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   52 r46: UnknownUnsized <- StoreMem { addr: r12, value: r25 }
0x5ddf4e:
   53 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   54 r46: UnknownUnsized <- StoreMem { addr: r12, value: r24 }
0x5ddf50:
   55 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   56 r46: UnknownUnsized <- StoreMem { addr: r12, value: r11 }
0x5ddf51:
   57 r12: UnknownUnsized <- ArithK(Add, r12, -8)
   58 r46: UnknownUnsized <- StoreMem { addr: r12, value: r17 }
0x5ddf52:
   59 r17: UnknownUnsized <- Get(r18)
0x5ddf55:
   60 r46: UnknownUnsized <- Const { value: 88, size: 8 }
   61 r12: UnknownUnsized <- Arith(Sub, r12, r46)
   62 r12: UnknownUnsized <- Get(r12)
   63 r10: UnknownUnsized <- OverflowOf(r12)
   64 r2: UnknownUnsized <- CarryOf(r12)
   65 r6: UnknownUnsized <- SignOf(r12)
   66 r5: UnknownUnsized <- IsZero(r12)
   67 r47: UnknownUnsized <- Part { src: r12, offset: 0, size: 1 }
   68 r3: UnknownUnsized <- Parity(r47)
0x5ddf59:
   69 r46: UnknownUnsized <- Const { value: 64, size: 8 }
   70 r46: UnknownUnsized <- Arith(Add, r46, r12)
   71 r46: UnknownUnsized <- StoreMem { addr: r46, value: r14 }
0x5ddf5e:
   72 r14: UnknownUnsized <- Get(r19)
0x5ddf61:
   73 r46: UnknownUnsized <- Const { value: 32, size: 8 }
   74 r46: UnknownUnsized <- Arith(Add, r46, r12)
   75 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5ddf66:
   76 r46: UnknownUnsized <- Const { value: 0, size: 8 }
   77 r46: UnknownUnsized <- Arith(Add, r46, r12)
   78 r46: UnknownUnsized <- StoreMem { addr: r46, value: r19 }
0x5ddf6a:
   79 r46: UnknownUnsized <- Const { value: 24, size: 8 }
   80 r46: UnknownUnsized <- Arith(Add, r46, r12)
   81 r46: UnknownUnsized <- StoreMem { addr: r46, value: r21 }
0x5ddf6f:
   82 r45: Regular(4247322) <- Const { value: 4199040, size: 8 }
   83 r47: UnknownUnsized <- Void
   84 r47: UnknownUnsized <- Get(r14)
   85 r48: UnknownUnsized <- Void
   86 r48: UnknownUnsized <- Get(r15)
   87 r48: UnknownUnsized <- Part { src: r48, offset: 0, size: 4 }
   88 r46: UnknownUnsized <- CArg { value: r48, next_arg: None }
   89 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
   90 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
   91 r2: UnknownUnsized <- UndefinedBool
   92 r3: UnknownUnsized <- UndefinedBool
   93 r4: UnknownUnsized <- UndefinedBool
   94 r5: UnknownUnsized <- UndefinedBool
   95 r6: UnknownUnsized <- UndefinedBool
   96 r7: UnknownUnsized <- UndefinedBool
   97 r8: UnknownUnsized <- UndefinedBool
   98 r9: UnknownUnsized <- UndefinedBool
   99 r10: UnknownUnsized <- UndefinedBool
  100 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5ddf74:
  101 r20: UnknownUnsized <- Get(r16)
0x5ddf77:
  102 r16: UnknownUnsized <- Arith(BitAnd, r16, r16)
  103 r6: UnknownUnsized <- SignOf(r16)
  104 r5: UnknownUnsized <- IsZero(r16)
  105 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  106 r3: UnknownUnsized <- Parity(r16)
  107 r2: UnknownUnsized <- False
  108 r10: UnknownUnsized <- False
0x5ddf7a:
  109 r45: UnknownUnsized <- SetJumpCondition(r5)
  110 r45: UnknownUnsized <- Control(JmpIf(1415))
0x5ddf80:
  111 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  112 r46: UnknownUnsized <- Arith(Add, r46, r12)
  113 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  114 r16: UnknownUnsized <- Get(r45)
0x5ddf84:
  115 r11: UnknownUnsized <- Get(r20)
0x5ddf87:
  116 r11: UnknownUnsized <- Arith(Sub, r11, r16)
  117 r11: UnknownUnsized <- Get(r11)
  118 r10: UnknownUnsized <- OverflowOf(r11)
  119 r2: UnknownUnsized <- CarryOf(r11)
  120 r6: UnknownUnsized <- SignOf(r11)
  121 r5: UnknownUnsized <- IsZero(r11)
  122 r47: UnknownUnsized <- Part { src: r11, offset: 0, size: 1 }
  123 r3: UnknownUnsized <- Parity(r47)
0x5ddf8a:
  124 r45: UnknownUnsized <- SetJumpCondition(r5)
  125 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5ddf90:
  126 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  127 r46: UnknownUnsized <- Arith(Add, r46, r12)
  128 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  129 r19: UnknownUnsized <- Get(r45)
0x5ddf95:
  130 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  131 r46: UnknownUnsized <- Arith(Add, r46, r19)
  132 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  133 r47: UnknownUnsized <- Const { value: 0, size: 8 }
  134 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  135 r10: UnknownUnsized <- OverflowOf(r45)
  136 r2: UnknownUnsized <- CarryOf(r45)
  137 r6: UnknownUnsized <- SignOf(r45)
  138 r5: UnknownUnsized <- IsZero(r45)
  139 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
  140 r3: UnknownUnsized <- Parity(r48)
0x5ddf99:
  141 r45: UnknownUnsized <- SetJumpCondition(r5)
  142 r45: UnknownUnsized <- Control(JmpIf(1442))
0x5ddf9f:
  143 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  144 r46: UnknownUnsized <- Arith(Add, r46, r26)
  145 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  146 r21: UnknownUnsized <- Get(r45)
0x5ddfa3:
  147 r46: UnknownUnsized <- Part { src: r27, offset: 0, size: 4 }
  148 r48: UnknownUnsized <- Part { src: r27, offset: 0, size: 4 }
  149 r46: UnknownUnsized <- Arith(BitXor, r46, r48)
  150 r49: UnknownUnsized <- Part { src: r27, offset: 4, size: 4 }
  151 r27: UnknownUnsized <- Concat { lo: r46, hi: r49 }
  152 r10: UnknownUnsized <- False
  153 r2: UnknownUnsized <- False
  154 r6: UnknownUnsized <- SignOf(r46)
  155 r5: UnknownUnsized <- IsZero(r46)
  156 r50: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  157 r3: UnknownUnsized <- Parity(r50)
0x5ddfa6:
  158 r46: UnknownUnsized <- Const { value: 72, size: 8 }
  159 r46: UnknownUnsized <- Arith(Add, r46, r12)
  160 r46: UnknownUnsized <- StoreMem { addr: r46, value: r17 }
0x5ddfab:
  161 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  162 r46: UnknownUnsized <- Arith(Add, r46, r21)
  163 r45: UnknownUnsized <- LoadMem { addr: r46, size: 1 }
  164 r47: UnknownUnsized <- Const { value: 0, size: 1 }
  165 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  166 r10: UnknownUnsized <- OverflowOf(r45)
  167 r2: UnknownUnsized <- CarryOf(r45)
  168 r6: UnknownUnsized <- SignOf(r45)
  169 r5: UnknownUnsized <- IsZero(r45)
  170 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
  171 r3: UnknownUnsized <- Parity(r48)
0x5ddfaf:
  172 r45: UnknownUnsized <- SetJumpCondition(r5)
  173 r45: UnknownUnsized <- Control(JmpIf(863))
0x5ddfc0:
  174 r46: UnknownUnsized <- Const { value: 16, size: 8 }
  175 r46: UnknownUnsized <- Arith(Add, r46, r26)
  176 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  177 r15: UnknownUnsized <- Get(r45)
0x5ddfc4:
  178 r46: UnknownUnsized <- Const { value: 16, size: 8 }
  179 r46: UnknownUnsized <- Arith(Add, r46, r12)
  180 r46: UnknownUnsized <- StoreMem { addr: r46, value: r15 }
0x5ddfc9:
  181 r15: UnknownUnsized <- Arith(BitAnd, r15, r15)
  182 r6: UnknownUnsized <- SignOf(r15)
  183 r5: UnknownUnsized <- IsZero(r15)
  184 r47: UnknownUnsized <- Part { src: r15, offset: 0, size: 1 }
  185 r3: UnknownUnsized <- Parity(r15)
  186 r2: UnknownUnsized <- False
  187 r10: UnknownUnsized <- False
0x5ddfcc:
  188 r45: UnknownUnsized <- SetJumpCondition(r5)
  189 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5ddfd2:
  190 r24: UnknownUnsized <- Get(r21)
0x5ddfd5:
  191 r46: UnknownUnsized <- Part { src: r17, offset: 0, size: 4 }
  192 r48: UnknownUnsized <- Part { src: r17, offset: 0, size: 4 }
  193 r46: UnknownUnsized <- Arith(BitXor, r46, r48)
  194 r49: UnknownUnsized <- Part { src: r17, offset: 4, size: 4 }
  195 r17: UnknownUnsized <- Concat { lo: r46, hi: r49 }
  196 r10: UnknownUnsized <- False
  197 r2: UnknownUnsized <- False
  198 r6: UnknownUnsized <- SignOf(r46)
  199 r5: UnknownUnsized <- IsZero(r46)
  200 r50: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  201 r3: UnknownUnsized <- Parity(r50)
0x5ddfd7:
  202 r46: UnknownUnsized <- Part { src: r15, offset: 0, size: 4 }
  203 r47: UnknownUnsized <- Const { value: 3, size: 4 }
  204 r46: UnknownUnsized <- Arith(BitAnd, r46, r47)
  205 r48: UnknownUnsized <- Part { src: r15, offset: 4, size: 4 }
  206 r15: UnknownUnsized <- Concat { lo: r46, hi: r48 }
  207 r10: UnknownUnsized <- False
  208 r2: UnknownUnsized <- False
  209 r6: UnknownUnsized <- SignOf(r46)
  210 r5: UnknownUnsized <- IsZero(r46)
  211 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  212 r3: UnknownUnsized <- Parity(r49)
0x5ddfda:
  213 r45: UnknownUnsized <- SetJumpCondition(r5)
  214 r45: UnknownUnsized <- Control(JmpIf(426))
0x5ddfe0:
  215 r46: UnknownUnsized <- Const { value: 1, size: 8 }
  216 r15: UnknownUnsized <- Arith(Sub, r15, r46)
  217 r10: UnknownUnsized <- OverflowOf(r15)
  218 r2: UnknownUnsized <- CarryOf(r15)
  219 r6: UnknownUnsized <- SignOf(r15)
  220 r5: UnknownUnsized <- IsZero(r15)
  221 r47: UnknownUnsized <- Part { src: r15, offset: 0, size: 1 }
  222 r3: UnknownUnsized <- Parity(r47)
0x5ddfe4:
  223 r45: UnknownUnsized <- SetJumpCondition(r5)
  224 r45: UnknownUnsized <- Control(JmpIf(351))
0x5ddfe6:
  225 r46: UnknownUnsized <- Const { value: 2, size: 8 }
  226 r15: UnknownUnsized <- Arith(Sub, r15, r46)
  227 r10: UnknownUnsized <- OverflowOf(r15)
  228 r2: UnknownUnsized <- CarryOf(r15)
  229 r6: UnknownUnsized <- SignOf(r15)
  230 r5: UnknownUnsized <- IsZero(r15)
  231 r47: UnknownUnsized <- Part { src: r15, offset: 0, size: 1 }
  232 r3: UnknownUnsized <- Parity(r47)
0x5ddfea:
  233 r45: UnknownUnsized <- SetJumpCondition(r5)
  234 r45: UnknownUnsized <- Control(JmpIf(289))
0x5ddfec:
  235 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  236 r46: UnknownUnsized <- Arith(Add, r46, r21)
  237 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  238 r22: UnknownUnsized <- Get(r45)
0x5ddff0:
  239 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  240 r46: UnknownUnsized <- Arith(Add, r46, r12)
  241 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5ddff5:
  242 r25: UnknownUnsized <- Get(r21)
0x5ddff8:
  243 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  244 r46: UnknownUnsized <- Arith(Add, r46, r12)
  245 r46: UnknownUnsized <- StoreMem { addr: r46, value: r21 }
0x5ddffd:
  246 r14: UnknownUnsized <- Get(r22)
0x5de000:
  247 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  248 r46: UnknownUnsized <- Arith(Add, r46, r12)
  249 r46: UnknownUnsized <- StoreMem { addr: r46, value: r22 }
0x5de005:
  250 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  251 r47: UnknownUnsized <- Void
  252 r47: UnknownUnsized <- Get(r14)
  253 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  254 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  255 r2: UnknownUnsized <- UndefinedBool
  256 r3: UnknownUnsized <- UndefinedBool
  257 r4: UnknownUnsized <- UndefinedBool
  258 r5: UnknownUnsized <- UndefinedBool
  259 r6: UnknownUnsized <- UndefinedBool
  260 r7: UnknownUnsized <- UndefinedBool
  261 r8: UnknownUnsized <- UndefinedBool
  262 r9: UnknownUnsized <- UndefinedBool
  263 r10: UnknownUnsized <- UndefinedBool
  264 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de00a:
  265 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  266 r46: UnknownUnsized <- Arith(Add, r46, r12)
  267 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  268 r15: UnknownUnsized <- Get(r45)
0x5de00f:
  269 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  270 r46: UnknownUnsized <- Arith(Add, r46, r12)
  271 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  272 r20: UnknownUnsized <- Get(r45)
0x5de014:
  273 r14: UnknownUnsized <- Get(r24)
0x5de017:
  274 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  275 r10: UnknownUnsized <- OverflowOf(r16)
  276 r2: UnknownUnsized <- CarryOf(r16)
  277 r6: UnknownUnsized <- SignOf(r16)
  278 r5: UnknownUnsized <- IsZero(r16)
  279 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  280 r3: UnknownUnsized <- Parity(r47)
0x5de01a:
  281 r45: UnknownUnsized <- SetJumpCondition(r5)
  282 r45: UnknownUnsized <- Control(JmpIf(1365))
0x5de020:
  283 r45: UnknownUnsized <- Const { value: 1, size: 4 }
  284 r46: UnknownUnsized <- Part { src: r17, offset: 4, size: 4 }
  285 r17: UnknownUnsized <- Concat { lo: r45, hi: r46 }
0x5de025:
  286 r45: UnknownUnsized <- Const { value: 40, size: 8 }
  287 r45: UnknownUnsized <- Arith(Add, r45, r14)
  288 r24: UnknownUnsized <- Get(r45)
0x5de029:
  289 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  290 r46: UnknownUnsized <- Arith(Add, r46, r24)
  291 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  292 r23: UnknownUnsized <- Get(r45)
0x5de02e:
  293 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  294 r46: UnknownUnsized <- Arith(Add, r46, r12)
  295 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de033:
  296 r25: UnknownUnsized <- Get(r24)
0x5de036:
  297 r14: UnknownUnsized <- Get(r23)
0x5de039:
  298 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  299 r46: UnknownUnsized <- Arith(Add, r46, r12)
  300 r46: UnknownUnsized <- StoreMem { addr: r46, value: r23 }
0x5de03e:
  301 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  302 r47: UnknownUnsized <- Void
  303 r47: UnknownUnsized <- Get(r14)
  304 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  305 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  306 r2: UnknownUnsized <- UndefinedBool
  307 r3: UnknownUnsized <- UndefinedBool
  308 r4: UnknownUnsized <- UndefinedBool
  309 r5: UnknownUnsized <- UndefinedBool
  310 r6: UnknownUnsized <- UndefinedBool
  311 r7: UnknownUnsized <- UndefinedBool
  312 r8: UnknownUnsized <- UndefinedBool
  313 r9: UnknownUnsized <- UndefinedBool
  314 r10: UnknownUnsized <- UndefinedBool
  315 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de043:
  316 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  317 r46: UnknownUnsized <- Arith(Add, r46, r12)
  318 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  319 r15: UnknownUnsized <- Get(r45)
0x5de048:
  320 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  321 r46: UnknownUnsized <- Arith(Add, r46, r12)
  322 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  323 r20: UnknownUnsized <- Get(r45)
0x5de04d:
  324 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  325 r10: UnknownUnsized <- OverflowOf(r16)
  326 r2: UnknownUnsized <- CarryOf(r16)
  327 r6: UnknownUnsized <- SignOf(r16)
  328 r5: UnknownUnsized <- IsZero(r16)
  329 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  330 r3: UnknownUnsized <- Parity(r47)
0x5de050:
  331 r45: UnknownUnsized <- SetJumpCondition(r5)
  332 r45: UnknownUnsized <- Control(JmpIf(1319))
0x5de056:
  333 r46: UnknownUnsized <- Const { value: 1, size: 8 }
  334 r17: UnknownUnsized <- Arith(Add, r17, r46)
  335 r17: UnknownUnsized <- Get(r17)
  336 r10: UnknownUnsized <- OverflowOf(r17)
  337 r2: UnknownUnsized <- CarryOf(r17)
  338 r6: UnknownUnsized <- SignOf(r17)
  339 r5: UnknownUnsized <- IsZero(r17)
  340 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
  341 r3: UnknownUnsized <- Parity(r47)
0x5de05a:
  342 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  343 r24: UnknownUnsized <- Arith(Add, r24, r46)
  344 r24: UnknownUnsized <- Get(r24)
  345 r10: UnknownUnsized <- OverflowOf(r24)
  346 r2: UnknownUnsized <- CarryOf(r24)
  347 r6: UnknownUnsized <- SignOf(r24)
  348 r5: UnknownUnsized <- IsZero(r24)
  349 r47: UnknownUnsized <- Part { src: r24, offset: 0, size: 1 }
  350 r3: UnknownUnsized <- Parity(r47)
0x5de05e:
  351 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  352 r46: UnknownUnsized <- Arith(Add, r46, r24)
  353 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  354 r16: UnknownUnsized <- Get(r45)
0x5de063:
  355 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  356 r46: UnknownUnsized <- Arith(Add, r46, r12)
  357 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de068:
  358 r25: UnknownUnsized <- Get(r24)
0x5de06b:
  359 r14: UnknownUnsized <- Get(r16)
0x5de06e:
  360 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  361 r46: UnknownUnsized <- Arith(Add, r46, r12)
  362 r46: UnknownUnsized <- StoreMem { addr: r46, value: r16 }
0x5de073:
  363 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  364 r47: UnknownUnsized <- Void
  365 r47: UnknownUnsized <- Get(r14)
  366 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  367 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  368 r2: UnknownUnsized <- UndefinedBool
  369 r3: UnknownUnsized <- UndefinedBool
  370 r4: UnknownUnsized <- UndefinedBool
  371 r5: UnknownUnsized <- UndefinedBool
  372 r6: UnknownUnsized <- UndefinedBool
  373 r7: UnknownUnsized <- UndefinedBool
  374 r8: UnknownUnsized <- UndefinedBool
  375 r9: UnknownUnsized <- UndefinedBool
  376 r10: UnknownUnsized <- UndefinedBool
  377 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de078:
  378 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  379 r46: UnknownUnsized <- Arith(Add, r46, r12)
  380 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  381 r15: UnknownUnsized <- Get(r45)
0x5de07d:
  382 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  383 r46: UnknownUnsized <- Arith(Add, r46, r12)
  384 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  385 r20: UnknownUnsized <- Get(r45)
0x5de082:
  386 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  387 r10: UnknownUnsized <- OverflowOf(r16)
  388 r2: UnknownUnsized <- CarryOf(r16)
  389 r6: UnknownUnsized <- SignOf(r16)
  390 r5: UnknownUnsized <- IsZero(r16)
  391 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  392 r3: UnknownUnsized <- Parity(r47)
0x5de085:
  393 r45: UnknownUnsized <- SetJumpCondition(r5)
  394 r45: UnknownUnsized <- Control(JmpIf(1273))
0x5de08b:
  395 r46: UnknownUnsized <- Const { value: 16, size: 8 }
  396 r46: UnknownUnsized <- Arith(Add, r46, r12)
  397 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  398 r19: UnknownUnsized <- Get(r45)
0x5de090:
  399 r46: UnknownUnsized <- Const { value: 1, size: 8 }
  400 r17: UnknownUnsized <- Arith(Add, r17, r46)
  401 r17: UnknownUnsized <- Get(r17)
  402 r10: UnknownUnsized <- OverflowOf(r17)
  403 r2: UnknownUnsized <- CarryOf(r17)
  404 r6: UnknownUnsized <- SignOf(r17)
  405 r5: UnknownUnsized <- IsZero(r17)
  406 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
  407 r3: UnknownUnsized <- Parity(r47)
0x5de094:
  408 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  409 r24: UnknownUnsized <- Arith(Add, r24, r46)
  410 r24: UnknownUnsized <- Get(r24)
  411 r10: UnknownUnsized <- OverflowOf(r24)
  412 r2: UnknownUnsized <- CarryOf(r24)
  413 r6: UnknownUnsized <- SignOf(r24)
  414 r5: UnknownUnsized <- IsZero(r24)
  415 r47: UnknownUnsized <- Part { src: r24, offset: 0, size: 1 }
  416 r3: UnknownUnsized <- Parity(r47)
0x5de098:
  417 r17: UnknownUnsized <- Arith(Sub, r17, r19)
  418 r10: UnknownUnsized <- OverflowOf(r17)
  419 r2: UnknownUnsized <- CarryOf(r17)
  420 r6: UnknownUnsized <- SignOf(r17)
  421 r5: UnknownUnsized <- IsZero(r17)
  422 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
  423 r3: UnknownUnsized <- Parity(r47)
0x5de09b:
  424 r45: UnknownUnsized <- SetJumpCondition(r5)
  425 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5de0a1:
  426 r46: UnknownUnsized <- Const { value: 56, size: 8 }
  427 r46: UnknownUnsized <- Arith(Add, r46, r12)
  428 r46: UnknownUnsized <- StoreMem { addr: r46, value: r26 }
0x5de0a6:
  429 r26: UnknownUnsized <- Get(r24)
0x5de0a9:
  430 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  431 r46: UnknownUnsized <- Arith(Add, r46, r12)
  432 r46: UnknownUnsized <- StoreMem { addr: r46, value: r27 }
0x5de0ae:
  433 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  434 r46: UnknownUnsized <- Arith(Add, r46, r12)
  435 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de0b3:
  436 r45: UnknownUnsized <- Control(Jmp(587))
0x5de0c0:
  437 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  438 r46: UnknownUnsized <- Arith(Add, r46, r26)
  439 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  440 r21: UnknownUnsized <- Get(r45)
0x5de0c4:
  441 r45: UnknownUnsized <- Const { value: 40, size: 8 }
  442 r45: UnknownUnsized <- Arith(Add, r45, r26)
  443 r27: UnknownUnsized <- Get(r45)
0x5de0c8:
  444 r45: UnknownUnsized <- Const { value: 1, size: 8 }
  445 r45: UnknownUnsized <- Arith(Add, r45, r17)
  446 r25: UnknownUnsized <- Get(r45)
0x5de0cc:
  447 r17: UnknownUnsized <- Get(r25)
0x5de0cf:
  448 r26: UnknownUnsized <- Get(r27)
0x5de0d2:
  449 r24: UnknownUnsized <- Get(r27)
0x5de0d5:
  450 r14: UnknownUnsized <- Get(r21)
0x5de0d8:
  451 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  452 r46: UnknownUnsized <- Arith(Add, r46, r12)
  453 r46: UnknownUnsized <- StoreMem { addr: r46, value: r21 }
0x5de0dd:
  454 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  455 r47: UnknownUnsized <- Void
  456 r47: UnknownUnsized <- Get(r14)
  457 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  458 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  459 r2: UnknownUnsized <- UndefinedBool
  460 r3: UnknownUnsized <- UndefinedBool
  461 r4: UnknownUnsized <- UndefinedBool
  462 r5: UnknownUnsized <- UndefinedBool
  463 r6: UnknownUnsized <- UndefinedBool
  464 r7: UnknownUnsized <- UndefinedBool
  465 r8: UnknownUnsized <- UndefinedBool
  466 r9: UnknownUnsized <- UndefinedBool
  467 r10: UnknownUnsized <- UndefinedBool
  468 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de0e2:
  469 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  470 r46: UnknownUnsized <- Arith(Add, r46, r12)
  471 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  472 r15: UnknownUnsized <- Get(r45)
0x5de0e7:
  473 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  474 r10: UnknownUnsized <- OverflowOf(r16)
  475 r2: UnknownUnsized <- CarryOf(r16)
  476 r6: UnknownUnsized <- SignOf(r16)
  477 r5: UnknownUnsized <- IsZero(r16)
  478 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  479 r3: UnknownUnsized <- Parity(r47)
0x5de0ea:
  480 r45: UnknownUnsized <- SetJumpCondition(r5)
  481 r45: UnknownUnsized <- Control(JmpIf(671))
0x5de0f0:
  482 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  483 r46: UnknownUnsized <- Arith(Add, r46, r27)
  484 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  485 r18: UnknownUnsized <- Get(r45)
0x5de0f4:
  486 r45: UnknownUnsized <- Const { value: 40, size: 8 }
  487 r45: UnknownUnsized <- Arith(Add, r45, r27)
  488 r26: UnknownUnsized <- Get(r45)
0x5de0f8:
  489 r45: UnknownUnsized <- Const { value: 1, size: 8 }
  490 r45: UnknownUnsized <- Arith(Add, r45, r25)
  491 r17: UnknownUnsized <- Get(r45)
0x5de0fc:
  492 r24: UnknownUnsized <- Get(r26)
0x5de0ff:
  493 r14: UnknownUnsized <- Get(r18)
0x5de102:
  494 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  495 r46: UnknownUnsized <- Arith(Add, r46, r12)
  496 r46: UnknownUnsized <- StoreMem { addr: r46, value: r18 }
0x5de107:
  497 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  498 r47: UnknownUnsized <- Void
  499 r47: UnknownUnsized <- Get(r14)
  500 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  501 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  502 r2: UnknownUnsized <- UndefinedBool
  503 r3: UnknownUnsized <- UndefinedBool
  504 r4: UnknownUnsized <- UndefinedBool
  505 r5: UnknownUnsized <- UndefinedBool
  506 r6: UnknownUnsized <- UndefinedBool
  507 r7: UnknownUnsized <- UndefinedBool
  508 r8: UnknownUnsized <- UndefinedBool
  509 r9: UnknownUnsized <- UndefinedBool
  510 r10: UnknownUnsized <- UndefinedBool
  511 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de10c:
  512 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  513 r46: UnknownUnsized <- Arith(Add, r46, r12)
  514 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  515 r15: UnknownUnsized <- Get(r45)
0x5de111:
  516 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  517 r10: UnknownUnsized <- OverflowOf(r16)
  518 r2: UnknownUnsized <- CarryOf(r16)
  519 r6: UnknownUnsized <- SignOf(r16)
  520 r5: UnknownUnsized <- IsZero(r16)
  521 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  522 r3: UnknownUnsized <- Parity(r47)
0x5de114:
  523 r45: UnknownUnsized <- SetJumpCondition(r5)
  524 r45: UnknownUnsized <- Control(JmpIf(1088))
0x5de11a:
  525 r46: UnknownUnsized <- Const { value: 88, size: 8 }
  526 r46: UnknownUnsized <- Arith(Add, r46, r27)
  527 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  528 r15: UnknownUnsized <- Get(r45)
0x5de11e:
  529 r45: UnknownUnsized <- Const { value: 80, size: 8 }
  530 r45: UnknownUnsized <- Arith(Add, r45, r27)
  531 r26: UnknownUnsized <- Get(r45)
0x5de122:
  532 r45: UnknownUnsized <- Const { value: 2, size: 8 }
  533 r45: UnknownUnsized <- Arith(Add, r45, r25)
  534 r17: UnknownUnsized <- Get(r45)
0x5de126:
  535 r24: UnknownUnsized <- Get(r26)
0x5de129:
  536 r14: UnknownUnsized <- Get(r15)
0x5de12c:
  537 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  538 r46: UnknownUnsized <- Arith(Add, r46, r12)
  539 r46: UnknownUnsized <- StoreMem { addr: r46, value: r15 }
0x5de131:
  540 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  541 r47: UnknownUnsized <- Void
  542 r47: UnknownUnsized <- Get(r14)
  543 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  544 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  545 r2: UnknownUnsized <- UndefinedBool
  546 r3: UnknownUnsized <- UndefinedBool
  547 r4: UnknownUnsized <- UndefinedBool
  548 r5: UnknownUnsized <- UndefinedBool
  549 r6: UnknownUnsized <- UndefinedBool
  550 r7: UnknownUnsized <- UndefinedBool
  551 r8: UnknownUnsized <- UndefinedBool
  552 r9: UnknownUnsized <- UndefinedBool
  553 r10: UnknownUnsized <- UndefinedBool
  554 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de136:
  555 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  556 r46: UnknownUnsized <- Arith(Add, r46, r12)
  557 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  558 r15: UnknownUnsized <- Get(r45)
0x5de13b:
  559 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  560 r10: UnknownUnsized <- OverflowOf(r16)
  561 r2: UnknownUnsized <- CarryOf(r16)
  562 r6: UnknownUnsized <- SignOf(r16)
  563 r5: UnknownUnsized <- IsZero(r16)
  564 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  565 r3: UnknownUnsized <- Parity(r47)
0x5de13e:
  566 r45: UnknownUnsized <- SetJumpCondition(r5)
  567 r45: UnknownUnsized <- Control(JmpIf(1127))
0x5de144:
  568 r46: UnknownUnsized <- Const { value: 16, size: 8 }
  569 r46: UnknownUnsized <- Arith(Add, r46, r12)
  570 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  571 r22: UnknownUnsized <- Get(r45)
0x5de149:
  572 r45: UnknownUnsized <- Const { value: 3, size: 8 }
  573 r45: UnknownUnsized <- Arith(Add, r45, r25)
  574 r17: UnknownUnsized <- Get(r45)
0x5de14d:
  575 r45: UnknownUnsized <- Const { value: 120, size: 8 }
  576 r45: UnknownUnsized <- Arith(Add, r45, r27)
  577 r26: UnknownUnsized <- Get(r45)
0x5de151:
  578 r17: UnknownUnsized <- Arith(Sub, r17, r22)
  579 r10: UnknownUnsized <- OverflowOf(r17)
  580 r2: UnknownUnsized <- CarryOf(r17)
  581 r6: UnknownUnsized <- SignOf(r17)
  582 r5: UnknownUnsized <- IsZero(r17)
  583 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
  584 r3: UnknownUnsized <- Parity(r47)
0x5de154:
  585 r45: UnknownUnsized <- SetJumpCondition(r5)
  586 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5de15a:
  587 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  588 r46: UnknownUnsized <- Arith(Add, r46, r26)
  589 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  590 r27: UnknownUnsized <- Get(r45)
0x5de15e:
  591 r24: UnknownUnsized <- Get(r26)
0x5de161:
  592 r14: UnknownUnsized <- Get(r27)
0x5de164:
  593 r45: Regular(4247299) <- Const { value: 4199136, size: 8 }
  594 r47: UnknownUnsized <- Void
  595 r47: UnknownUnsized <- Get(r14)
  596 r46: UnknownUnsized <- CArg { value: r47, next_arg: None }
  597 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  598 r2: UnknownUnsized <- UndefinedBool
  599 r3: UnknownUnsized <- UndefinedBool
  600 r4: UnknownUnsized <- UndefinedBool
  601 r5: UnknownUnsized <- UndefinedBool
  602 r6: UnknownUnsized <- UndefinedBool
  603 r7: UnknownUnsized <- UndefinedBool
  604 r8: UnknownUnsized <- UndefinedBool
  605 r9: UnknownUnsized <- UndefinedBool
  606 r10: UnknownUnsized <- UndefinedBool
  607 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de169:
  608 r16: UnknownUnsized <- Arith(Sub, r16, r11)
  609 r10: UnknownUnsized <- OverflowOf(r16)
  610 r2: UnknownUnsized <- CarryOf(r16)
  611 r6: UnknownUnsized <- SignOf(r16)
  612 r5: UnknownUnsized <- IsZero(r16)
  613 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  614 r3: UnknownUnsized <- Parity(r47)
0x5de16c:
  615 r45: UnknownUnsized <- Not(r5)
  616 r46: UnknownUnsized <- SetJumpCondition(r45)
  617 r46: UnknownUnsized <- Control(JmpIf(437))
0x5de172:
  618 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  619 r46: UnknownUnsized <- Arith(Add, r46, r12)
  620 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  621 r14: UnknownUnsized <- Get(r45)
0x5de176:
  622 r19: UnknownUnsized <- Get(r11)
0x5de179:
  623 r15: UnknownUnsized <- Get(r27)
0x5de17c:
  624 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
  625 r47: UnknownUnsized <- Void
  626 r47: UnknownUnsized <- Get(r14)
  627 r48: UnknownUnsized <- Void
  628 r48: UnknownUnsized <- Get(r15)
  629 r49: UnknownUnsized <- Void
  630 r49: UnknownUnsized <- Get(r19)
  631 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
  632 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
  633 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
  634 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  635 r2: UnknownUnsized <- UndefinedBool
  636 r3: UnknownUnsized <- UndefinedBool
  637 r4: UnknownUnsized <- UndefinedBool
  638 r5: UnknownUnsized <- UndefinedBool
  639 r6: UnknownUnsized <- UndefinedBool
  640 r7: UnknownUnsized <- UndefinedBool
  641 r8: UnknownUnsized <- UndefinedBool
  642 r9: UnknownUnsized <- UndefinedBool
  643 r10: UnknownUnsized <- UndefinedBool
  644 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de181:
  645 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
  646 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
  647 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
  648 r6: UnknownUnsized <- SignOf(r46)
  649 r5: UnknownUnsized <- IsZero(r46)
  650 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  651 r3: UnknownUnsized <- Parity(r46)
  652 r2: UnknownUnsized <- False
  653 r10: UnknownUnsized <- False
0x5de183:
  654 r45: UnknownUnsized <- Not(r5)
  655 r46: UnknownUnsized <- SetJumpCondition(r45)
  656 r46: UnknownUnsized <- Control(JmpIf(437))
0x5de189:
  657 r25: UnknownUnsized <- Get(r26)
0x5de18c:
  658 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  659 r46: UnknownUnsized <- Arith(Add, r46, r12)
  660 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  661 r27: UnknownUnsized <- Get(r45)
0x5de191:
  662 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  663 r46: UnknownUnsized <- Arith(Add, r46, r12)
  664 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  665 r20: UnknownUnsized <- Get(r45)
0x5de196:
  666 r46: UnknownUnsized <- Const { value: 56, size: 8 }
  667 r46: UnknownUnsized <- Arith(Add, r46, r12)
  668 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  669 r26: UnknownUnsized <- Get(r45)
0x5de19b:
  670 r45: UnknownUnsized <- Control(Jmp(723))
0x5de1a0:
  671 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  672 r46: UnknownUnsized <- Arith(Add, r46, r12)
  673 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  674 r14: UnknownUnsized <- Get(r45)
0x5de1a4:
  675 r19: UnknownUnsized <- Get(r11)
0x5de1a7:
  676 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
  677 r47: UnknownUnsized <- Void
  678 r47: UnknownUnsized <- Get(r14)
  679 r48: UnknownUnsized <- Void
  680 r48: UnknownUnsized <- Get(r15)
  681 r49: UnknownUnsized <- Void
  682 r49: UnknownUnsized <- Get(r19)
  683 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
  684 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
  685 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
  686 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  687 r2: UnknownUnsized <- UndefinedBool
  688 r3: UnknownUnsized <- UndefinedBool
  689 r4: UnknownUnsized <- UndefinedBool
  690 r5: UnknownUnsized <- UndefinedBool
  691 r6: UnknownUnsized <- UndefinedBool
  692 r7: UnknownUnsized <- UndefinedBool
  693 r8: UnknownUnsized <- UndefinedBool
  694 r9: UnknownUnsized <- UndefinedBool
  695 r10: UnknownUnsized <- UndefinedBool
  696 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de1ac:
  697 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
  698 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
  699 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
  700 r6: UnknownUnsized <- SignOf(r46)
  701 r5: UnknownUnsized <- IsZero(r46)
  702 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  703 r3: UnknownUnsized <- Parity(r46)
  704 r2: UnknownUnsized <- False
  705 r10: UnknownUnsized <- False
0x5de1ae:
  706 r45: UnknownUnsized <- Not(r5)
  707 r46: UnknownUnsized <- SetJumpCondition(r45)
  708 r46: UnknownUnsized <- Control(JmpIf(482))
0x5de1b4:
  709 r25: UnknownUnsized <- Get(r24)
0x5de1b7:
  710 r46: UnknownUnsized <- Const { value: 40, size: 8 }
  711 r46: UnknownUnsized <- Arith(Add, r46, r12)
  712 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  713 r27: UnknownUnsized <- Get(r45)
0x5de1bc:
  714 r24: UnknownUnsized <- Get(r26)
0x5de1bf:
  715 r46: UnknownUnsized <- Const { value: 48, size: 8 }
  716 r46: UnknownUnsized <- Arith(Add, r46, r12)
  717 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  718 r20: UnknownUnsized <- Get(r45)
0x5de1c4:
  719 r46: UnknownUnsized <- Const { value: 56, size: 8 }
  720 r46: UnknownUnsized <- Arith(Add, r46, r12)
  721 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  722 r26: UnknownUnsized <- Get(r45)
0x5de1c9:
  723 r46: UnknownUnsized <- Const { value: 32, size: 8 }
  724 r46: UnknownUnsized <- Arith(Add, r46, r12)
  725 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  726 r11: UnknownUnsized <- Get(r45)
0x5de1ce:
  727 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  728 r46: UnknownUnsized <- Arith(Add, r46, r11)
  729 r47: UnknownUnsized <- ArithK(Mul, r27, 8)
  730 r46: UnknownUnsized <- Arith(Add, r46, r47)
  731 r46: UnknownUnsized <- StoreMem { addr: r46, value: r17 }
0x5de1d3:
  732 r24: UnknownUnsized <- Arith(Sub, r24, r26)
  733 r10: UnknownUnsized <- OverflowOf(r24)
  734 r2: UnknownUnsized <- CarryOf(r24)
  735 r6: UnknownUnsized <- SignOf(r24)
  736 r5: UnknownUnsized <- IsZero(r24)
  737 r47: UnknownUnsized <- Part { src: r24, offset: 0, size: 1 }
  738 r3: UnknownUnsized <- Parity(r47)
0x5de1d6:
  739 r45: UnknownUnsized <- SetJumpCondition(r5)
  740 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5de1dc:
  741 r46: UnknownUnsized <- Const { value: 32, size: 8 }
  742 r46: UnknownUnsized <- Arith(Add, r46, r25)
  743 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  744 r47: UnknownUnsized <- Const { value: 0, size: 8 }
  745 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  746 r10: UnknownUnsized <- OverflowOf(r45)
  747 r2: UnknownUnsized <- CarryOf(r45)
  748 r6: UnknownUnsized <- SignOf(r45)
  749 r5: UnknownUnsized <- IsZero(r45)
  750 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
  751 r3: UnknownUnsized <- Parity(r48)
0x5de1e1:
  752 r45: UnknownUnsized <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
0x5de1e5:
  753 r45: UnknownUnsized <- Not(r5)
  754 r46: UnknownUnsized <- SetJumpCondition(r45)
  755 r46: UnknownUnsized <- Control(JmpIf(1012))
0x5de1eb:
  756 r46: UnknownUnsized <- Part { src: r14, offset: 0, size: 1 }
  757 r48: UnknownUnsized <- Part { src: r14, offset: 0, size: 1 }
  758 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
  759 r6: UnknownUnsized <- SignOf(r46)
  760 r5: UnknownUnsized <- IsZero(r46)
  761 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  762 r3: UnknownUnsized <- Parity(r46)
  763 r2: UnknownUnsized <- False
  764 r10: UnknownUnsized <- False
0x5de1ee:
  765 r45: UnknownUnsized <- SetJumpCondition(r5)
  766 r45: UnknownUnsized <- Control(JmpIf(1437))
0x5de1f4:
  767 r45: UnknownUnsized <- Const { value: 1, size: 8 }
  768 r45: UnknownUnsized <- Arith(Add, r45, r20)
  769 r14: UnknownUnsized <- Get(r45)
0x5de1f8:
  770 r45: UnknownUnsized <- Const { value: 46, size: 4 }
  771 r46: UnknownUnsized <- Part { src: r15, offset: 4, size: 4 }
  772 r15: UnknownUnsized <- Concat { lo: r45, hi: r46 }
0x5de1fd:
  773 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  774 r46: UnknownUnsized <- Arith(Add, r46, r12)
  775 r46: UnknownUnsized <- StoreMem { addr: r46, value: r14 }
0x5de201:
  776 r45: Regular(4247322) <- Const { value: 4199040, size: 8 }
  777 r47: UnknownUnsized <- Void
  778 r47: UnknownUnsized <- Get(r14)
  779 r48: UnknownUnsized <- Void
  780 r48: UnknownUnsized <- Get(r15)
  781 r48: UnknownUnsized <- Part { src: r48, offset: 0, size: 4 }
  782 r46: UnknownUnsized <- CArg { value: r48, next_arg: None }
  783 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
  784 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  785 r2: UnknownUnsized <- UndefinedBool
  786 r3: UnknownUnsized <- UndefinedBool
  787 r4: UnknownUnsized <- UndefinedBool
  788 r5: UnknownUnsized <- UndefinedBool
  789 r6: UnknownUnsized <- UndefinedBool
  790 r7: UnknownUnsized <- UndefinedBool
  791 r8: UnknownUnsized <- UndefinedBool
  792 r9: UnknownUnsized <- UndefinedBool
  793 r10: UnknownUnsized <- UndefinedBool
  794 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de206:
  795 r20: UnknownUnsized <- Get(r16)
0x5de209:
  796 r16: UnknownUnsized <- Arith(BitAnd, r16, r16)
  797 r6: UnknownUnsized <- SignOf(r16)
  798 r5: UnknownUnsized <- IsZero(r16)
  799 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  800 r3: UnknownUnsized <- Parity(r16)
  801 r2: UnknownUnsized <- False
  802 r10: UnknownUnsized <- False
0x5de20c:
  803 r45: UnknownUnsized <- SetJumpCondition(r5)
  804 r45: UnknownUnsized <- Control(JmpIf(1198))
0x5de212:
  805 r11: UnknownUnsized <- Get(r16)
0x5de215:
  806 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  807 r46: UnknownUnsized <- Arith(Add, r46, r12)
  808 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  809 r23: UnknownUnsized <- Get(r45)
0x5de219:
  810 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  811 r46: UnknownUnsized <- Arith(Add, r46, r12)
  812 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  813 r16: UnknownUnsized <- Get(r45)
0x5de21e:
  814 r46: UnknownUnsized <- Const { value: 1, size: 8 }
  815 r27: UnknownUnsized <- Arith(Add, r27, r46)
  816 r27: UnknownUnsized <- Get(r27)
  817 r10: UnknownUnsized <- OverflowOf(r27)
  818 r2: UnknownUnsized <- CarryOf(r27)
  819 r6: UnknownUnsized <- SignOf(r27)
  820 r5: UnknownUnsized <- IsZero(r27)
  821 r47: UnknownUnsized <- Part { src: r27, offset: 0, size: 1 }
  822 r3: UnknownUnsized <- Parity(r47)
0x5de222:
  823 r11: UnknownUnsized <- Arith(Sub, r11, r23)
  824 r11: UnknownUnsized <- Get(r11)
  825 r10: UnknownUnsized <- OverflowOf(r11)
  826 r2: UnknownUnsized <- CarryOf(r11)
  827 r6: UnknownUnsized <- SignOf(r11)
  828 r5: UnknownUnsized <- IsZero(r11)
  829 r47: UnknownUnsized <- Part { src: r11, offset: 0, size: 1 }
  830 r3: UnknownUnsized <- Parity(r47)
0x5de225:
  831 r47: UnknownUnsized <- Const { value: 0, size: 8 }
  832 r47: UnknownUnsized <- Arith(Add, r47, r16)
  833 r46: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
  834 r27: UnknownUnsized <- Arith(Sub, r27, r46)
  835 r10: UnknownUnsized <- OverflowOf(r27)
  836 r2: UnknownUnsized <- CarryOf(r27)
  837 r6: UnknownUnsized <- SignOf(r27)
  838 r5: UnknownUnsized <- IsZero(r27)
  839 r48: UnknownUnsized <- Part { src: r27, offset: 0, size: 1 }
  840 r3: UnknownUnsized <- Parity(r48)
0x5de228:
  841 r45: UnknownUnsized <- Not(r2)
  842 r46: UnknownUnsized <- SetJumpCondition(r45)
  843 r46: UnknownUnsized <- Control(JmpIf(1245))
0x5de22e:
  844 r26: UnknownUnsized <- Get(r25)
0x5de231:
  845 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  846 r46: UnknownUnsized <- Arith(Add, r46, r26)
  847 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  848 r21: UnknownUnsized <- Get(r45)
0x5de235:
  849 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  850 r46: UnknownUnsized <- Arith(Add, r46, r21)
  851 r45: UnknownUnsized <- LoadMem { addr: r46, size: 1 }
  852 r47: UnknownUnsized <- Const { value: 0, size: 1 }
  853 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  854 r10: UnknownUnsized <- OverflowOf(r45)
  855 r2: UnknownUnsized <- CarryOf(r45)
  856 r6: UnknownUnsized <- SignOf(r45)
  857 r5: UnknownUnsized <- IsZero(r45)
  858 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
  859 r3: UnknownUnsized <- Parity(r48)
0x5de239:
  860 r45: UnknownUnsized <- Not(r5)
  861 r46: UnknownUnsized <- SetJumpCondition(r45)
  862 r46: UnknownUnsized <- Control(JmpIf(174))
0x5de23f:
  863 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  864 r46: UnknownUnsized <- Arith(Add, r46, r12)
  865 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  866 r14: UnknownUnsized <- Get(r45)
0x5de243:
  867 r46: UnknownUnsized <- Part { src: r15, offset: 0, size: 4 }
  868 r48: UnknownUnsized <- Part { src: r15, offset: 0, size: 4 }
  869 r46: UnknownUnsized <- Arith(BitXor, r46, r48)
  870 r49: UnknownUnsized <- Part { src: r15, offset: 4, size: 4 }
  871 r15: UnknownUnsized <- Concat { lo: r46, hi: r49 }
  872 r10: UnknownUnsized <- False
  873 r2: UnknownUnsized <- False
  874 r6: UnknownUnsized <- SignOf(r46)
  875 r5: UnknownUnsized <- IsZero(r46)
  876 r50: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
  877 r3: UnknownUnsized <- Parity(r50)
0x5de245:
  878 r45: UnknownUnsized <- Const { value: 10, size: 4 }
  879 r46: UnknownUnsized <- Part { src: r19, offset: 4, size: 4 }
  880 r19: UnknownUnsized <- Concat { lo: r45, hi: r46 }
0x5de24a:
  881 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  882 r46: UnknownUnsized <- Arith(Add, r46, r12)
  883 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de24f:
  884 r45: Regular(4247235) <- Const { value: 6451424, size: 8 }
  885 r47: UnknownUnsized <- Void
  886 r47: UnknownUnsized <- Get(r14)
  887 r48: UnknownUnsized <- Void
  888 r48: UnknownUnsized <- Get(r15)
  889 r49: UnknownUnsized <- Void
  890 r49: UnknownUnsized <- Get(r19)
  891 r49: UnknownUnsized <- Part { src: r49, offset: 0, size: 4 }
  892 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
  893 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
  894 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
  895 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
  896 r2: UnknownUnsized <- UndefinedBool
  897 r3: UnknownUnsized <- UndefinedBool
  898 r4: UnknownUnsized <- UndefinedBool
  899 r5: UnknownUnsized <- UndefinedBool
  900 r6: UnknownUnsized <- UndefinedBool
  901 r7: UnknownUnsized <- UndefinedBool
  902 r8: UnknownUnsized <- UndefinedBool
  903 r9: UnknownUnsized <- UndefinedBool
  904 r10: UnknownUnsized <- UndefinedBool
  905 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de254:
  906 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  907 r46: UnknownUnsized <- Arith(Add, r46, r12)
  908 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  909 r20: UnknownUnsized <- Get(r45)
0x5de259:
  910 r46: UnknownUnsized <- Const { value: -1, size: 8 }
  911 r16: UnknownUnsized <- Arith(Sub, r16, r46)
  912 r10: UnknownUnsized <- OverflowOf(r16)
  913 r2: UnknownUnsized <- CarryOf(r16)
  914 r6: UnknownUnsized <- SignOf(r16)
  915 r5: UnknownUnsized <- IsZero(r16)
  916 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  917 r3: UnknownUnsized <- Parity(r47)
0x5de25d:
  918 r17: UnknownUnsized <- Get(r16)
0x5de260:
  919 r45: UnknownUnsized <- SetJumpCondition(r5)
  920 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5de266:
  921 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  922 r46: UnknownUnsized <- Arith(Add, r46, r26)
  923 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  924 r11: UnknownUnsized <- Get(r45)
0x5de26a:
  925 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  926 r46: UnknownUnsized <- Arith(Add, r46, r12)
  927 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de26e:
  928 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  929 r46: UnknownUnsized <- Arith(Add, r46, r11)
  930 r45: UnknownUnsized <- LoadMem { addr: r46, size: 1 }
  931 r47: UnknownUnsized <- Const { value: 0, size: 1 }
  932 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  933 r10: UnknownUnsized <- OverflowOf(r45)
  934 r2: UnknownUnsized <- CarryOf(r45)
  935 r6: UnknownUnsized <- SignOf(r45)
  936 r5: UnknownUnsized <- IsZero(r45)
  937 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
  938 r3: UnknownUnsized <- Parity(r48)
0x5de272:
  939 r45: UnknownUnsized <- Not(r5)
  940 r46: UnknownUnsized <- SetJumpCondition(r45)
  941 r46: UnknownUnsized <- Control(JmpExtIf(4206915))
0x5de278:
  942 r46: UnknownUnsized <- Const { value: 24, size: 8 }
  943 r46: UnknownUnsized <- Arith(Add, r46, r12)
  944 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  945 r18: UnknownUnsized <- Get(r45)
0x5de27d:
  946 r46: UnknownUnsized <- Const { value: 32, size: 8 }
  947 r46: UnknownUnsized <- Arith(Add, r46, r12)
  948 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  949 r26: UnknownUnsized <- Get(r45)
0x5de282:
  950 r46: UnknownUnsized <- Const { value: 64, size: 8 }
  951 r46: UnknownUnsized <- Arith(Add, r46, r12)
  952 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  953 r14: UnknownUnsized <- Get(r45)
0x5de287:
  954 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  955 r46: UnknownUnsized <- Arith(Add, r46, r18)
  956 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  957 r19: UnknownUnsized <- Get(r45)
0x5de28a:
  958 r15: UnknownUnsized <- Get(r26)
0x5de28d:
  959 r18: UnknownUnsized <- Get(r16)
0x5de290:
  960 r46: UnknownUnsized <- Const { value: 8, size: 8 }
  961 r46: UnknownUnsized <- Arith(Add, r46, r11)
  962 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  963 r45: UnknownUnsized <- LoadMem { addr: r45, size: 8 }
  964 r47: UnknownUnsized <- CArg { value: r18, next_arg: None }
  965 r47: UnknownUnsized <- CArg { value: r19, next_arg: Some(r47) }
  966 r47: UnknownUnsized <- CArg { value: r15, next_arg: Some(r47) }
  967 r47: UnknownUnsized <- CArg { value: r14, next_arg: Some(r47) }
  968 r47: UnknownUnsized <- Call { callee: r45, first_arg: Some(r47) }
  969 r2: UnknownUnsized <- UndefinedBool
  970 r3: UnknownUnsized <- UndefinedBool
  971 r4: UnknownUnsized <- UndefinedBool
  972 r5: UnknownUnsized <- UndefinedBool
  973 r6: UnknownUnsized <- UndefinedBool
  974 r7: UnknownUnsized <- UndefinedBool
  975 r8: UnknownUnsized <- UndefinedBool
  976 r9: UnknownUnsized <- UndefinedBool
  977 r10: UnknownUnsized <- UndefinedBool
  978 r47: UnknownUnsized <- Get(r16)
0x5de293:
  979 r25: UnknownUnsized <- Get(r16)
0x5de296:
  980 r16: UnknownUnsized <- Arith(BitAnd, r16, r16)
  981 r6: UnknownUnsized <- SignOf(r16)
  982 r5: UnknownUnsized <- IsZero(r16)
  983 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
  984 r3: UnknownUnsized <- Parity(r16)
  985 r2: UnknownUnsized <- False
  986 r10: UnknownUnsized <- False
0x5de299:
  987 r45: UnknownUnsized <- SetJumpCondition(r5)
  988 r45: UnknownUnsized <- Control(JmpIf(1166))
0x5de29f:
  989 r46: UnknownUnsized <- Const { value: 0, size: 8 }
  990 r46: UnknownUnsized <- Arith(Add, r46, r12)
  991 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  992 r20: UnknownUnsized <- Get(r45)
0x5de2a3:
  993 r46: UnknownUnsized <- Const { value: 32, size: 8 }
  994 r46: UnknownUnsized <- Arith(Add, r46, r25)
  995 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
  996 r47: UnknownUnsized <- Const { value: 0, size: 8 }
  997 r45: UnknownUnsized <- Arith(Sub, r45, r47)
  998 r10: UnknownUnsized <- OverflowOf(r45)
  999 r2: UnknownUnsized <- CarryOf(r45)
 1000 r6: UnknownUnsized <- SignOf(r45)
 1001 r5: UnknownUnsized <- IsZero(r45)
 1002 r48: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
 1003 r3: UnknownUnsized <- Parity(r48)
0x5de2a8:
 1004 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1005 r46: UnknownUnsized <- Arith(Add, r46, r26)
 1006 r47: UnknownUnsized <- ArithK(Mul, r27, 8)
 1007 r46: UnknownUnsized <- Arith(Add, r46, r47)
 1008 r46: UnknownUnsized <- StoreMem { addr: r46, value: r17 }
0x5de2ac:
 1009 r45: UnknownUnsized <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
0x5de2b0:
 1010 r45: UnknownUnsized <- SetJumpCondition(r5)
 1011 r45: UnknownUnsized <- Control(JmpIf(756))
0x5de2b6:
 1012 r46: UnknownUnsized <- Const { value: 72, size: 8 }
 1013 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1014 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1015 r17: UnknownUnsized <- Get(r45)
0x5de2bb:
 1016 r46: UnknownUnsized <- Part { src: r14, offset: 0, size: 1 }
 1017 r48: UnknownUnsized <- Part { src: r14, offset: 0, size: 1 }
 1018 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1019 r6: UnknownUnsized <- SignOf(r46)
 1020 r5: UnknownUnsized <- IsZero(r46)
 1021 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1022 r3: UnknownUnsized <- Parity(r46)
 1023 r2: UnknownUnsized <- False
 1024 r10: UnknownUnsized <- False
0x5de2be:
 1025 r45: UnknownUnsized <- Not(r5)
 1026 r46: UnknownUnsized <- SetJumpCondition(r45)
 1027 r46: UnknownUnsized <- Control(JmpIf(1166))
0x5de2c0:
 1028 r45: UnknownUnsized <- Const { value: 1, size: 8 }
 1029 r45: UnknownUnsized <- Arith(Add, r45, r27)
 1030 r20: UnknownUnsized <- Get(r45)
0x5de2c4:
 1031 r46: UnknownUnsized <- Const { value: 24, size: 8 }
 1032 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1033 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1034 r27: UnknownUnsized <- Get(r45)
0x5de2c9:
 1035 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1036 r46: UnknownUnsized <- Arith(Add, r46, r27)
 1037 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de2cc:
 1038 r17: UnknownUnsized <- Arith(BitAnd, r17, r17)
 1039 r6: UnknownUnsized <- SignOf(r17)
 1040 r5: UnknownUnsized <- IsZero(r17)
 1041 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
 1042 r3: UnknownUnsized <- Parity(r17)
 1043 r2: UnknownUnsized <- False
 1044 r10: UnknownUnsized <- False
0x5de2cf:
 1045 r45: UnknownUnsized <- Not(r5)
 1046 r46: UnknownUnsized <- SetJumpCondition(r45)
 1047 r46: UnknownUnsized <- Control(JmpIf(1258))
0x5de2d5:
 1048 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1049 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1050 r46: UnknownUnsized <- Arith(BitXor, r46, r48)
 1051 r49: UnknownUnsized <- Part { src: r16, offset: 4, size: 4 }
 1052 r16: UnknownUnsized <- Concat { lo: r46, hi: r49 }
 1053 r10: UnknownUnsized <- False
 1054 r2: UnknownUnsized <- False
 1055 r6: UnknownUnsized <- SignOf(r46)
 1056 r5: UnknownUnsized <- IsZero(r46)
 1057 r50: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1058 r3: UnknownUnsized <- Parity(r50)
0x5de2d7:
 1059 r46: UnknownUnsized <- Const { value: 88, size: 8 }
 1060 r12: UnknownUnsized <- Arith(Add, r12, r46)
 1061 r12: UnknownUnsized <- Get(r12)
 1062 r10: UnknownUnsized <- OverflowOf(r12)
 1063 r2: UnknownUnsized <- CarryOf(r12)
 1064 r6: UnknownUnsized <- SignOf(r12)
 1065 r5: UnknownUnsized <- IsZero(r12)
 1066 r47: UnknownUnsized <- Part { src: r12, offset: 0, size: 1 }
 1067 r3: UnknownUnsized <- Parity(r47)
0x5de2db:
 1068 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1069 r17: UnknownUnsized <- Get(r45)
 1070 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2dc:
 1071 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1072 r11: UnknownUnsized <- Get(r45)
 1073 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2dd:
 1074 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1075 r24: UnknownUnsized <- Get(r45)
 1076 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2df:
 1077 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1078 r25: UnknownUnsized <- Get(r45)
 1079 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2e1:
 1080 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1081 r26: UnknownUnsized <- Get(r45)
 1082 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2e3:
 1083 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1084 r27: UnknownUnsized <- Get(r45)
 1085 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de2e5:
 1086 r45: UnknownUnsized <- SetReturnValue(r16)
 1087 r45: UnknownUnsized <- Control(Ret)
0x5de2f0:
 1088 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1089 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1090 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1091 r14: UnknownUnsized <- Get(r45)
0x5de2f4:
 1092 r19: UnknownUnsized <- Get(r11)
0x5de2f7:
 1093 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
 1094 r47: UnknownUnsized <- Void
 1095 r47: UnknownUnsized <- Get(r14)
 1096 r48: UnknownUnsized <- Void
 1097 r48: UnknownUnsized <- Get(r15)
 1098 r49: UnknownUnsized <- Void
 1099 r49: UnknownUnsized <- Get(r19)
 1100 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
 1101 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
 1102 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
 1103 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
 1104 r2: UnknownUnsized <- UndefinedBool
 1105 r3: UnknownUnsized <- UndefinedBool
 1106 r4: UnknownUnsized <- UndefinedBool
 1107 r5: UnknownUnsized <- UndefinedBool
 1108 r6: UnknownUnsized <- UndefinedBool
 1109 r7: UnknownUnsized <- UndefinedBool
 1110 r8: UnknownUnsized <- UndefinedBool
 1111 r9: UnknownUnsized <- UndefinedBool
 1112 r10: UnknownUnsized <- UndefinedBool
 1113 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de2fc:
 1114 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1115 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1116 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1117 r6: UnknownUnsized <- SignOf(r46)
 1118 r5: UnknownUnsized <- IsZero(r46)
 1119 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1120 r3: UnknownUnsized <- Parity(r46)
 1121 r2: UnknownUnsized <- False
 1122 r10: UnknownUnsized <- False
0x5de2fe:
 1123 r45: UnknownUnsized <- Not(r5)
 1124 r46: UnknownUnsized <- SetJumpCondition(r45)
 1125 r46: UnknownUnsized <- Control(JmpIf(525))
0x5de304:
 1126 r45: UnknownUnsized <- Control(Jmp(709))
0x5de310:
 1127 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1128 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1129 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1130 r14: UnknownUnsized <- Get(r45)
0x5de314:
 1131 r19: UnknownUnsized <- Get(r11)
0x5de317:
 1132 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
 1133 r47: UnknownUnsized <- Void
 1134 r47: UnknownUnsized <- Get(r14)
 1135 r48: UnknownUnsized <- Void
 1136 r48: UnknownUnsized <- Get(r15)
 1137 r49: UnknownUnsized <- Void
 1138 r49: UnknownUnsized <- Get(r19)
 1139 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
 1140 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
 1141 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
 1142 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
 1143 r2: UnknownUnsized <- UndefinedBool
 1144 r3: UnknownUnsized <- UndefinedBool
 1145 r4: UnknownUnsized <- UndefinedBool
 1146 r5: UnknownUnsized <- UndefinedBool
 1147 r6: UnknownUnsized <- UndefinedBool
 1148 r7: UnknownUnsized <- UndefinedBool
 1149 r8: UnknownUnsized <- UndefinedBool
 1150 r9: UnknownUnsized <- UndefinedBool
 1151 r10: UnknownUnsized <- UndefinedBool
 1152 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de31c:
 1153 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1154 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1155 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1156 r6: UnknownUnsized <- SignOf(r46)
 1157 r5: UnknownUnsized <- IsZero(r46)
 1158 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1159 r3: UnknownUnsized <- Parity(r46)
 1160 r2: UnknownUnsized <- False
 1161 r10: UnknownUnsized <- False
0x5de31e:
 1162 r45: UnknownUnsized <- Not(r5)
 1163 r46: UnknownUnsized <- SetJumpCondition(r45)
 1164 r46: UnknownUnsized <- Control(JmpIf(568))
0x5de324:
 1165 r45: UnknownUnsized <- Control(Jmp(709))
0x5de330:
 1166 r46: UnknownUnsized <- Const { value: 88, size: 8 }
 1167 r12: UnknownUnsized <- Arith(Add, r12, r46)
 1168 r12: UnknownUnsized <- Get(r12)
 1169 r10: UnknownUnsized <- OverflowOf(r12)
 1170 r2: UnknownUnsized <- CarryOf(r12)
 1171 r6: UnknownUnsized <- SignOf(r12)
 1172 r5: UnknownUnsized <- IsZero(r12)
 1173 r47: UnknownUnsized <- Part { src: r12, offset: 0, size: 1 }
 1174 r3: UnknownUnsized <- Parity(r47)
0x5de334:
 1175 r45: UnknownUnsized <- Const { value: 2, size: 4 }
 1176 r46: UnknownUnsized <- Part { src: r16, offset: 4, size: 4 }
 1177 r16: UnknownUnsized <- Concat { lo: r45, hi: r46 }
0x5de339:
 1178 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1179 r17: UnknownUnsized <- Get(r45)
 1180 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de33a:
 1181 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1182 r11: UnknownUnsized <- Get(r45)
 1183 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de33b:
 1184 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1185 r24: UnknownUnsized <- Get(r45)
 1186 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de33d:
 1187 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1188 r25: UnknownUnsized <- Get(r45)
 1189 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de33f:
 1190 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1191 r26: UnknownUnsized <- Get(r45)
 1192 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de341:
 1193 r45: UnknownUnsized <- LoadMem { addr: r12, size: 8 }
 1194 r27: UnknownUnsized <- Get(r45)
 1195 r12: UnknownUnsized <- ArithK(Add, r12, 8)
0x5de343:
 1196 r45: UnknownUnsized <- SetReturnValue(r16)
 1197 r45: UnknownUnsized <- Control(Ret)
0x5de348:
 1198 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1199 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1200 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1201 r24: UnknownUnsized <- Get(r45)
0x5de34c:
 1202 r46: UnknownUnsized <- Const { value: 1, size: 8 }
 1203 r27: UnknownUnsized <- Arith(Add, r27, r46)
 1204 r27: UnknownUnsized <- Get(r27)
 1205 r10: UnknownUnsized <- OverflowOf(r27)
 1206 r2: UnknownUnsized <- CarryOf(r27)
 1207 r6: UnknownUnsized <- SignOf(r27)
 1208 r5: UnknownUnsized <- IsZero(r27)
 1209 r47: UnknownUnsized <- Part { src: r27, offset: 0, size: 1 }
 1210 r3: UnknownUnsized <- Parity(r47)
0x5de350:
 1211 r14: UnknownUnsized <- Get(r24)
0x5de353:
 1212 r45: Regular(4551370) <- Const { value: 4199136, size: 8 }
 1213 r46: UnknownUnsized <- Call { callee: r45, first_arg: None }
 1214 r2: UnknownUnsized <- UndefinedBool
 1215 r3: UnknownUnsized <- UndefinedBool
 1216 r4: UnknownUnsized <- UndefinedBool
 1217 r5: UnknownUnsized <- UndefinedBool
 1218 r6: UnknownUnsized <- UndefinedBool
 1219 r7: UnknownUnsized <- UndefinedBool
 1220 r8: UnknownUnsized <- UndefinedBool
 1221 r9: UnknownUnsized <- UndefinedBool
 1222 r10: UnknownUnsized <- UndefinedBool
0x5de358:
 1223 r46: UnknownUnsized <- Const { value: 24, size: 8 }
 1224 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1225 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1226 r19: UnknownUnsized <- Get(r45)
0x5de35d:
 1227 r11: UnknownUnsized <- Get(r16)
0x5de360:
 1228 r45: UnknownUnsized <- Const { value: 0, size: 8 }
 1229 r45: UnknownUnsized <- Arith(Add, r45, r24)
 1230 r46: UnknownUnsized <- ArithK(Mul, r16, 1)
 1231 r45: UnknownUnsized <- Arith(Add, r45, r46)
 1232 r20: UnknownUnsized <- Get(r45)
0x5de364:
 1233 r47: UnknownUnsized <- Const { value: 0, size: 8 }
 1234 r47: UnknownUnsized <- Arith(Add, r47, r19)
 1235 r46: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
 1236 r27: UnknownUnsized <- Arith(Sub, r27, r46)
 1237 r10: UnknownUnsized <- OverflowOf(r27)
 1238 r2: UnknownUnsized <- CarryOf(r27)
 1239 r6: UnknownUnsized <- SignOf(r27)
 1240 r5: UnknownUnsized <- IsZero(r27)
 1241 r48: UnknownUnsized <- Part { src: r27, offset: 0, size: 1 }
 1242 r3: UnknownUnsized <- Parity(r48)
0x5de367:
 1243 r45: UnknownUnsized <- SetJumpCondition(r2)
 1244 r45: UnknownUnsized <- Control(JmpIf(844))
0x5de36d:
 1245 r46: UnknownUnsized <- Const { value: 72, size: 8 }
 1246 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1247 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1248 r17: UnknownUnsized <- Get(r45)
0x5de372:
 1249 r17: UnknownUnsized <- Arith(BitAnd, r17, r17)
 1250 r6: UnknownUnsized <- SignOf(r17)
 1251 r5: UnknownUnsized <- IsZero(r17)
 1252 r47: UnknownUnsized <- Part { src: r17, offset: 0, size: 1 }
 1253 r3: UnknownUnsized <- Parity(r17)
 1254 r2: UnknownUnsized <- False
 1255 r10: UnknownUnsized <- False
0x5de375:
 1256 r45: UnknownUnsized <- SetJumpCondition(r5)
 1257 r45: UnknownUnsized <- Control(JmpIf(1048))
0x5de37b:
 1258 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1259 r46: UnknownUnsized <- Arith(Add, r46, r17)
 1260 r46: UnknownUnsized <- StoreMem { addr: r46, value: r25 }
0x5de37e:
 1261 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1262 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1263 r46: UnknownUnsized <- Arith(BitXor, r46, r48)
 1264 r49: UnknownUnsized <- Part { src: r16, offset: 4, size: 4 }
 1265 r16: UnknownUnsized <- Concat { lo: r46, hi: r49 }
 1266 r10: UnknownUnsized <- False
 1267 r2: UnknownUnsized <- False
 1268 r6: UnknownUnsized <- SignOf(r46)
 1269 r5: UnknownUnsized <- IsZero(r46)
 1270 r50: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1271 r3: UnknownUnsized <- Parity(r50)
0x5de380:
 1272 r45: UnknownUnsized <- Control(Jmp(1059))
0x5de388:
 1273 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1274 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1275 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1276 r14: UnknownUnsized <- Get(r45)
0x5de38c:
 1277 r19: UnknownUnsized <- Get(r11)
0x5de38f:
 1278 r46: UnknownUnsized <- Const { value: 8, size: 8 }
 1279 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1280 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de394:
 1281 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
 1282 r47: UnknownUnsized <- Void
 1283 r47: UnknownUnsized <- Get(r14)
 1284 r48: UnknownUnsized <- Void
 1285 r48: UnknownUnsized <- Get(r15)
 1286 r49: UnknownUnsized <- Void
 1287 r49: UnknownUnsized <- Get(r19)
 1288 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
 1289 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
 1290 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
 1291 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
 1292 r2: UnknownUnsized <- UndefinedBool
 1293 r3: UnknownUnsized <- UndefinedBool
 1294 r4: UnknownUnsized <- UndefinedBool
 1295 r5: UnknownUnsized <- UndefinedBool
 1296 r6: UnknownUnsized <- UndefinedBool
 1297 r7: UnknownUnsized <- UndefinedBool
 1298 r8: UnknownUnsized <- UndefinedBool
 1299 r9: UnknownUnsized <- UndefinedBool
 1300 r10: UnknownUnsized <- UndefinedBool
 1301 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de399:
 1302 r46: UnknownUnsized <- Const { value: 8, size: 8 }
 1303 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1304 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1305 r20: UnknownUnsized <- Get(r45)
0x5de39e:
 1306 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1307 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1308 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1309 r6: UnknownUnsized <- SignOf(r46)
 1310 r5: UnknownUnsized <- IsZero(r46)
 1311 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1312 r3: UnknownUnsized <- Parity(r46)
 1313 r2: UnknownUnsized <- False
 1314 r10: UnknownUnsized <- False
0x5de3a0:
 1315 r45: UnknownUnsized <- Not(r5)
 1316 r46: UnknownUnsized <- SetJumpCondition(r45)
 1317 r46: UnknownUnsized <- Control(JmpIf(395))
0x5de3a6:
 1318 r45: UnknownUnsized <- Control(Jmp(723))
0x5de3b0:
 1319 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1320 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1321 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1322 r14: UnknownUnsized <- Get(r45)
0x5de3b4:
 1323 r19: UnknownUnsized <- Get(r11)
0x5de3b7:
 1324 r46: UnknownUnsized <- Const { value: 8, size: 8 }
 1325 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1326 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de3bc:
 1327 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
 1328 r47: UnknownUnsized <- Void
 1329 r47: UnknownUnsized <- Get(r14)
 1330 r48: UnknownUnsized <- Void
 1331 r48: UnknownUnsized <- Get(r15)
 1332 r49: UnknownUnsized <- Void
 1333 r49: UnknownUnsized <- Get(r19)
 1334 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
 1335 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
 1336 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
 1337 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
 1338 r2: UnknownUnsized <- UndefinedBool
 1339 r3: UnknownUnsized <- UndefinedBool
 1340 r4: UnknownUnsized <- UndefinedBool
 1341 r5: UnknownUnsized <- UndefinedBool
 1342 r6: UnknownUnsized <- UndefinedBool
 1343 r7: UnknownUnsized <- UndefinedBool
 1344 r8: UnknownUnsized <- UndefinedBool
 1345 r9: UnknownUnsized <- UndefinedBool
 1346 r10: UnknownUnsized <- UndefinedBool
 1347 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de3c1:
 1348 r46: UnknownUnsized <- Const { value: 8, size: 8 }
 1349 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1350 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1351 r20: UnknownUnsized <- Get(r45)
0x5de3c6:
 1352 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1353 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1354 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1355 r6: UnknownUnsized <- SignOf(r46)
 1356 r5: UnknownUnsized <- IsZero(r46)
 1357 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1358 r3: UnknownUnsized <- Parity(r46)
 1359 r2: UnknownUnsized <- False
 1360 r10: UnknownUnsized <- False
0x5de3c8:
 1361 r45: UnknownUnsized <- Not(r5)
 1362 r46: UnknownUnsized <- SetJumpCondition(r45)
 1363 r46: UnknownUnsized <- Control(JmpIf(333))
0x5de3ce:
 1364 r45: UnknownUnsized <- Control(Jmp(723))
0x5de3d3:
 1365 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1366 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1367 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1368 r14: UnknownUnsized <- Get(r45)
0x5de3d7:
 1369 r19: UnknownUnsized <- Get(r11)
0x5de3da:
 1370 r46: UnknownUnsized <- Const { value: 40, size: 8 }
 1371 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1372 r46: UnknownUnsized <- StoreMem { addr: r46, value: r20 }
0x5de3df:
 1373 r46: UnknownUnsized <- Const { value: 8, size: 8 }
 1374 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1375 r46: UnknownUnsized <- StoreMem { addr: r46, value: r24 }
0x5de3e4:
 1376 r45: Regular(4247267) <- Const { value: 4199232, size: 8 }
 1377 r47: UnknownUnsized <- Void
 1378 r47: UnknownUnsized <- Get(r14)
 1379 r48: UnknownUnsized <- Void
 1380 r48: UnknownUnsized <- Get(r15)
 1381 r49: UnknownUnsized <- Void
 1382 r49: UnknownUnsized <- Get(r19)
 1383 r46: UnknownUnsized <- CArg { value: r49, next_arg: None }
 1384 r46: UnknownUnsized <- CArg { value: r48, next_arg: Some(r46) }
 1385 r46: UnknownUnsized <- CArg { value: r47, next_arg: Some(r46) }
 1386 r46: UnknownUnsized <- Call { callee: r45, first_arg: Some(r46) }
 1387 r2: UnknownUnsized <- UndefinedBool
 1388 r3: UnknownUnsized <- UndefinedBool
 1389 r4: UnknownUnsized <- UndefinedBool
 1390 r5: UnknownUnsized <- UndefinedBool
 1391 r6: UnknownUnsized <- UndefinedBool
 1392 r7: UnknownUnsized <- UndefinedBool
 1393 r8: UnknownUnsized <- UndefinedBool
 1394 r9: UnknownUnsized <- UndefinedBool
 1395 r10: UnknownUnsized <- UndefinedBool
 1396 r16: UnknownUnsized <- Part { src: r46, offset: 0, size: 8 }
0x5de3e9:
 1397 r46: UnknownUnsized <- Const { value: 40, size: 8 }
 1398 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1399 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1400 r20: UnknownUnsized <- Get(r45)
0x5de3ee:
 1401 r14: UnknownUnsized <- Get(r24)
0x5de3f1:
 1402 r46: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1403 r48: UnknownUnsized <- Part { src: r16, offset: 0, size: 4 }
 1404 r46: UnknownUnsized <- Arith(BitAnd, r46, r48)
 1405 r6: UnknownUnsized <- SignOf(r46)
 1406 r5: UnknownUnsized <- IsZero(r46)
 1407 r49: UnknownUnsized <- Part { src: r46, offset: 0, size: 1 }
 1408 r3: UnknownUnsized <- Parity(r46)
 1409 r2: UnknownUnsized <- False
 1410 r10: UnknownUnsized <- False
0x5de3f3:
 1411 r45: UnknownUnsized <- Not(r5)
 1412 r46: UnknownUnsized <- SetJumpCondition(r45)
 1413 r46: UnknownUnsized <- Control(JmpIf(283))
0x5de3f9:
 1414 r45: UnknownUnsized <- Control(Jmp(723))
0x5de400:
 1415 r46: UnknownUnsized <- Const { value: 0, size: 8 }
 1416 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1417 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1418 r27: UnknownUnsized <- Get(r45)
0x5de404:
 1419 r14: UnknownUnsized <- Get(r27)
0x5de407:
 1420 r45: Regular(4551370) <- Const { value: 4199136, size: 8 }
 1421 r46: UnknownUnsized <- Call { callee: r45, first_arg: None }
 1422 r2: UnknownUnsized <- UndefinedBool
 1423 r3: UnknownUnsized <- UndefinedBool
 1424 r4: UnknownUnsized <- UndefinedBool
 1425 r5: UnknownUnsized <- UndefinedBool
 1426 r6: UnknownUnsized <- UndefinedBool
 1427 r7: UnknownUnsized <- UndefinedBool
 1428 r8: UnknownUnsized <- UndefinedBool
 1429 r9: UnknownUnsized <- UndefinedBool
 1430 r10: UnknownUnsized <- UndefinedBool
0x5de40c:
 1431 r45: UnknownUnsized <- Const { value: 0, size: 8 }
 1432 r45: UnknownUnsized <- Arith(Add, r45, r27)
 1433 r46: UnknownUnsized <- ArithK(Mul, r16, 1)
 1434 r45: UnknownUnsized <- Arith(Add, r45, r46)
 1435 r20: UnknownUnsized <- Get(r45)
0x5de410:
 1436 r45: UnknownUnsized <- Control(Jmp(111))
0x5de415:
 1437 r46: UnknownUnsized <- Const { value: 72, size: 8 }
 1438 r46: UnknownUnsized <- Arith(Add, r46, r12)
 1439 r45: UnknownUnsized <- LoadMem { addr: r46, size: 8 }
 1440 r17: UnknownUnsized <- Get(r45)
0x5de41a:
 1441 r45: UnknownUnsized <- Control(Jmp(1028))
0x5de41f:
 1442 r25: UnknownUnsized <- Get(r26)
0x5de422:
 1443 r45: UnknownUnsized <- Control(Jmp(1249))


 --- ssa pre-xform
ssa program  1539 instrs
.B0:    ;;  → Conditional { pos: Block(BlockID(53)), neg: Block(BlockID(1)) }.
         r10: unknown <UnknownUnsized> <- Ancestral(AncestralName("RBP"))
         r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
         r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
  (  4)  r14: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSI"))
         r16: unknown <UnknownUnsized> <- Ancestral(AncestralName("RBX"))
  (  5)  r17: unknown <UnknownUnsized> <- Ancestral(AncestralName("RCX"))
  (  4)  r18: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDX"))
         r19: unknown <UnknownUnsized> <- Ancestral(AncestralName("R8"))
         r20: unknown <UnknownUnsized> <- Ancestral(AncestralName("R9"))
         r23: unknown <UnknownUnsized> <- Ancestral(AncestralName("R12"))
  (  5)  r24: unknown <UnknownUnsized> <- Ancestral(AncestralName("R13"))
         r25: unknown <UnknownUnsized> <- Ancestral(AncestralName("R14"))
  (  4)  r26: unknown <UnknownUnsized> <- Ancestral(AncestralName("R15"))
  (  2)  r43: unknown <UnknownUnsized> <- ArithK(Add, r11, -8)
         r44: unknown <UnknownUnsized> <- StoreMem { addr: r43, value: r26 }
  (  2)  r45: unknown <UnknownUnsized> <- ArithK(Add, r43, -8)
         r46: unknown <UnknownUnsized> <- StoreMem { addr: r45, value: r25 }
         r48: unknown <UnknownUnsized> <- Const { value: 46, size: 4 }
         r49: unknown <UnknownUnsized> <- Part { src: r14, offset: 4, size: 4 }
  (  3)  r50: unknown <UnknownUnsized> <- Concat { lo: r48, hi: r49 }
  (  2)  r51: unknown <UnknownUnsized> <- ArithK(Add, r45, -8)
         r52: unknown <UnknownUnsized> <- StoreMem { addr: r51, value: r24 }
  (  2)  r53: unknown <UnknownUnsized> <- ArithK(Add, r51, -8)
         r54: unknown <UnknownUnsized> <- StoreMem { addr: r53, value: r23 }
  (  2)  r55: unknown <UnknownUnsized> <- ArithK(Add, r53, -8)
         r56: unknown <UnknownUnsized> <- StoreMem { addr: r55, value: r10 }
  (  2)  r57: unknown <UnknownUnsized> <- ArithK(Add, r55, -8)
         r58: unknown <UnknownUnsized> <- StoreMem { addr: r57, value: r16 }
         r60: unknown <UnknownUnsized> <- Const { value: 88, size: 8 }
  ( 63)  r61: unknown <UnknownUnsized> <- Arith(Sub, r57, r60)
         r69: unknown <UnknownUnsized> <- Const { value: 64, size: 8 }
         r70: unknown <UnknownUnsized> <- Arith(Add, r69, r61)
         r71: unknown <UnknownUnsized> <- StoreMem { addr: r70, value: r13 }
         r73: unknown <UnknownUnsized> <- Const { value: 32, size: 8 }
         r74: unknown <UnknownUnsized> <- Arith(Add, r73, r61)
         r75: unknown <UnknownUnsized> <- StoreMem { addr: r74, value: r19 }
         r76: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r77: unknown <UnknownUnsized> <- Arith(Add, r76, r61)
         r78: unknown <UnknownUnsized> <- StoreMem { addr: r77, value: r18 }
         r79: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r80: unknown <UnknownUnsized> <- Arith(Add, r79, r61)
         r81: unknown <UnknownUnsized> <- StoreMem { addr: r80, value: r20 }
         r82: strchr <Regular(4247322)> <- Const { value: 4199040, size: 8 }
         r87: unknown <UnknownUnsized> <- Part { src: r50, offset: 0, size: 4 }
         r88: unknown <UnknownUnsized> <- CArg { value: r87, next_arg: None }
         r89: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r88) }
         r90: unknown <UnknownUnsized> <- Call { callee: r82, first_arg: Some(r89) }
  (  3)  r100: unknown <UnknownUnsized> <- Part { src: r90, offset: 0, size: 8 }
  (  2)  r102: unknown <UnknownUnsized> <- Arith(BitAnd, r100, r100)
         r104: unknown <UnknownUnsized> <- IsZero(r102)
         r109: unknown <UnknownUnsized> <- SetJumpCondition(r104)
         r1469: unknown <UnknownUnsized> <- Upsilon { value: r100, phi_ref: r1444 }
.B53:    ;; preds:B0  → Always(Block(BlockID(1))).
         r1415: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1416: unknown <UnknownUnsized> <- Arith(Add, r1415, r61)
         r1417: unknown <UnknownUnsized> <- LoadMem { addr: r1416, size: 8 }
         r1420: __builtin_strlen <Regular(4551370)> <- Const { value: 4199136, size: 8 }
         r1421: unknown <UnknownUnsized> <- Call { callee: r1420, first_arg: None }
         r1431: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1432: unknown <UnknownUnsized> <- Arith(Add, r1431, r1417)
         r1433: unknown <UnknownUnsized> <- ArithK(Mul, r102, 1)
         r1434: unknown <UnknownUnsized> <- Arith(Add, r1432, r1433)
         r1470: unknown <UnknownUnsized> <- Upsilon { value: r1434, phi_ref: r1444 }
.B1:    ;; preds:B0,B53  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(2)) }.
  (  7)  r1444: unknown <UnknownUnsized> <- Phi
         r111: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r112: unknown <UnknownUnsized> <- Arith(Add, r111, r61)
  ( 11)  r113: unknown <UnknownUnsized> <- LoadMem { addr: r112, size: 8 }
  ( 15)  r116: unknown <UnknownUnsized> <- Arith(Sub, r1444, r113)
         r121: unknown <UnknownUnsized> <- IsZero(r116)
         r124: unknown <UnknownUnsized> <- SetJumpCondition(r121)
         r1471: unknown <UnknownUnsized> <- Upsilon { value: r113, phi_ref: r1466 }
.B2:    ;; preds:B1  → Conditional { pos: Block(BlockID(55)), neg: Block(BlockID(3)) }.
         r126: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r127: unknown <UnknownUnsized> <- Arith(Add, r126, r61)
  (  2)  r128: unknown <UnknownUnsized> <- LoadMem { addr: r127, size: 8 }
         r130: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r131: unknown <UnknownUnsized> <- Arith(Add, r130, r128)
         r132: unknown <UnknownUnsized> <- LoadMem { addr: r131, size: 8 }
         r133: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r134: unknown <UnknownUnsized> <- Arith(Sub, r132, r133)
         r138: unknown <UnknownUnsized> <- IsZero(r134)
         r141: unknown <UnknownUnsized> <- SetJumpCondition(r138)
.B3:    ;; preds:B2  → Conditional { pos: Block(BlockID(30)), neg: Block(BlockID(4)) }.
         r143: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r144: unknown <UnknownUnsized> <- Arith(Add, r143, r14)
  ( 10)  r145: unknown <UnknownUnsized> <- LoadMem { addr: r144, size: 8 }
         r147: unknown <UnknownUnsized> <- Part { src: r26, offset: 0, size: 4 }
         r148: unknown <UnknownUnsized> <- Part { src: r26, offset: 0, size: 4 }
         r149: unknown <UnknownUnsized> <- Arith(BitXor, r147, r148)
         r150: unknown <UnknownUnsized> <- Part { src: r26, offset: 4, size: 4 }
  (  8)  r151: unknown <UnknownUnsized> <- Concat { lo: r149, hi: r150 }
         r158: unknown <UnknownUnsized> <- Const { value: 72, size: 8 }
         r159: unknown <UnknownUnsized> <- Arith(Add, r158, r61)
         r160: unknown <UnknownUnsized> <- StoreMem { addr: r159, value: r17 }
         r161: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r162: unknown <UnknownUnsized> <- Arith(Add, r161, r145)
         r163: unknown <UnknownUnsized> <- LoadMem { addr: r162, size: 1 }
         r164: unknown <UnknownUnsized> <- Const { value: 0, size: 1 }
         r165: unknown <UnknownUnsized> <- Arith(Sub, r163, r164)
         r169: unknown <UnknownUnsized> <- IsZero(r165)
         r172: unknown <UnknownUnsized> <- SetJumpCondition(r169)
         r1476: unknown <UnknownUnsized> <- Upsilon { value: r50, phi_ref: r1461 }
         r1477: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1462 }
         r1478: unknown <UnknownUnsized> <- Upsilon { value: r14, phi_ref: r1445 }
.B4:    ;; preds:B3,B29  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(5)) }.
  (  5)  r1445: unknown <UnknownUnsized> <- Phi
         r174: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r175: unknown <UnknownUnsized> <- Arith(Add, r174, r1445)
  (  3)  r176: unknown <UnknownUnsized> <- LoadMem { addr: r175, size: 8 }
         r178: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r179: unknown <UnknownUnsized> <- Arith(Add, r178, r61)
         r180: unknown <UnknownUnsized> <- StoreMem { addr: r179, value: r176 }
  (  3)  r181: unknown <UnknownUnsized> <- Arith(BitAnd, r176, r176)
         r183: unknown <UnknownUnsized> <- IsZero(r181)
         r188: unknown <UnknownUnsized> <- SetJumpCondition(r183)
         r1491: unknown <UnknownUnsized> <- Upsilon { value: r113, phi_ref: r1466 }
.B5:    ;; preds:B4  → Conditional { pos: Block(BlockID(14)), neg: Block(BlockID(6)) }.
         r191: unknown <UnknownUnsized> <- Part { src: r17, offset: 0, size: 4 }
         r192: unknown <UnknownUnsized> <- Part { src: r17, offset: 0, size: 4 }
         r193: unknown <UnknownUnsized> <- Arith(BitXor, r191, r192)
         r194: unknown <UnknownUnsized> <- Part { src: r17, offset: 4, size: 4 }
  (  6)  r195: unknown <UnknownUnsized> <- Concat { lo: r193, hi: r194 }
         r202: unknown <UnknownUnsized> <- Part { src: r181, offset: 0, size: 4 }
         r203: unknown <UnknownUnsized> <- Const { value: 3, size: 4 }
  (  2)  r204: unknown <UnknownUnsized> <- Arith(BitAnd, r202, r203)
         r205: unknown <UnknownUnsized> <- Part { src: r181, offset: 4, size: 4 }
         r206: unknown <UnknownUnsized> <- Concat { lo: r204, hi: r205 }
         r210: unknown <UnknownUnsized> <- IsZero(r204)
         r213: unknown <UnknownUnsized> <- SetJumpCondition(r210)
         r1492: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1451 }
         r1493: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1452 }
.B6:    ;; preds:B5  → Conditional { pos: Block(BlockID(12)), neg: Block(BlockID(7)) }.
         r215: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
  (  2)  r216: unknown <UnknownUnsized> <- Arith(Sub, r206, r215)
         r220: unknown <UnknownUnsized> <- IsZero(r216)
         r223: unknown <UnknownUnsized> <- SetJumpCondition(r220)
         r1514: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1449 }
         r1515: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1450 }
.B7:    ;; preds:B6  → Conditional { pos: Block(BlockID(10)), neg: Block(BlockID(8)) }.
         r225: unknown <UnknownUnsized> <- Const { value: 2, size: 8 }
         r226: unknown <UnknownUnsized> <- Arith(Sub, r216, r225)
         r230: unknown <UnknownUnsized> <- IsZero(r226)
         r233: unknown <UnknownUnsized> <- SetJumpCondition(r230)
         r1523: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1447 }
         r1524: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1448 }
.B8:    ;; preds:B7  → Conditional { pos: Block(BlockID(51)), neg: Block(BlockID(9)) }.
         r235: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r236: unknown <UnknownUnsized> <- Arith(Add, r235, r145)
  (  2)  r237: unknown <UnknownUnsized> <- LoadMem { addr: r236, size: 8 }
         r239: unknown <UnknownUnsized> <- Const { value: 48, size: 8 }
         r240: unknown <UnknownUnsized> <- Arith(Add, r239, r61)
         r241: unknown <UnknownUnsized> <- StoreMem { addr: r240, value: r1444 }
         r243: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r244: unknown <UnknownUnsized> <- Arith(Add, r243, r61)
         r245: unknown <UnknownUnsized> <- StoreMem { addr: r244, value: r145 }
         r247: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r248: unknown <UnknownUnsized> <- Arith(Add, r247, r61)
         r249: unknown <UnknownUnsized> <- StoreMem { addr: r248, value: r237 }
         r250: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r253: unknown <UnknownUnsized> <- CArg { value: r237, next_arg: None }
         r254: unknown <UnknownUnsized> <- Call { callee: r250, first_arg: Some(r253) }
         r264: unknown <UnknownUnsized> <- Part { src: r254, offset: 0, size: 8 }
         r265: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r266: unknown <UnknownUnsized> <- Arith(Add, r265, r61)
         r267: unknown <UnknownUnsized> <- LoadMem { addr: r266, size: 8 }
         r269: unknown <UnknownUnsized> <- Const { value: 48, size: 8 }
         r270: unknown <UnknownUnsized> <- Arith(Add, r269, r61)
  (  2)  r271: unknown <UnknownUnsized> <- LoadMem { addr: r270, size: 8 }
         r274: unknown <UnknownUnsized> <- Arith(Sub, r264, r116)
         r278: unknown <UnknownUnsized> <- IsZero(r274)
         r281: unknown <UnknownUnsized> <- SetJumpCondition(r278)
         r1531: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1446 }
.B51:    ;; preds:B8  → Conditional { pos: Block(BlockID(9)), neg: Block(BlockID(52)) }.
         r1365: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1366: unknown <UnknownUnsized> <- Arith(Add, r1365, r61)
         r1367: unknown <UnknownUnsized> <- LoadMem { addr: r1366, size: 8 }
         r1370: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r1371: unknown <UnknownUnsized> <- Arith(Add, r1370, r61)
         r1372: unknown <UnknownUnsized> <- StoreMem { addr: r1371, value: r271 }
         r1373: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r1374: unknown <UnknownUnsized> <- Arith(Add, r1373, r61)
         r1375: unknown <UnknownUnsized> <- StoreMem { addr: r1374, value: r145 }
         r1376: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1383: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1384: unknown <UnknownUnsized> <- CArg { value: r267, next_arg: Some(r1383) }
         r1385: unknown <UnknownUnsized> <- CArg { value: r1367, next_arg: Some(r1384) }
         r1386: unknown <UnknownUnsized> <- Call { callee: r1376, first_arg: Some(r1385) }
  (  2)  r1396: unknown <UnknownUnsized> <- Part { src: r1386, offset: 0, size: 8 }
         r1402: unknown <UnknownUnsized> <- Part { src: r1396, offset: 0, size: 4 }
         r1403: unknown <UnknownUnsized> <- Part { src: r1396, offset: 0, size: 4 }
         r1404: unknown <UnknownUnsized> <- Arith(BitAnd, r1402, r1403)
         r1406: unknown <UnknownUnsized> <- IsZero(r1404)
         r1411: unknown <UnknownUnsized> <- Not(r1406)
         r1412: unknown <UnknownUnsized> <- SetJumpCondition(r1411)
         r1532: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1446 }
.B52:    ;; preds:B51  → Always(Block(BlockID(24))).
         r1533: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1534: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1457 }
         r1535: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1536: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B9:    ;; preds:B8,B51  → Always(Block(BlockID(10))).
         r1446: unknown <UnknownUnsized> <- Phi
         r286: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r287: unknown <UnknownUnsized> <- Arith(Add, r286, r1446)
         r1537: unknown <UnknownUnsized> <- Upsilon { value: r271, phi_ref: r1447 }
         r1538: unknown <UnknownUnsized> <- Upsilon { value: r287, phi_ref: r1448 }
.B10:    ;; preds:B7,B9  → Conditional { pos: Block(BlockID(49)), neg: Block(BlockID(11)) }.
  (  3)  r1448: unknown <UnknownUnsized> <- Phi
         r1447: unknown <UnknownUnsized> <- Phi
         r289: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r290: unknown <UnknownUnsized> <- Arith(Add, r289, r1448)
  (  2)  r291: unknown <UnknownUnsized> <- LoadMem { addr: r290, size: 8 }
         r293: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r294: unknown <UnknownUnsized> <- Arith(Add, r293, r61)
         r295: unknown <UnknownUnsized> <- StoreMem { addr: r294, value: r1447 }
         r298: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r299: unknown <UnknownUnsized> <- Arith(Add, r298, r61)
         r300: unknown <UnknownUnsized> <- StoreMem { addr: r299, value: r291 }
         r301: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r304: unknown <UnknownUnsized> <- CArg { value: r291, next_arg: None }
         r305: unknown <UnknownUnsized> <- Call { callee: r301, first_arg: Some(r304) }
         r315: unknown <UnknownUnsized> <- Part { src: r305, offset: 0, size: 8 }
         r316: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r317: unknown <UnknownUnsized> <- Arith(Add, r316, r61)
         r318: unknown <UnknownUnsized> <- LoadMem { addr: r317, size: 8 }
         r320: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r321: unknown <UnknownUnsized> <- Arith(Add, r320, r61)
  (  2)  r322: unknown <UnknownUnsized> <- LoadMem { addr: r321, size: 8 }
         r324: unknown <UnknownUnsized> <- Arith(Sub, r315, r116)
         r328: unknown <UnknownUnsized> <- IsZero(r324)
         r331: unknown <UnknownUnsized> <- SetJumpCondition(r328)
.B49:    ;; preds:B10  → Conditional { pos: Block(BlockID(11)), neg: Block(BlockID(50)) }.
         r1319: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1320: unknown <UnknownUnsized> <- Arith(Add, r1319, r61)
         r1321: unknown <UnknownUnsized> <- LoadMem { addr: r1320, size: 8 }
         r1324: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r1325: unknown <UnknownUnsized> <- Arith(Add, r1324, r61)
         r1326: unknown <UnknownUnsized> <- StoreMem { addr: r1325, value: r322 }
         r1327: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1334: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1335: unknown <UnknownUnsized> <- CArg { value: r318, next_arg: Some(r1334) }
         r1336: unknown <UnknownUnsized> <- CArg { value: r1321, next_arg: Some(r1335) }
         r1337: unknown <UnknownUnsized> <- Call { callee: r1327, first_arg: Some(r1336) }
  (  2)  r1347: unknown <UnknownUnsized> <- Part { src: r1337, offset: 0, size: 8 }
         r1352: unknown <UnknownUnsized> <- Part { src: r1347, offset: 0, size: 4 }
         r1353: unknown <UnknownUnsized> <- Part { src: r1347, offset: 0, size: 4 }
         r1354: unknown <UnknownUnsized> <- Arith(BitAnd, r1352, r1353)
         r1356: unknown <UnknownUnsized> <- IsZero(r1354)
         r1361: unknown <UnknownUnsized> <- Not(r1356)
         r1362: unknown <UnknownUnsized> <- SetJumpCondition(r1361)
.B50:    ;; preds:B49  → Always(Block(BlockID(24))).
         r1525: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1526: unknown <UnknownUnsized> <- Upsilon { value: r1448, phi_ref: r1457 }
         r1527: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1528: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B11:    ;; preds:B10,B49  → Always(Block(BlockID(12))).
         r342: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r343: unknown <UnknownUnsized> <- Arith(Add, r1448, r342)
         r1529: unknown <UnknownUnsized> <- Upsilon { value: r322, phi_ref: r1449 }
         r1530: unknown <UnknownUnsized> <- Upsilon { value: r343, phi_ref: r1450 }
.B12:    ;; preds:B6,B11  → Conditional { pos: Block(BlockID(47)), neg: Block(BlockID(13)) }.
  (  3)  r1450: unknown <UnknownUnsized> <- Phi
         r1449: unknown <UnknownUnsized> <- Phi
         r351: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r352: unknown <UnknownUnsized> <- Arith(Add, r351, r1450)
  (  2)  r353: unknown <UnknownUnsized> <- LoadMem { addr: r352, size: 8 }
         r355: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r356: unknown <UnknownUnsized> <- Arith(Add, r355, r61)
         r357: unknown <UnknownUnsized> <- StoreMem { addr: r356, value: r1449 }
         r360: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r361: unknown <UnknownUnsized> <- Arith(Add, r360, r61)
         r362: unknown <UnknownUnsized> <- StoreMem { addr: r361, value: r353 }
         r363: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r366: unknown <UnknownUnsized> <- CArg { value: r353, next_arg: None }
         r367: unknown <UnknownUnsized> <- Call { callee: r363, first_arg: Some(r366) }
         r377: unknown <UnknownUnsized> <- Part { src: r367, offset: 0, size: 8 }
         r378: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r379: unknown <UnknownUnsized> <- Arith(Add, r378, r61)
         r380: unknown <UnknownUnsized> <- LoadMem { addr: r379, size: 8 }
         r382: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r383: unknown <UnknownUnsized> <- Arith(Add, r382, r61)
  (  2)  r384: unknown <UnknownUnsized> <- LoadMem { addr: r383, size: 8 }
  (  2)  r386: unknown <UnknownUnsized> <- Arith(Sub, r377, r116)
         r390: unknown <UnknownUnsized> <- IsZero(r386)
         r393: unknown <UnknownUnsized> <- SetJumpCondition(r390)
.B47:    ;; preds:B12  → Conditional { pos: Block(BlockID(13)), neg: Block(BlockID(48)) }.
         r1273: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1274: unknown <UnknownUnsized> <- Arith(Add, r1273, r61)
         r1275: unknown <UnknownUnsized> <- LoadMem { addr: r1274, size: 8 }
         r1278: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r1279: unknown <UnknownUnsized> <- Arith(Add, r1278, r61)
         r1280: unknown <UnknownUnsized> <- StoreMem { addr: r1279, value: r384 }
         r1281: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1288: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1289: unknown <UnknownUnsized> <- CArg { value: r380, next_arg: Some(r1288) }
         r1290: unknown <UnknownUnsized> <- CArg { value: r1275, next_arg: Some(r1289) }
         r1291: unknown <UnknownUnsized> <- Call { callee: r1281, first_arg: Some(r1290) }
  (  2)  r1301: unknown <UnknownUnsized> <- Part { src: r1291, offset: 0, size: 8 }
         r1306: unknown <UnknownUnsized> <- Part { src: r1301, offset: 0, size: 4 }
         r1307: unknown <UnknownUnsized> <- Part { src: r1301, offset: 0, size: 4 }
         r1308: unknown <UnknownUnsized> <- Arith(BitAnd, r1306, r1307)
         r1310: unknown <UnknownUnsized> <- IsZero(r1308)
         r1315: unknown <UnknownUnsized> <- Not(r1310)
         r1316: unknown <UnknownUnsized> <- SetJumpCondition(r1315)
.B48:    ;; preds:B47  → Always(Block(BlockID(24))).
         r1516: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1517: unknown <UnknownUnsized> <- Upsilon { value: r1450, phi_ref: r1457 }
         r1518: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1519: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B13:    ;; preds:B12,B47  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(14)) }.
         r395: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r396: unknown <UnknownUnsized> <- Arith(Add, r395, r61)
         r397: unknown <UnknownUnsized> <- LoadMem { addr: r396, size: 8 }
         r399: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
         r400: unknown <UnknownUnsized> <- Arith(Add, r195, r399)
         r408: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r409: unknown <UnknownUnsized> <- Arith(Add, r1450, r408)
         r417: unknown <UnknownUnsized> <- Arith(Sub, r400, r397)
         r421: unknown <UnknownUnsized> <- IsZero(r417)
         r424: unknown <UnknownUnsized> <- SetJumpCondition(r421)
         r1520: unknown <UnknownUnsized> <- Upsilon { value: r386, phi_ref: r1466 }
         r1521: unknown <UnknownUnsized> <- Upsilon { value: r384, phi_ref: r1451 }
         r1522: unknown <UnknownUnsized> <- Upsilon { value: r409, phi_ref: r1452 }
.B14:    ;; preds:B5,B13  → Always(Block(BlockID(19))).
         r1452: unknown <UnknownUnsized> <- Phi
         r1451: unknown <UnknownUnsized> <- Phi
         r426: unknown <UnknownUnsized> <- Const { value: 56, size: 8 }
         r427: unknown <UnknownUnsized> <- Arith(Add, r426, r61)
         r428: unknown <UnknownUnsized> <- StoreMem { addr: r427, value: r1445 }
         r430: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r431: unknown <UnknownUnsized> <- Arith(Add, r430, r61)
         r432: unknown <UnknownUnsized> <- StoreMem { addr: r431, value: r151 }
         r433: unknown <UnknownUnsized> <- Const { value: 48, size: 8 }
         r434: unknown <UnknownUnsized> <- Arith(Add, r433, r61)
         r435: unknown <UnknownUnsized> <- StoreMem { addr: r434, value: r1451 }
         r1497: unknown <UnknownUnsized> <- Upsilon { value: r1452, phi_ref: r1453 }
.B19:    ;; preds:B14,B18  → Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(20)) }.
  (  4)  r1453: unknown <UnknownUnsized> <- Phi
         r587: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r588: unknown <UnknownUnsized> <- Arith(Add, r587, r1453)
  (  2)  r589: unknown <UnknownUnsized> <- LoadMem { addr: r588, size: 8 }
         r593: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r596: unknown <UnknownUnsized> <- CArg { value: r589, next_arg: None }
         r597: unknown <UnknownUnsized> <- Call { callee: r593, first_arg: Some(r596) }
         r607: unknown <UnknownUnsized> <- Part { src: r597, offset: 0, size: 8 }
         r608: unknown <UnknownUnsized> <- Arith(Sub, r607, r116)
         r612: unknown <UnknownUnsized> <- IsZero(r608)
         r615: unknown <UnknownUnsized> <- Not(r612)
         r616: unknown <UnknownUnsized> <- SetJumpCondition(r615)
.B20:    ;; preds:B19  → Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(21)) }.
         r618: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r619: unknown <UnknownUnsized> <- Arith(Add, r618, r61)
         r620: unknown <UnknownUnsized> <- LoadMem { addr: r619, size: 8 }
         r624: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r631: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r632: unknown <UnknownUnsized> <- CArg { value: r589, next_arg: Some(r631) }
         r633: unknown <UnknownUnsized> <- CArg { value: r620, next_arg: Some(r632) }
         r634: unknown <UnknownUnsized> <- Call { callee: r624, first_arg: Some(r633) }
  (  2)  r644: unknown <UnknownUnsized> <- Part { src: r634, offset: 0, size: 8 }
         r645: unknown <UnknownUnsized> <- Part { src: r644, offset: 0, size: 4 }
         r646: unknown <UnknownUnsized> <- Part { src: r644, offset: 0, size: 4 }
         r647: unknown <UnknownUnsized> <- Arith(BitAnd, r645, r646)
         r649: unknown <UnknownUnsized> <- IsZero(r647)
         r654: unknown <UnknownUnsized> <- Not(r649)
         r655: unknown <UnknownUnsized> <- SetJumpCondition(r654)
.B21:    ;; preds:B20  → Always(Block(BlockID(24))).
         r658: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r659: unknown <UnknownUnsized> <- Arith(Add, r658, r61)
         r660: unknown <UnknownUnsized> <- LoadMem { addr: r659, size: 8 }
         r666: unknown <UnknownUnsized> <- Const { value: 56, size: 8 }
         r667: unknown <UnknownUnsized> <- Arith(Add, r666, r61)
         r668: unknown <UnknownUnsized> <- LoadMem { addr: r667, size: 8 }
         r1498: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1499: unknown <UnknownUnsized> <- Upsilon { value: r1453, phi_ref: r1457 }
         r1500: unknown <UnknownUnsized> <- Upsilon { value: r668, phi_ref: r1458 }
         r1501: unknown <UnknownUnsized> <- Upsilon { value: r660, phi_ref: r1459 }
.B15:    ;; preds:B19,B20  → Conditional { pos: Block(BlockID(22)), neg: Block(BlockID(16)) }.
         r437: unknown <UnknownUnsized> <- Const { value: 48, size: 8 }
         r438: unknown <UnknownUnsized> <- Arith(Add, r437, r1453)
  (  2)  r439: unknown <UnknownUnsized> <- LoadMem { addr: r438, size: 8 }
         r441: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
  (  6)  r442: unknown <UnknownUnsized> <- Arith(Add, r441, r1453)
         r444: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
  (  2)  r445: unknown <UnknownUnsized> <- Arith(Add, r444, r195)
         r451: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r452: unknown <UnknownUnsized> <- Arith(Add, r451, r61)
         r453: unknown <UnknownUnsized> <- StoreMem { addr: r452, value: r439 }
         r454: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r457: unknown <UnknownUnsized> <- CArg { value: r439, next_arg: None }
         r458: unknown <UnknownUnsized> <- Call { callee: r454, first_arg: Some(r457) }
         r468: unknown <UnknownUnsized> <- Part { src: r458, offset: 0, size: 8 }
         r469: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r470: unknown <UnknownUnsized> <- Arith(Add, r469, r61)
         r471: unknown <UnknownUnsized> <- LoadMem { addr: r470, size: 8 }
         r473: unknown <UnknownUnsized> <- Arith(Sub, r468, r116)
         r477: unknown <UnknownUnsized> <- IsZero(r473)
         r480: unknown <UnknownUnsized> <- SetJumpCondition(r477)
.B22:    ;; preds:B15  → Conditional { pos: Block(BlockID(16)), neg: Block(BlockID(23)) }.
         r671: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r672: unknown <UnknownUnsized> <- Arith(Add, r671, r61)
         r673: unknown <UnknownUnsized> <- LoadMem { addr: r672, size: 8 }
         r676: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r683: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r684: unknown <UnknownUnsized> <- CArg { value: r471, next_arg: Some(r683) }
         r685: unknown <UnknownUnsized> <- CArg { value: r673, next_arg: Some(r684) }
         r686: unknown <UnknownUnsized> <- Call { callee: r676, first_arg: Some(r685) }
  (  2)  r696: unknown <UnknownUnsized> <- Part { src: r686, offset: 0, size: 8 }
         r697: unknown <UnknownUnsized> <- Part { src: r696, offset: 0, size: 4 }
         r698: unknown <UnknownUnsized> <- Part { src: r696, offset: 0, size: 4 }
         r699: unknown <UnknownUnsized> <- Arith(BitAnd, r697, r698)
         r701: unknown <UnknownUnsized> <- IsZero(r699)
         r706: unknown <UnknownUnsized> <- Not(r701)
         r707: unknown <UnknownUnsized> <- SetJumpCondition(r706)
         r1507: unknown <UnknownUnsized> <- Upsilon { value: r442, phi_ref: r1455 }
.B16:    ;; preds:B15,B22  → Conditional { pos: Block(BlockID(38)), neg: Block(BlockID(17)) }.
         r482: unknown <UnknownUnsized> <- Const { value: 48, size: 8 }
         r483: unknown <UnknownUnsized> <- Arith(Add, r482, r442)
  (  2)  r484: unknown <UnknownUnsized> <- LoadMem { addr: r483, size: 8 }
         r486: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r487: unknown <UnknownUnsized> <- Arith(Add, r486, r442)
         r494: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r495: unknown <UnknownUnsized> <- Arith(Add, r494, r61)
         r496: unknown <UnknownUnsized> <- StoreMem { addr: r495, value: r484 }
         r497: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r500: unknown <UnknownUnsized> <- CArg { value: r484, next_arg: None }
         r501: unknown <UnknownUnsized> <- Call { callee: r497, first_arg: Some(r500) }
         r511: unknown <UnknownUnsized> <- Part { src: r501, offset: 0, size: 8 }
         r512: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r513: unknown <UnknownUnsized> <- Arith(Add, r512, r61)
         r514: unknown <UnknownUnsized> <- LoadMem { addr: r513, size: 8 }
         r516: unknown <UnknownUnsized> <- Arith(Sub, r511, r116)
         r520: unknown <UnknownUnsized> <- IsZero(r516)
         r523: unknown <UnknownUnsized> <- SetJumpCondition(r520)
.B38:    ;; preds:B16  → Conditional { pos: Block(BlockID(17)), neg: Block(BlockID(39)) }.
         r1088: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1089: unknown <UnknownUnsized> <- Arith(Add, r1088, r61)
         r1090: unknown <UnknownUnsized> <- LoadMem { addr: r1089, size: 8 }
         r1093: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1100: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1101: unknown <UnknownUnsized> <- CArg { value: r514, next_arg: Some(r1100) }
         r1102: unknown <UnknownUnsized> <- CArg { value: r1090, next_arg: Some(r1101) }
         r1103: unknown <UnknownUnsized> <- Call { callee: r1093, first_arg: Some(r1102) }
  (  2)  r1113: unknown <UnknownUnsized> <- Part { src: r1103, offset: 0, size: 8 }
         r1114: unknown <UnknownUnsized> <- Part { src: r1113, offset: 0, size: 4 }
         r1115: unknown <UnknownUnsized> <- Part { src: r1113, offset: 0, size: 4 }
         r1116: unknown <UnknownUnsized> <- Arith(BitAnd, r1114, r1115)
         r1118: unknown <UnknownUnsized> <- IsZero(r1116)
         r1123: unknown <UnknownUnsized> <- Not(r1118)
         r1124: unknown <UnknownUnsized> <- SetJumpCondition(r1123)
.B39:    ;; preds:B38  → Always(Block(BlockID(23))).
         r1509: unknown <UnknownUnsized> <- Upsilon { value: r487, phi_ref: r1455 }
.B17:    ;; preds:B16,B38  → Conditional { pos: Block(BlockID(40)), neg: Block(BlockID(18)) }.
         r525: unknown <UnknownUnsized> <- Const { value: 88, size: 8 }
         r526: unknown <UnknownUnsized> <- Arith(Add, r525, r442)
  (  2)  r527: unknown <UnknownUnsized> <- LoadMem { addr: r526, size: 8 }
         r529: unknown <UnknownUnsized> <- Const { value: 80, size: 8 }
         r530: unknown <UnknownUnsized> <- Arith(Add, r529, r442)
         r537: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r538: unknown <UnknownUnsized> <- Arith(Add, r537, r61)
         r539: unknown <UnknownUnsized> <- StoreMem { addr: r538, value: r527 }
         r540: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r543: unknown <UnknownUnsized> <- CArg { value: r527, next_arg: None }
         r544: unknown <UnknownUnsized> <- Call { callee: r540, first_arg: Some(r543) }
         r554: unknown <UnknownUnsized> <- Part { src: r544, offset: 0, size: 8 }
         r555: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r556: unknown <UnknownUnsized> <- Arith(Add, r555, r61)
         r557: unknown <UnknownUnsized> <- LoadMem { addr: r556, size: 8 }
  (  2)  r559: unknown <UnknownUnsized> <- Arith(Sub, r554, r116)
         r563: unknown <UnknownUnsized> <- IsZero(r559)
         r566: unknown <UnknownUnsized> <- SetJumpCondition(r563)
.B40:    ;; preds:B17  → Conditional { pos: Block(BlockID(18)), neg: Block(BlockID(41)) }.
         r1127: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1128: unknown <UnknownUnsized> <- Arith(Add, r1127, r61)
         r1129: unknown <UnknownUnsized> <- LoadMem { addr: r1128, size: 8 }
         r1132: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1139: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1140: unknown <UnknownUnsized> <- CArg { value: r557, next_arg: Some(r1139) }
         r1141: unknown <UnknownUnsized> <- CArg { value: r1129, next_arg: Some(r1140) }
         r1142: unknown <UnknownUnsized> <- Call { callee: r1132, first_arg: Some(r1141) }
  (  2)  r1152: unknown <UnknownUnsized> <- Part { src: r1142, offset: 0, size: 8 }
         r1153: unknown <UnknownUnsized> <- Part { src: r1152, offset: 0, size: 4 }
         r1154: unknown <UnknownUnsized> <- Part { src: r1152, offset: 0, size: 4 }
         r1155: unknown <UnknownUnsized> <- Arith(BitAnd, r1153, r1154)
         r1157: unknown <UnknownUnsized> <- IsZero(r1155)
         r1162: unknown <UnknownUnsized> <- Not(r1157)
         r1163: unknown <UnknownUnsized> <- SetJumpCondition(r1162)
.B41:    ;; preds:B40  → Always(Block(BlockID(23))).
         r1511: unknown <UnknownUnsized> <- Upsilon { value: r530, phi_ref: r1455 }
.B23:    ;; preds:B22,B39,B41  → Always(Block(BlockID(24))).
         r1455: unknown <UnknownUnsized> <- Phi
         r710: unknown <UnknownUnsized> <- Const { value: 40, size: 8 }
         r711: unknown <UnknownUnsized> <- Arith(Add, r710, r61)
         r712: unknown <UnknownUnsized> <- LoadMem { addr: r711, size: 8 }
         r719: unknown <UnknownUnsized> <- Const { value: 56, size: 8 }
         r720: unknown <UnknownUnsized> <- Arith(Add, r719, r61)
         r721: unknown <UnknownUnsized> <- LoadMem { addr: r720, size: 8 }
         r1502: unknown <UnknownUnsized> <- Upsilon { value: r445, phi_ref: r1456 }
         r1503: unknown <UnknownUnsized> <- Upsilon { value: r1455, phi_ref: r1457 }
         r1504: unknown <UnknownUnsized> <- Upsilon { value: r721, phi_ref: r1458 }
         r1505: unknown <UnknownUnsized> <- Upsilon { value: r712, phi_ref: r1459 }
.B24:    ;; preds:B21,B23,B48,B50,B52  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(25)) }.
         r1459: unknown <UnknownUnsized> <- Phi
         r1458: unknown <UnknownUnsized> <- Phi
         r1457: unknown <UnknownUnsized> <- Phi
         r1456: unknown <UnknownUnsized> <- Phi
         r723: unknown <UnknownUnsized> <- Const { value: 32, size: 8 }
         r724: unknown <UnknownUnsized> <- Arith(Add, r723, r61)
         r725: unknown <UnknownUnsized> <- LoadMem { addr: r724, size: 8 }
         r727: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r728: unknown <UnknownUnsized> <- Arith(Add, r727, r725)
         r729: unknown <UnknownUnsized> <- ArithK(Mul, r1459, 8)
         r730: unknown <UnknownUnsized> <- Arith(Add, r728, r729)
         r731: unknown <UnknownUnsized> <- StoreMem { addr: r730, value: r1456 }
         r732: unknown <UnknownUnsized> <- Arith(Sub, r1457, r1458)
         r736: unknown <UnknownUnsized> <- IsZero(r732)
         r739: unknown <UnknownUnsized> <- SetJumpCondition(r736)
         r1494: unknown <UnknownUnsized> <- Upsilon { value: r113, phi_ref: r1466 }
.B25:    ;; preds:B24  → Conditional { pos: Block(BlockID(34)), neg: Block(BlockID(26)) }.
         r741: unknown <UnknownUnsized> <- Const { value: 32, size: 8 }
         r742: unknown <UnknownUnsized> <- Arith(Add, r741, r24)
         r743: unknown <UnknownUnsized> <- LoadMem { addr: r742, size: 8 }
         r744: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r745: unknown <UnknownUnsized> <- Arith(Sub, r743, r744)
         r749: unknown <UnknownUnsized> <- IsZero(r745)
         r752: unknown <UnknownUnsized> <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
         r753: unknown <UnknownUnsized> <- Not(r749)
         r754: unknown <UnknownUnsized> <- SetJumpCondition(r753)
         r1495: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1463 }
         r1496: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1460 }
.B26:    ;; preds:B25,B33  → Conditional { pos: Block(BlockID(54)), neg: Block(BlockID(27)) }.
  (  2)  r1460: unknown <UnknownUnsized> <- Phi
         r756: unknown <UnknownUnsized> <- Part { src: r1460, offset: 0, size: 1 }
         r757: unknown <UnknownUnsized> <- Part { src: r1460, offset: 0, size: 1 }
         r758: unknown <UnknownUnsized> <- Arith(BitAnd, r756, r757)
         r760: unknown <UnknownUnsized> <- IsZero(r758)
         r765: unknown <UnknownUnsized> <- SetJumpCondition(r760)
.B27:    ;; preds:B26  → Conditional { pos: Block(BlockID(43)), neg: Block(BlockID(28)) }.
         r767: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
  (  2)  r768: unknown <UnknownUnsized> <- Arith(Add, r767, r1444)
         r770: unknown <UnknownUnsized> <- Const { value: 46, size: 4 }
         r771: unknown <UnknownUnsized> <- Part { src: r50, offset: 4, size: 4 }
  (  2)  r772: unknown <UnknownUnsized> <- Concat { lo: r770, hi: r771 }
         r773: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r774: unknown <UnknownUnsized> <- Arith(Add, r773, r61)
         r775: unknown <UnknownUnsized> <- StoreMem { addr: r774, value: r768 }
         r776: strchr <Regular(4247322)> <- Const { value: 4199040, size: 8 }
         r781: unknown <UnknownUnsized> <- Part { src: r772, offset: 0, size: 4 }
         r782: unknown <UnknownUnsized> <- CArg { value: r781, next_arg: None }
         r783: unknown <UnknownUnsized> <- CArg { value: r768, next_arg: Some(r782) }
         r784: unknown <UnknownUnsized> <- Call { callee: r776, first_arg: Some(r783) }
  (  3)  r794: unknown <UnknownUnsized> <- Part { src: r784, offset: 0, size: 8 }
         r796: unknown <UnknownUnsized> <- Arith(BitAnd, r794, r794)
         r798: unknown <UnknownUnsized> <- IsZero(r796)
         r803: unknown <UnknownUnsized> <- SetJumpCondition(r798)
.B28:    ;; preds:B27  → Conditional { pos: Block(BlockID(44)), neg: Block(BlockID(29)) }.
         r810: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r811: unknown <UnknownUnsized> <- Arith(Add, r810, r61)
         r812: unknown <UnknownUnsized> <- LoadMem { addr: r811, size: 8 }
         r814: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
         r815: unknown <UnknownUnsized> <- Arith(Add, r151, r814)
         r831: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r832: unknown <UnknownUnsized> <- Arith(Add, r831, r812)
         r833: unknown <UnknownUnsized> <- LoadMem { addr: r832, size: 8 }
         r834: unknown <UnknownUnsized> <- Arith(Sub, r815, r833)
         r836: unknown <UnknownUnsized> <- CarryOf(r834)
         r841: unknown <UnknownUnsized> <- Not(r836)
         r842: unknown <UnknownUnsized> <- SetJumpCondition(r841)
.B43:    ;; preds:B27  → Conditional { pos: Block(BlockID(29)), neg: Block(BlockID(44)) }.
         r1202: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
         r1203: unknown <UnknownUnsized> <- Arith(Add, r151, r1202)
         r1212: __builtin_strlen <Regular(4551370)> <- Const { value: 4199136, size: 8 }
         r1213: unknown <UnknownUnsized> <- Call { callee: r1212, first_arg: None }
         r1223: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r1224: unknown <UnknownUnsized> <- Arith(Add, r1223, r61)
         r1225: unknown <UnknownUnsized> <- LoadMem { addr: r1224, size: 8 }
         r1233: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1234: unknown <UnknownUnsized> <- Arith(Add, r1233, r1225)
         r1235: unknown <UnknownUnsized> <- LoadMem { addr: r1234, size: 8 }
         r1236: unknown <UnknownUnsized> <- Arith(Sub, r1203, r1235)
         r1238: unknown <UnknownUnsized> <- CarryOf(r1236)
         r1243: unknown <UnknownUnsized> <- SetJumpCondition(r1238)
.B44:    ;; preds:B28,B43  → Always(Block(BlockID(45))).
         r1245: unknown <UnknownUnsized> <- Const { value: 72, size: 8 }
         r1246: unknown <UnknownUnsized> <- Arith(Add, r1245, r61)
         r1247: unknown <UnknownUnsized> <- LoadMem { addr: r1246, size: 8 }
         r1487: unknown <UnknownUnsized> <- Upsilon { value: r1247, phi_ref: r1467 }
.B29:    ;; preds:B28,B43  → Conditional { pos: Block(BlockID(4)), neg: Block(BlockID(30)) }.
         r845: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r846: unknown <UnknownUnsized> <- Arith(Add, r845, r24)
         r847: unknown <UnknownUnsized> <- LoadMem { addr: r846, size: 8 }
         r849: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r850: unknown <UnknownUnsized> <- Arith(Add, r849, r847)
         r851: unknown <UnknownUnsized> <- LoadMem { addr: r850, size: 1 }
         r852: unknown <UnknownUnsized> <- Const { value: 0, size: 1 }
         r853: unknown <UnknownUnsized> <- Arith(Sub, r851, r852)
         r857: unknown <UnknownUnsized> <- IsZero(r853)
         r860: unknown <UnknownUnsized> <- Not(r857)
         r861: unknown <UnknownUnsized> <- SetJumpCondition(r860)
         r1488: unknown <UnknownUnsized> <- Upsilon { value: r24, phi_ref: r1445 }
         r1489: unknown <UnknownUnsized> <- Upsilon { value: r772, phi_ref: r1461 }
         r1490: unknown <UnknownUnsized> <- Upsilon { value: r794, phi_ref: r1462 }
.B54:    ;; preds:B26  → Always(Block(BlockID(35))).
         r1437: unknown <UnknownUnsized> <- Const { value: 72, size: 8 }
         r1438: unknown <UnknownUnsized> <- Arith(Add, r1437, r61)
         r1439: unknown <UnknownUnsized> <- LoadMem { addr: r1438, size: 8 }
         r1486: unknown <UnknownUnsized> <- Upsilon { value: r1439, phi_ref: r1464 }
.B18:    ;; preds:B17,B40  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(19)) }.
         r568: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r569: unknown <UnknownUnsized> <- Arith(Add, r568, r61)
         r570: unknown <UnknownUnsized> <- LoadMem { addr: r569, size: 8 }
         r572: unknown <UnknownUnsized> <- Const { value: 3, size: 8 }
         r573: unknown <UnknownUnsized> <- Arith(Add, r572, r445)
         r575: unknown <UnknownUnsized> <- Const { value: 120, size: 8 }
         r576: unknown <UnknownUnsized> <- Arith(Add, r575, r442)
         r578: unknown <UnknownUnsized> <- Arith(Sub, r573, r570)
         r582: unknown <UnknownUnsized> <- IsZero(r578)
         r585: unknown <UnknownUnsized> <- SetJumpCondition(r582)
         r1512: unknown <UnknownUnsized> <- Upsilon { value: r559, phi_ref: r1466 }
         r1513: unknown <UnknownUnsized> <- Upsilon { value: r576, phi_ref: r1453 }
.B30:    ;; preds:B3,B29  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(31)) }.
         r1462: unknown <UnknownUnsized> <- Phi
  (  3)  r1461: unknown <UnknownUnsized> <- Phi
         r863: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r864: unknown <UnknownUnsized> <- Arith(Add, r863, r61)
         r865: unknown <UnknownUnsized> <- LoadMem { addr: r864, size: 8 }
         r867: unknown <UnknownUnsized> <- Part { src: r1461, offset: 0, size: 4 }
         r868: unknown <UnknownUnsized> <- Part { src: r1461, offset: 0, size: 4 }
         r869: unknown <UnknownUnsized> <- Arith(BitXor, r867, r868)
         r870: unknown <UnknownUnsized> <- Part { src: r1461, offset: 4, size: 4 }
         r871: unknown <UnknownUnsized> <- Concat { lo: r869, hi: r870 }
         r878: unknown <UnknownUnsized> <- Const { value: 10, size: 4 }
         r879: unknown <UnknownUnsized> <- Part { src: r128, offset: 4, size: 4 }
         r880: unknown <UnknownUnsized> <- Concat { lo: r878, hi: r879 }
         r881: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r882: unknown <UnknownUnsized> <- Arith(Add, r881, r61)
         r883: unknown <UnknownUnsized> <- StoreMem { addr: r882, value: r1462 }
         r884: je_malloc_strtoumax <Regular(4247235)> <- Const { value: 6451424, size: 8 }
         r891: unknown <UnknownUnsized> <- Part { src: r880, offset: 0, size: 4 }
         r892: unknown <UnknownUnsized> <- CArg { value: r891, next_arg: None }
         r893: unknown <UnknownUnsized> <- CArg { value: r871, next_arg: Some(r892) }
         r894: unknown <UnknownUnsized> <- CArg { value: r865, next_arg: Some(r893) }
         r895: unknown <UnknownUnsized> <- Call { callee: r884, first_arg: Some(r894) }
         r905: unknown <UnknownUnsized> <- Part { src: r895, offset: 0, size: 8 }
         r906: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r907: unknown <UnknownUnsized> <- Arith(Add, r906, r61)
         r908: unknown <UnknownUnsized> <- LoadMem { addr: r907, size: 8 }
         r910: unknown <UnknownUnsized> <- Const { value: -1, size: 8 }
  (  7)  r911: unknown <UnknownUnsized> <- Arith(Sub, r905, r910)
         r915: unknown <UnknownUnsized> <- IsZero(r911)
         r919: unknown <UnknownUnsized> <- SetJumpCondition(r915)
         r1482: unknown <UnknownUnsized> <- Upsilon { value: r911, phi_ref: r1466 }
.B31:    ;; preds:B30  → Conditional { pos: Ext(4206915), neg: Block(BlockID(32)) }.
         r921: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r922: unknown <UnknownUnsized> <- Arith(Add, r921, r14)
  (  2)  r923: unknown <UnknownUnsized> <- LoadMem { addr: r922, size: 8 }
         r925: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r926: unknown <UnknownUnsized> <- Arith(Add, r925, r61)
         r927: unknown <UnknownUnsized> <- StoreMem { addr: r926, value: r908 }
         r928: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r929: unknown <UnknownUnsized> <- Arith(Add, r928, r923)
         r930: unknown <UnknownUnsized> <- LoadMem { addr: r929, size: 1 }
         r931: unknown <UnknownUnsized> <- Const { value: 0, size: 1 }
         r932: unknown <UnknownUnsized> <- Arith(Sub, r930, r931)
         r936: unknown <UnknownUnsized> <- IsZero(r932)
         r939: unknown <UnknownUnsized> <- Not(r936)
         r940: unknown <UnknownUnsized> <- SetJumpCondition(r939)
.B32:    ;; preds:B31  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(33)) }.
         r942: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r943: unknown <UnknownUnsized> <- Arith(Add, r942, r61)
         r944: unknown <UnknownUnsized> <- LoadMem { addr: r943, size: 8 }
         r946: unknown <UnknownUnsized> <- Const { value: 32, size: 8 }
         r947: unknown <UnknownUnsized> <- Arith(Add, r946, r61)
  (  2)  r948: unknown <UnknownUnsized> <- LoadMem { addr: r947, size: 8 }
         r950: unknown <UnknownUnsized> <- Const { value: 64, size: 8 }
         r951: unknown <UnknownUnsized> <- Arith(Add, r950, r61)
  (  3)  r952: unknown <UnknownUnsized> <- LoadMem { addr: r951, size: 8 }
         r954: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r955: unknown <UnknownUnsized> <- Arith(Add, r954, r944)
         r956: unknown <UnknownUnsized> <- LoadMem { addr: r955, size: 8 }
         r960: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r961: unknown <UnknownUnsized> <- Arith(Add, r960, r923)
         r962: unknown <UnknownUnsized> <- LoadMem { addr: r961, size: 8 }
         r963: unknown <UnknownUnsized> <- LoadMem { addr: r962, size: 8 }
         r964: unknown <UnknownUnsized> <- CArg { value: r911, next_arg: None }
         r965: unknown <UnknownUnsized> <- CArg { value: r956, next_arg: Some(r964) }
         r966: unknown <UnknownUnsized> <- CArg { value: r948, next_arg: Some(r965) }
         r967: unknown <UnknownUnsized> <- CArg { value: r952, next_arg: Some(r966) }
         r968: unknown <UnknownUnsized> <- Call { callee: r963, first_arg: Some(r967) }
  (  2)  r980: unknown <UnknownUnsized> <- Arith(BitAnd, r911, r911)
         r982: unknown <UnknownUnsized> <- IsZero(r980)
         r987: unknown <UnknownUnsized> <- SetJumpCondition(r982)
         r1483: unknown <UnknownUnsized> <- Upsilon { value: r980, phi_ref: r1466 }
.B33:    ;; preds:B32  → Conditional { pos: Block(BlockID(26)), neg: Block(BlockID(34)) }.
         r993: unknown <UnknownUnsized> <- Const { value: 32, size: 8 }
         r994: unknown <UnknownUnsized> <- Arith(Add, r993, r911)
         r995: unknown <UnknownUnsized> <- LoadMem { addr: r994, size: 8 }
         r996: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r997: unknown <UnknownUnsized> <- Arith(Sub, r995, r996)
         r1001: unknown <UnknownUnsized> <- IsZero(r997)
         r1004: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1005: unknown <UnknownUnsized> <- Arith(Add, r1004, r948)
         r1006: unknown <UnknownUnsized> <- ArithK(Mul, r151, 8)
         r1007: unknown <UnknownUnsized> <- Arith(Add, r1005, r1006)
         r1008: unknown <UnknownUnsized> <- StoreMem { addr: r1007, value: r911 }
         r1009: unknown <UnknownUnsized> <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
         r1010: unknown <UnknownUnsized> <- SetJumpCondition(r1001)
         r1484: unknown <UnknownUnsized> <- Upsilon { value: r952, phi_ref: r1460 }
         r1485: unknown <UnknownUnsized> <- Upsilon { value: r952, phi_ref: r1463 }
.B34:    ;; preds:B25,B33  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(35)) }.
  (  2)  r1463: unknown <UnknownUnsized> <- Phi
         r1012: unknown <UnknownUnsized> <- Const { value: 72, size: 8 }
         r1013: unknown <UnknownUnsized> <- Arith(Add, r1012, r61)
         r1014: unknown <UnknownUnsized> <- LoadMem { addr: r1013, size: 8 }
         r1016: unknown <UnknownUnsized> <- Part { src: r1463, offset: 0, size: 1 }
         r1017: unknown <UnknownUnsized> <- Part { src: r1463, offset: 0, size: 1 }
         r1018: unknown <UnknownUnsized> <- Arith(BitAnd, r1016, r1017)
         r1020: unknown <UnknownUnsized> <- IsZero(r1018)
         r1025: unknown <UnknownUnsized> <- Not(r1020)
         r1026: unknown <UnknownUnsized> <- SetJumpCondition(r1025)
         r1480: unknown <UnknownUnsized> <- Upsilon { value: r113, phi_ref: r1466 }
         r1481: unknown <UnknownUnsized> <- Upsilon { value: r1014, phi_ref: r1464 }
.B35:    ;; preds:B34,B54  → Conditional { pos: Block(BlockID(46)), neg: Block(BlockID(36)) }.
  (  2)  r1464: unknown <UnknownUnsized> <- Phi
         r1028: unknown <UnknownUnsized> <- Const { value: 1, size: 8 }
         r1029: unknown <UnknownUnsized> <- Arith(Add, r1028, r151)
         r1031: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r1032: unknown <UnknownUnsized> <- Arith(Add, r1031, r61)
         r1033: unknown <UnknownUnsized> <- LoadMem { addr: r1032, size: 8 }
         r1035: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1036: unknown <UnknownUnsized> <- Arith(Add, r1035, r1033)
         r1037: unknown <UnknownUnsized> <- StoreMem { addr: r1036, value: r1029 }
  (  2)  r1038: unknown <UnknownUnsized> <- Arith(BitAnd, r1464, r1464)
         r1040: unknown <UnknownUnsized> <- IsZero(r1038)
         r1045: unknown <UnknownUnsized> <- Not(r1040)
         r1046: unknown <UnknownUnsized> <- SetJumpCondition(r1045)
         r1479: unknown <UnknownUnsized> <- Upsilon { value: r1038, phi_ref: r1468 }
.B55:    ;; preds:B2  → Always(Block(BlockID(45))).
         r1472: unknown <UnknownUnsized> <- Upsilon { value: r17, phi_ref: r1467 }
.B45:    ;; preds:B44,B55  → Conditional { pos: Block(BlockID(36)), neg: Block(BlockID(46)) }.
  (  2)  r1467: unknown <UnknownUnsized> <- Phi
  (  2)  r1249: unknown <UnknownUnsized> <- Arith(BitAnd, r1467, r1467)
         r1251: unknown <UnknownUnsized> <- IsZero(r1249)
         r1256: unknown <UnknownUnsized> <- SetJumpCondition(r1251)
         r1474: unknown <UnknownUnsized> <- Upsilon { value: r1249, phi_ref: r1468 }
.B46:    ;; preds:B35,B45  → Always(Block(BlockID(37))).
         r1468: unknown <UnknownUnsized> <- Phi
         r1258: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r1259: unknown <UnknownUnsized> <- Arith(Add, r1258, r1468)
         r1260: unknown <UnknownUnsized> <- StoreMem { addr: r1259, value: r24 }
         r1261: unknown <UnknownUnsized> <- Part { src: r113, offset: 0, size: 4 }
         r1262: unknown <UnknownUnsized> <- Part { src: r113, offset: 0, size: 4 }
         r1263: unknown <UnknownUnsized> <- Arith(BitXor, r1261, r1262)
         r1264: unknown <UnknownUnsized> <- Part { src: r113, offset: 4, size: 4 }
         r1265: unknown <UnknownUnsized> <- Concat { lo: r1263, hi: r1264 }
         r1473: unknown <UnknownUnsized> <- Upsilon { value: r1265, phi_ref: r1465 }
.B36:    ;; preds:B35,B45  → Always(Block(BlockID(37))).
         r1048: unknown <UnknownUnsized> <- Part { src: r113, offset: 0, size: 4 }
         r1049: unknown <UnknownUnsized> <- Part { src: r113, offset: 0, size: 4 }
         r1050: unknown <UnknownUnsized> <- Arith(BitXor, r1048, r1049)
         r1051: unknown <UnknownUnsized> <- Part { src: r113, offset: 4, size: 4 }
         r1052: unknown <UnknownUnsized> <- Concat { lo: r1050, hi: r1051 }
         r1475: unknown <UnknownUnsized> <- Upsilon { value: r1052, phi_ref: r1465 }
.B37:    ;; preds:B36,B46  → Always(Return).
         r1465: unknown <UnknownUnsized> <- Phi
         r1086: unknown <UnknownUnsized> <- SetReturnValue(r1465)
.B42:    ;; preds:B1,B4,B13,B18,B24,B30,B32,B34  → Always(Return).
         r1466: unknown <UnknownUnsized> <- Phi
         r1175: unknown <UnknownUnsized> <- Const { value: 2, size: 4 }
         r1176: unknown <UnknownUnsized> <- Part { src: r1466, offset: 4, size: 4 }
         r1177: unknown <UnknownUnsized> <- Concat { lo: r1175, hi: r1176 }
         r1196: unknown <UnknownUnsized> <- SetReturnValue(r1177)


 --- cfg
  entry: BlockID(0)
  BlockID(0) -> Conditional { pos: Block(BlockID(53)), neg: Block(BlockID(1)) } [r10, r11, r13, r14, r16, r17, r18, r19, r20, r23, r24, r25, r26, r43, r44, r45, r46, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r70, r71, r74, r75, r77, r78, r80, r81, r82, r88, r89, r90, r104, r109, r1469]
  BlockID(1) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(2)) } [r1444, r116, r121, r124, r1471]
  BlockID(2) -> Conditional { pos: Block(BlockID(55)), neg: Block(BlockID(3)) } [r132, r138, r141]
  BlockID(3) -> Conditional { pos: Block(BlockID(30)), neg: Block(BlockID(4)) } [r144, r145, r147, r148, r149, r150, r151, r159, r160, r163, r169, r172, r1476, r1477, r1478]
  BlockID(4) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(5)) } [r1445, r175, r176, r179, r180, r183, r188, r1491]
  BlockID(5) -> Conditional { pos: Block(BlockID(14)), neg: Block(BlockID(6)) } [r191, r192, r193, r194, r195, r202, r204, r205, r206, r210, r213, r1492, r1493]
  BlockID(6) -> Conditional { pos: Block(BlockID(12)), neg: Block(BlockID(7)) } [r216, r220, r223, r1514, r1515]
  BlockID(7) -> Conditional { pos: Block(BlockID(10)), neg: Block(BlockID(8)) } [r226, r230, r233, r1523, r1524]
  BlockID(8) -> Conditional { pos: Block(BlockID(51)), neg: Block(BlockID(9)) } [r236, r237, r240, r241, r244, r245, r248, r249, r250, r253, r254, r274, r278, r281, r1531]
  BlockID(9) -> Always(Block(BlockID(10))) [r1446, r287, r1537, r1538]
  BlockID(10) -> Conditional { pos: Block(BlockID(49)), neg: Block(BlockID(11)) } [r1448, r1447, r290, r291, r294, r295, r299, r300, r301, r304, r305, r324, r328, r331]
  BlockID(11) -> Always(Block(BlockID(12))) [r343, r1529, r1530]
  BlockID(12) -> Conditional { pos: Block(BlockID(47)), neg: Block(BlockID(13)) } [r1450, r1449, r352, r353, r356, r357, r361, r362, r363, r366, r367, r386, r390, r393]
  BlockID(13) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(14)) } [r400, r409, r417, r421, r424, r1520, r1521, r1522]
  BlockID(14) -> Always(Block(BlockID(19))) [r1452, r1451, r427, r428, r431, r432, r434, r435, r1497]
  BlockID(15) -> Conditional { pos: Block(BlockID(22)), neg: Block(BlockID(16)) } [r438, r439, r442, r445, r452, r453, r454, r457, r458, r473, r477, r480]
  BlockID(16) -> Conditional { pos: Block(BlockID(38)), neg: Block(BlockID(17)) } [r483, r484, r487, r495, r496, r497, r500, r501, r516, r520, r523]
  BlockID(17) -> Conditional { pos: Block(BlockID(40)), neg: Block(BlockID(18)) } [r526, r527, r530, r538, r539, r540, r543, r544, r559, r563, r566]
  BlockID(18) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(19)) } [r573, r576, r578, r582, r585, r1512, r1513]
  BlockID(19) -> Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(20)) } [r1453, r588, r589, r593, r596, r597, r608, r612, r615, r616]
  BlockID(20) -> Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(21)) } [r624, r631, r632, r633, r634, r645, r646, r647, r649, r654, r655]
  BlockID(21) -> Always(Block(BlockID(24))) [r1498, r1499, r1500, r1501]
  BlockID(22) -> Conditional { pos: Block(BlockID(16)), neg: Block(BlockID(23)) } [r676, r683, r684, r685, r686, r697, r698, r699, r701, r706, r707, r1507]
  BlockID(23) -> Always(Block(BlockID(24))) [r1455, r1502, r1503, r1504, r1505]
  BlockID(24) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(25)) } [r1459, r1458, r1457, r1456, r729, r730, r731, r732, r736, r739, r1494]
  BlockID(25) -> Conditional { pos: Block(BlockID(34)), neg: Block(BlockID(26)) } [r742, r743, r749, r752, r753, r754, r1495, r1496]
  BlockID(26) -> Conditional { pos: Block(BlockID(54)), neg: Block(BlockID(27)) } [r1460, r756, r757, r758, r760, r765]
  BlockID(27) -> Conditional { pos: Block(BlockID(43)), neg: Block(BlockID(28)) } [r768, r770, r771, r772, r774, r775, r776, r782, r783, r784, r798, r803]
  BlockID(28) -> Conditional { pos: Block(BlockID(44)), neg: Block(BlockID(29)) } [r815, r833, r834, r836, r841, r842]
  BlockID(29) -> Conditional { pos: Block(BlockID(4)), neg: Block(BlockID(30)) } [r846, r847, r851, r857, r860, r861, r1488, r1489, r1490]
  BlockID(30) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(31)) } [r1462, r1461, r867, r868, r869, r870, r871, r878, r882, r883, r884, r892, r893, r894, r895, r911, r915, r919, r1482]
  BlockID(31) -> Conditional { pos: Ext(4206915), neg: Block(BlockID(32)) } [r922, r923, r926, r927, r930, r936, r939, r940]
  BlockID(32) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(33)) } [r956, r961, r962, r963, r964, r965, r966, r967, r968, r982, r987, r1483]
  BlockID(33) -> Conditional { pos: Block(BlockID(26)), neg: Block(BlockID(34)) } [r994, r995, r1001, r1006, r1007, r1008, r1009, r1010, r1484, r1485]
  BlockID(34) -> Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(35)) } [r1463, r1016, r1017, r1018, r1020, r1025, r1026, r1480, r1481]
  BlockID(35) -> Conditional { pos: Block(BlockID(46)), neg: Block(BlockID(36)) } [r1464, r1029, r1037, r1040, r1045, r1046, r1479]
  BlockID(36) -> Always(Block(BlockID(37))) [r1048, r1049, r1050, r1051, r1052, r1475]
  BlockID(37) -> Always(Return) [r1465, r1086]
  BlockID(38) -> Conditional { pos: Block(BlockID(17)), neg: Block(BlockID(39)) } [r1093, r1100, r1101, r1102, r1103, r1114, r1115, r1116, r1118, r1123, r1124]
  BlockID(39) -> Always(Block(BlockID(23))) [r1509]
  BlockID(40) -> Conditional { pos: Block(BlockID(18)), neg: Block(BlockID(41)) } [r1132, r1139, r1140, r1141, r1142, r1153, r1154, r1155, r1157, r1162, r1163]
  BlockID(41) -> Always(Block(BlockID(23))) [r1511]
  BlockID(42) -> Always(Return) [r1466, r1175, r1176, r1177, r1196]
  BlockID(43) -> Conditional { pos: Block(BlockID(29)), neg: Block(BlockID(44)) } [r1203, r1212, r1213, r1235, r1236, r1238, r1243]
  BlockID(44) -> Always(Block(BlockID(45))) [r1487]
  BlockID(45) -> Conditional { pos: Block(BlockID(36)), neg: Block(BlockID(46)) } [r1467, r1251, r1256, r1474]
  BlockID(46) -> Always(Block(BlockID(37))) [r1468, r1260, r1261, r1262, r1263, r1264, r1265, r1473]
  BlockID(47) -> Conditional { pos: Block(BlockID(13)), neg: Block(BlockID(48)) } [r1279, r1280, r1281, r1288, r1289, r1290, r1291, r1306, r1307, r1308, r1310, r1315, r1316]
  BlockID(48) -> Always(Block(BlockID(24))) [r1516, r1517, r1518, r1519]
  BlockID(49) -> Conditional { pos: Block(BlockID(11)), neg: Block(BlockID(50)) } [r1325, r1326, r1327, r1334, r1335, r1336, r1337, r1352, r1353, r1354, r1356, r1361, r1362]
  BlockID(50) -> Always(Block(BlockID(24))) [r1525, r1526, r1527, r1528]
  BlockID(51) -> Conditional { pos: Block(BlockID(9)), neg: Block(BlockID(52)) } [r1371, r1372, r1374, r1375, r1376, r1383, r1384, r1385, r1386, r1402, r1403, r1404, r1406, r1411, r1412, r1532]
  BlockID(52) -> Always(Block(BlockID(24))) [r1533, r1534, r1535, r1536]
  BlockID(53) -> Always(Block(BlockID(1))) [r1420, r1421, r1434, r1470]
  BlockID(54) -> Always(Block(BlockID(35))) [r1486]
  BlockID(55) -> Always(Block(BlockID(45))) [r1472]
  domtree:
    BlockID(0)
|  BlockID(1)
|  |  BlockID(2)
|  |  |  BlockID(3)
|  |  |  |  BlockID(4)
|  |  |  |  |  BlockID(5)
|  |  |  |  |  |  BlockID(6)
|  |  |  |  |  |  |  BlockID(7)
|  |  |  |  |  |  |  |  BlockID(8)
|  |  |  |  |  |  |  |  |  BlockID(9)
|  |  |  |  |  |  |  |  |  BlockID(51)
|  |  |  |  |  |  |  |  |  |  BlockID(52)
|  |  |  |  |  |  |  |  BlockID(10)
|  |  |  |  |  |  |  |  |  BlockID(11)
|  |  |  |  |  |  |  |  |  BlockID(49)
|  |  |  |  |  |  |  |  |  |  BlockID(50)
|  |  |  |  |  |  |  BlockID(12)
|  |  |  |  |  |  |  |  BlockID(13)
|  |  |  |  |  |  |  |  BlockID(47)
|  |  |  |  |  |  |  |  |  BlockID(48)
|  |  |  |  |  |  BlockID(14)
|  |  |  |  |  |  |  BlockID(19)
|  |  |  |  |  |  |  |  BlockID(15)
|  |  |  |  |  |  |  |  |  BlockID(16)
|  |  |  |  |  |  |  |  |  |  BlockID(17)
|  |  |  |  |  |  |  |  |  |  |  BlockID(18)
|  |  |  |  |  |  |  |  |  |  |  BlockID(40)
|  |  |  |  |  |  |  |  |  |  |  |  BlockID(41)
|  |  |  |  |  |  |  |  |  |  BlockID(38)
|  |  |  |  |  |  |  |  |  |  |  BlockID(39)
|  |  |  |  |  |  |  |  |  BlockID(22)
|  |  |  |  |  |  |  |  |  BlockID(23)
|  |  |  |  |  |  |  |  BlockID(20)
|  |  |  |  |  |  |  |  |  BlockID(21)
|  |  |  |  |  |  BlockID(24)
|  |  |  |  |  |  |  BlockID(25)
|  |  |  |  BlockID(26)
|  |  |  |  |  BlockID(27)
|  |  |  |  |  |  BlockID(28)
|  |  |  |  |  |  BlockID(29)
|  |  |  |  |  |  BlockID(43)
|  |  |  |  |  |  BlockID(44)
|  |  |  |  |  BlockID(54)
|  |  |  |  BlockID(30)
|  |  |  |  |  BlockID(31)
|  |  |  |  |  |  BlockID(32)
|  |  |  |  |  |  |  BlockID(33)
|  |  |  |  BlockID(34)
|  |  |  |  BlockID(35)
|  |  |  BlockID(36)
|  |  |  BlockID(37)
|  |  |  BlockID(45)
|  |  |  BlockID(46)
|  |  |  BlockID(55)
|  |  BlockID(42)
|  BlockID(53)

 --- ssa
ssa program  1724 instrs
.B0:    ;;  → Conditional { pos: Block(BlockID(53)), neg: Block(BlockID(1)) }.
         r10: unknown <UnknownUnsized> <- Ancestral(AncestralName("RBP"))
  ( 32)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  4)  r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
  (  5)  r14: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSI"))
         r16: unknown <UnknownUnsized> <- Ancestral(AncestralName("RBX"))
  (  8)  r17: unknown <UnknownUnsized> <- Ancestral(AncestralName("RCX"))
  ( 24)  r18: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDX"))
  (  4)  r19: unknown <UnknownUnsized> <- Ancestral(AncestralName("R8"))
  (  6)  r20: unknown <UnknownUnsized> <- Ancestral(AncestralName("R9"))
         r23: unknown <UnknownUnsized> <- Ancestral(AncestralName("R12"))
  (  5)  r24: unknown <UnknownUnsized> <- Ancestral(AncestralName("R13"))
         r25: unknown <UnknownUnsized> <- Ancestral(AncestralName("R14"))
  (  4)  r26: unknown <UnknownUnsized> <- Ancestral(AncestralName("R15"))
         r43: unknown <UnknownUnsized> <- ArithK(Add, r11, -8)
         r44: unknown <UnknownUnsized> <- StoreMem { addr: r43, value: r26 }
         r45: unknown <UnknownUnsized> <- ArithK(Add, r11, -16)
         r46: unknown <UnknownUnsized> <- StoreMem { addr: r45, value: r25 }
  (  2)  r48: unknown <UnknownUnsized> <- Const { value: 46, size: 4 }
         r49: unknown <UnknownUnsized> <- Part { src: r14, offset: 4, size: 4 }
         r50: unknown <UnknownUnsized> <- Concat { lo: r48, hi: r49 }
         r51: unknown <UnknownUnsized> <- ArithK(Add, r11, -24)
         r52: unknown <UnknownUnsized> <- StoreMem { addr: r51, value: r24 }
         r53: unknown <UnknownUnsized> <- ArithK(Add, r11, -32)
         r54: unknown <UnknownUnsized> <- StoreMem { addr: r53, value: r23 }
         r55: unknown <UnknownUnsized> <- ArithK(Add, r11, -40)
         r56: unknown <UnknownUnsized> <- StoreMem { addr: r55, value: r10 }
         r57: unknown <UnknownUnsized> <- ArithK(Add, r11, -48)
         r58: unknown <UnknownUnsized> <- StoreMem { addr: r57, value: r16 }
         r70: unknown <UnknownUnsized> <- ArithK(Add, r11, -72)
         r71: unknown <UnknownUnsized> <- StoreMem { addr: r70, value: r13 }
         r74: unknown <UnknownUnsized> <- ArithK(Add, r11, -104)
         r75: unknown <UnknownUnsized> <- StoreMem { addr: r74, value: r19 }
         r77: unknown <UnknownUnsized> <- ArithK(Add, r11, -136)
         r78: unknown <UnknownUnsized> <- StoreMem { addr: r77, value: r18 }
         r80: unknown <UnknownUnsized> <- ArithK(Add, r11, -112)
         r81: unknown <UnknownUnsized> <- StoreMem { addr: r80, value: r20 }
         r82: strchr <Regular(4247322)> <- Const { value: 4199040, size: 8 }
         r88: unknown <UnknownUnsized> <- CArg { value: r48, next_arg: None }
         r89: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r88) }
  (  3)  r90: unknown <UnknownUnsized> <- Call { callee: r82, first_arg: Some(r89) }
         r104: unknown <UnknownUnsized> <- IsZero(r90)
         r109: unknown <UnknownUnsized> <- SetJumpCondition(r104)
         r1469: unknown <UnknownUnsized> <- Upsilon { value: r90, phi_ref: r1444 }
.B53:    ;; preds:B0  → Always(Block(BlockID(1))).
         r1420: __builtin_strlen <Regular(4551370)> <- Const { value: 4199136, size: 8 }
         r1421: unknown <UnknownUnsized> <- Call { callee: r1420, first_arg: None }
         r1434: unknown <UnknownUnsized> <- Arith(Add, r18, r90)
         r1470: unknown <UnknownUnsized> <- Upsilon { value: r1434, phi_ref: r1444 }
.B1:    ;; preds:B0,B53  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(2)) }.
  (  9)  r1444: unknown <UnknownUnsized> <- Phi
  ( 15)  r116: unknown <UnknownUnsized> <- Arith(Sub, r1444, r18)
         r121: unknown <UnknownUnsized> <- IsZero(r116)
         r124: unknown <UnknownUnsized> <- SetJumpCondition(r121)
         r1471: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1466 }
.B2:    ;; preds:B1  → Conditional { pos: Block(BlockID(55)), neg: Block(BlockID(3)) }.
         r132: unknown <UnknownUnsized> <- LoadMem { addr: r20, size: 8 }
         r138: unknown <UnknownUnsized> <- IsZero(r132)
         r141: unknown <UnknownUnsized> <- SetJumpCondition(r138)
.B3:    ;; preds:B2  → Conditional { pos: Block(BlockID(30)), neg: Block(BlockID(4)) }.
         r144: unknown <UnknownUnsized> <- ArithK(Add, r14, 24)
  ( 10)  r145: unknown <UnknownUnsized> <- LoadMem { addr: r144, size: 8 }
         r147: unknown <UnknownUnsized> <- Part { src: r26, offset: 0, size: 4 }
         r148: unknown <UnknownUnsized> <- Part { src: r26, offset: 0, size: 4 }
         r149: unknown <UnknownUnsized> <- Arith(BitXor, r147, r148)
         r150: unknown <UnknownUnsized> <- Part { src: r26, offset: 4, size: 4 }
  ( 10)  r151: unknown <UnknownUnsized> <- Concat { lo: r149, hi: r150 }
         r159: unknown <UnknownUnsized> <- ArithK(Add, r11, -64)
         r160: unknown <UnknownUnsized> <- StoreMem { addr: r159, value: r17 }
         r163: unknown <UnknownUnsized> <- LoadMem { addr: r145, size: 1 }
         r169: unknown <UnknownUnsized> <- IsZero(r163)
         r172: unknown <UnknownUnsized> <- SetJumpCondition(r169)
         r1476: unknown <UnknownUnsized> <- Upsilon { value: r50, phi_ref: r1461 }
         r1477: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1462 }
         r1478: unknown <UnknownUnsized> <- Upsilon { value: r14, phi_ref: r1445 }
.B4:    ;; preds:B3,B29  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(5)) }.
  (  7)  r1445: unknown <UnknownUnsized> <- Phi
         r175: unknown <UnknownUnsized> <- ArithK(Add, r1445, 16)
  (  6)  r176: unknown <UnknownUnsized> <- LoadMem { addr: r175, size: 8 }
         r179: unknown <UnknownUnsized> <- ArithK(Add, r11, -120)
         r180: unknown <UnknownUnsized> <- StoreMem { addr: r179, value: r176 }
         r183: unknown <UnknownUnsized> <- IsZero(r176)
         r188: unknown <UnknownUnsized> <- SetJumpCondition(r183)
         r1491: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1466 }
.B5:    ;; preds:B4  → Conditional { pos: Block(BlockID(14)), neg: Block(BlockID(6)) }.
         r191: unknown <UnknownUnsized> <- Part { src: r17, offset: 0, size: 4 }
         r192: unknown <UnknownUnsized> <- Part { src: r17, offset: 0, size: 4 }
         r193: unknown <UnknownUnsized> <- Arith(BitXor, r191, r192)
         r194: unknown <UnknownUnsized> <- Part { src: r17, offset: 4, size: 4 }
  (  7)  r195: unknown <UnknownUnsized> <- Concat { lo: r193, hi: r194 }
         r202: unknown <UnknownUnsized> <- Part { src: r176, offset: 0, size: 4 }
  (  2)  r204: unknown <UnknownUnsized> <- ArithK(BitAnd, r202, 3)
         r205: unknown <UnknownUnsized> <- Part { src: r176, offset: 4, size: 4 }
  (  2)  r206: unknown <UnknownUnsized> <- Concat { lo: r204, hi: r205 }
         r210: unknown <UnknownUnsized> <- IsZero(r204)
         r213: unknown <UnknownUnsized> <- SetJumpCondition(r210)
         r1492: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1451 }
         r1493: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1452 }
.B6:    ;; preds:B5  → Conditional { pos: Block(BlockID(12)), neg: Block(BlockID(7)) }.
         r216: unknown <UnknownUnsized> <- ArithK(Add, r206, -1)
         r220: unknown <UnknownUnsized> <- IsZero(r216)
         r223: unknown <UnknownUnsized> <- SetJumpCondition(r220)
         r1514: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1449 }
         r1515: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1450 }
.B7:    ;; preds:B6  → Conditional { pos: Block(BlockID(10)), neg: Block(BlockID(8)) }.
         r226: unknown <UnknownUnsized> <- ArithK(Add, r206, -3)
         r230: unknown <UnknownUnsized> <- IsZero(r226)
         r233: unknown <UnknownUnsized> <- SetJumpCondition(r230)
         r1523: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1447 }
         r1524: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1448 }
.B8:    ;; preds:B7  → Conditional { pos: Block(BlockID(51)), neg: Block(BlockID(9)) }.
         r236: unknown <UnknownUnsized> <- ArithK(Add, r145, 8)
  (  3)  r237: unknown <UnknownUnsized> <- LoadMem { addr: r236, size: 8 }
         r240: unknown <UnknownUnsized> <- ArithK(Add, r11, -88)
         r241: unknown <UnknownUnsized> <- StoreMem { addr: r240, value: r1444 }
         r244: unknown <UnknownUnsized> <- ArithK(Add, r11, -96)
         r245: unknown <UnknownUnsized> <- StoreMem { addr: r244, value: r145 }
         r248: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r249: unknown <UnknownUnsized> <- StoreMem { addr: r248, value: r237 }
         r250: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r253: unknown <UnknownUnsized> <- CArg { value: r237, next_arg: None }
         r254: unknown <UnknownUnsized> <- Call { callee: r250, first_arg: Some(r253) }
         r274: unknown <UnknownUnsized> <- Arith(Sub, r254, r116)
         r278: unknown <UnknownUnsized> <- IsZero(r274)
         r281: unknown <UnknownUnsized> <- SetJumpCondition(r278)
         r1531: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1446 }
.B51:    ;; preds:B8  → Conditional { pos: Block(BlockID(9)), neg: Block(BlockID(52)) }.
         r1371: unknown <UnknownUnsized> <- ArithK(Add, r11, -96)
         r1372: unknown <UnknownUnsized> <- StoreMem { addr: r1371, value: r1444 }
         r1374: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r1375: unknown <UnknownUnsized> <- StoreMem { addr: r1374, value: r145 }
         r1376: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1383: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1384: unknown <UnknownUnsized> <- CArg { value: r237, next_arg: Some(r1383) }
         r1385: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r1384) }
  (  2)  r1386: unknown <UnknownUnsized> <- Call { callee: r1376, first_arg: Some(r1385) }
         r1402: unknown <UnknownUnsized> <- Part { src: r1386, offset: 0, size: 4 }
         r1403: unknown <UnknownUnsized> <- Part { src: r1386, offset: 0, size: 4 }
         r1404: unknown <UnknownUnsized> <- Arith(BitAnd, r1402, r1403)
         r1406: unknown <UnknownUnsized> <- IsZero(r1404)
         r1411: unknown <UnknownUnsized> <- Not(r1406)
         r1412: unknown <UnknownUnsized> <- SetJumpCondition(r1411)
         r1532: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1446 }
.B52:    ;; preds:B51  → Always(Block(BlockID(24))).
         r1533: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1534: unknown <UnknownUnsized> <- Upsilon { value: r145, phi_ref: r1457 }
         r1535: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1536: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B9:    ;; preds:B8,B51  → Always(Block(BlockID(10))).
         r1446: unknown <UnknownUnsized> <- Phi
         r287: unknown <UnknownUnsized> <- ArithK(Add, r1446, 40)
         r1537: unknown <UnknownUnsized> <- Upsilon { value: r1444, phi_ref: r1447 }
         r1538: unknown <UnknownUnsized> <- Upsilon { value: r287, phi_ref: r1448 }
.B10:    ;; preds:B7,B9  → Conditional { pos: Block(BlockID(49)), neg: Block(BlockID(11)) }.
  (  3)  r1448: unknown <UnknownUnsized> <- Phi
  (  3)  r1447: unknown <UnknownUnsized> <- Phi
         r290: unknown <UnknownUnsized> <- ArithK(Add, r1448, 8)
  (  3)  r291: unknown <UnknownUnsized> <- LoadMem { addr: r290, size: 8 }
         r294: unknown <UnknownUnsized> <- ArithK(Add, r11, -96)
         r295: unknown <UnknownUnsized> <- StoreMem { addr: r294, value: r1447 }
         r299: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r300: unknown <UnknownUnsized> <- StoreMem { addr: r299, value: r291 }
         r301: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r304: unknown <UnknownUnsized> <- CArg { value: r291, next_arg: None }
         r305: unknown <UnknownUnsized> <- Call { callee: r301, first_arg: Some(r304) }
         r324: unknown <UnknownUnsized> <- Arith(Sub, r305, r116)
         r328: unknown <UnknownUnsized> <- IsZero(r324)
         r331: unknown <UnknownUnsized> <- SetJumpCondition(r328)
.B49:    ;; preds:B10  → Conditional { pos: Block(BlockID(11)), neg: Block(BlockID(50)) }.
         r1325: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r1326: unknown <UnknownUnsized> <- StoreMem { addr: r1325, value: r1447 }
         r1327: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1334: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1335: unknown <UnknownUnsized> <- CArg { value: r291, next_arg: Some(r1334) }
         r1336: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r1335) }
  (  2)  r1337: unknown <UnknownUnsized> <- Call { callee: r1327, first_arg: Some(r1336) }
         r1352: unknown <UnknownUnsized> <- Part { src: r1337, offset: 0, size: 4 }
         r1353: unknown <UnknownUnsized> <- Part { src: r1337, offset: 0, size: 4 }
         r1354: unknown <UnknownUnsized> <- Arith(BitAnd, r1352, r1353)
         r1356: unknown <UnknownUnsized> <- IsZero(r1354)
         r1361: unknown <UnknownUnsized> <- Not(r1356)
         r1362: unknown <UnknownUnsized> <- SetJumpCondition(r1361)
.B50:    ;; preds:B49  → Always(Block(BlockID(24))).
         r1525: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1526: unknown <UnknownUnsized> <- Upsilon { value: r1448, phi_ref: r1457 }
         r1527: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1528: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B11:    ;; preds:B10,B49  → Always(Block(BlockID(12))).
         r343: unknown <UnknownUnsized> <- ArithK(Add, r1448, 40)
         r1529: unknown <UnknownUnsized> <- Upsilon { value: r1447, phi_ref: r1449 }
         r1530: unknown <UnknownUnsized> <- Upsilon { value: r343, phi_ref: r1450 }
.B12:    ;; preds:B6,B11  → Conditional { pos: Block(BlockID(47)), neg: Block(BlockID(13)) }.
  (  3)  r1450: unknown <UnknownUnsized> <- Phi
  (  3)  r1449: unknown <UnknownUnsized> <- Phi
         r352: unknown <UnknownUnsized> <- ArithK(Add, r1450, 8)
  (  3)  r353: unknown <UnknownUnsized> <- LoadMem { addr: r352, size: 8 }
         r356: unknown <UnknownUnsized> <- ArithK(Add, r11, -96)
         r357: unknown <UnknownUnsized> <- StoreMem { addr: r356, value: r1449 }
         r361: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r362: unknown <UnknownUnsized> <- StoreMem { addr: r361, value: r353 }
         r363: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r366: unknown <UnknownUnsized> <- CArg { value: r353, next_arg: None }
         r367: unknown <UnknownUnsized> <- Call { callee: r363, first_arg: Some(r366) }
  (  2)  r386: unknown <UnknownUnsized> <- Arith(Sub, r367, r116)
         r390: unknown <UnknownUnsized> <- IsZero(r386)
         r393: unknown <UnknownUnsized> <- SetJumpCondition(r390)
.B47:    ;; preds:B12  → Conditional { pos: Block(BlockID(13)), neg: Block(BlockID(48)) }.
         r1279: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r1280: unknown <UnknownUnsized> <- StoreMem { addr: r1279, value: r1449 }
         r1281: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1288: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1289: unknown <UnknownUnsized> <- CArg { value: r353, next_arg: Some(r1288) }
         r1290: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r1289) }
  (  2)  r1291: unknown <UnknownUnsized> <- Call { callee: r1281, first_arg: Some(r1290) }
         r1306: unknown <UnknownUnsized> <- Part { src: r1291, offset: 0, size: 4 }
         r1307: unknown <UnknownUnsized> <- Part { src: r1291, offset: 0, size: 4 }
         r1308: unknown <UnknownUnsized> <- Arith(BitAnd, r1306, r1307)
         r1310: unknown <UnknownUnsized> <- IsZero(r1308)
         r1315: unknown <UnknownUnsized> <- Not(r1310)
         r1316: unknown <UnknownUnsized> <- SetJumpCondition(r1315)
.B48:    ;; preds:B47  → Always(Block(BlockID(24))).
         r1516: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1517: unknown <UnknownUnsized> <- Upsilon { value: r1450, phi_ref: r1457 }
         r1518: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1519: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B13:    ;; preds:B12,B47  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(14)) }.
         r400: unknown <UnknownUnsized> <- ArithK(Add, r195, 1)
         r409: unknown <UnknownUnsized> <- ArithK(Add, r1450, 40)
         r417: unknown <UnknownUnsized> <- Arith(Sub, r400, r176)
         r421: unknown <UnknownUnsized> <- IsZero(r417)
         r424: unknown <UnknownUnsized> <- SetJumpCondition(r421)
         r1520: unknown <UnknownUnsized> <- Upsilon { value: r386, phi_ref: r1466 }
         r1521: unknown <UnknownUnsized> <- Upsilon { value: r1449, phi_ref: r1451 }
         r1522: unknown <UnknownUnsized> <- Upsilon { value: r409, phi_ref: r1452 }
.B14:    ;; preds:B5,B13  → Always(Block(BlockID(19))).
         r1452: unknown <UnknownUnsized> <- Phi
         r1451: unknown <UnknownUnsized> <- Phi
         r427: unknown <UnknownUnsized> <- ArithK(Add, r11, -80)
         r428: unknown <UnknownUnsized> <- StoreMem { addr: r427, value: r1445 }
         r431: unknown <UnknownUnsized> <- ArithK(Add, r11, -96)
         r432: unknown <UnknownUnsized> <- StoreMem { addr: r431, value: r151 }
         r434: unknown <UnknownUnsized> <- ArithK(Add, r11, -88)
         r435: unknown <UnknownUnsized> <- StoreMem { addr: r434, value: r1451 }
         r1497: unknown <UnknownUnsized> <- Upsilon { value: r1452, phi_ref: r1453 }
.B19:    ;; preds:B14,B18  → Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(20)) }.
  (  9)  r1453: unknown <UnknownUnsized> <- Phi
         r588: unknown <UnknownUnsized> <- ArithK(Add, r1453, 8)
  (  2)  r589: unknown <UnknownUnsized> <- LoadMem { addr: r588, size: 8 }
         r593: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r596: unknown <UnknownUnsized> <- CArg { value: r589, next_arg: None }
         r597: unknown <UnknownUnsized> <- Call { callee: r593, first_arg: Some(r596) }
         r608: unknown <UnknownUnsized> <- Arith(Sub, r597, r116)
         r612: unknown <UnknownUnsized> <- IsZero(r608)
         r615: unknown <UnknownUnsized> <- Not(r612)
         r616: unknown <UnknownUnsized> <- SetJumpCondition(r615)
.B20:    ;; preds:B19  → Conditional { pos: Block(BlockID(15)), neg: Block(BlockID(21)) }.
         r624: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r631: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r632: unknown <UnknownUnsized> <- CArg { value: r589, next_arg: Some(r631) }
         r633: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r632) }
  (  2)  r634: unknown <UnknownUnsized> <- Call { callee: r624, first_arg: Some(r633) }
         r645: unknown <UnknownUnsized> <- Part { src: r634, offset: 0, size: 4 }
         r646: unknown <UnknownUnsized> <- Part { src: r634, offset: 0, size: 4 }
         r647: unknown <UnknownUnsized> <- Arith(BitAnd, r645, r646)
         r649: unknown <UnknownUnsized> <- IsZero(r647)
         r654: unknown <UnknownUnsized> <- Not(r649)
         r655: unknown <UnknownUnsized> <- SetJumpCondition(r654)
.B21:    ;; preds:B20  → Always(Block(BlockID(24))).
         r1498: unknown <UnknownUnsized> <- Upsilon { value: r195, phi_ref: r1456 }
         r1499: unknown <UnknownUnsized> <- Upsilon { value: r1453, phi_ref: r1457 }
         r1500: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1501: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B15:    ;; preds:B19,B20  → Conditional { pos: Block(BlockID(22)), neg: Block(BlockID(16)) }.
         r438: unknown <UnknownUnsized> <- ArithK(Add, r1453, 48)
  (  3)  r439: unknown <UnknownUnsized> <- LoadMem { addr: r438, size: 8 }
         r442: unknown <UnknownUnsized> <- ArithK(Add, r1453, 40)
         r445: unknown <UnknownUnsized> <- ArithK(Add, r195, 1)
         r452: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r453: unknown <UnknownUnsized> <- StoreMem { addr: r452, value: r439 }
         r454: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r457: unknown <UnknownUnsized> <- CArg { value: r439, next_arg: None }
         r458: unknown <UnknownUnsized> <- Call { callee: r454, first_arg: Some(r457) }
         r473: unknown <UnknownUnsized> <- Arith(Sub, r458, r116)
         r477: unknown <UnknownUnsized> <- IsZero(r473)
         r480: unknown <UnknownUnsized> <- SetJumpCondition(r477)
.B22:    ;; preds:B15  → Conditional { pos: Block(BlockID(16)), neg: Block(BlockID(23)) }.
         r676: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r683: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r684: unknown <UnknownUnsized> <- CArg { value: r439, next_arg: Some(r683) }
         r685: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r684) }
  (  2)  r686: unknown <UnknownUnsized> <- Call { callee: r676, first_arg: Some(r685) }
         r697: unknown <UnknownUnsized> <- Part { src: r686, offset: 0, size: 4 }
         r698: unknown <UnknownUnsized> <- Part { src: r686, offset: 0, size: 4 }
         r699: unknown <UnknownUnsized> <- Arith(BitAnd, r697, r698)
         r701: unknown <UnknownUnsized> <- IsZero(r699)
         r706: unknown <UnknownUnsized> <- Not(r701)
         r707: unknown <UnknownUnsized> <- SetJumpCondition(r706)
         r1507: unknown <UnknownUnsized> <- Upsilon { value: r442, phi_ref: r1455 }
.B16:    ;; preds:B15,B22  → Conditional { pos: Block(BlockID(38)), neg: Block(BlockID(17)) }.
         r483: unknown <UnknownUnsized> <- ArithK(Add, r1453, 88)
  (  3)  r484: unknown <UnknownUnsized> <- LoadMem { addr: r483, size: 8 }
         r487: unknown <UnknownUnsized> <- ArithK(Add, r1453, 80)
         r495: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r496: unknown <UnknownUnsized> <- StoreMem { addr: r495, value: r484 }
         r497: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r500: unknown <UnknownUnsized> <- CArg { value: r484, next_arg: None }
         r501: unknown <UnknownUnsized> <- Call { callee: r497, first_arg: Some(r500) }
         r516: unknown <UnknownUnsized> <- Arith(Sub, r501, r116)
         r520: unknown <UnknownUnsized> <- IsZero(r516)
         r523: unknown <UnknownUnsized> <- SetJumpCondition(r520)
.B38:    ;; preds:B16  → Conditional { pos: Block(BlockID(17)), neg: Block(BlockID(39)) }.
         r1093: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1100: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1101: unknown <UnknownUnsized> <- CArg { value: r484, next_arg: Some(r1100) }
         r1102: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r1101) }
  (  2)  r1103: unknown <UnknownUnsized> <- Call { callee: r1093, first_arg: Some(r1102) }
         r1114: unknown <UnknownUnsized> <- Part { src: r1103, offset: 0, size: 4 }
         r1115: unknown <UnknownUnsized> <- Part { src: r1103, offset: 0, size: 4 }
         r1116: unknown <UnknownUnsized> <- Arith(BitAnd, r1114, r1115)
         r1118: unknown <UnknownUnsized> <- IsZero(r1116)
         r1123: unknown <UnknownUnsized> <- Not(r1118)
         r1124: unknown <UnknownUnsized> <- SetJumpCondition(r1123)
.B39:    ;; preds:B38  → Always(Block(BlockID(23))).
         r1509: unknown <UnknownUnsized> <- Upsilon { value: r487, phi_ref: r1455 }
.B17:    ;; preds:B16,B38  → Conditional { pos: Block(BlockID(40)), neg: Block(BlockID(18)) }.
         r526: unknown <UnknownUnsized> <- ArithK(Add, r1453, 128)
  (  3)  r527: unknown <UnknownUnsized> <- LoadMem { addr: r526, size: 8 }
         r530: unknown <UnknownUnsized> <- ArithK(Add, r1453, 120)
         r538: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r539: unknown <UnknownUnsized> <- StoreMem { addr: r538, value: r527 }
         r540: strlen <Regular(4247299)> <- Const { value: 4199136, size: 8 }
         r543: unknown <UnknownUnsized> <- CArg { value: r527, next_arg: None }
         r544: unknown <UnknownUnsized> <- Call { callee: r540, first_arg: Some(r543) }
  (  2)  r559: unknown <UnknownUnsized> <- Arith(Sub, r544, r116)
         r563: unknown <UnknownUnsized> <- IsZero(r559)
         r566: unknown <UnknownUnsized> <- SetJumpCondition(r563)
.B40:    ;; preds:B17  → Conditional { pos: Block(BlockID(18)), neg: Block(BlockID(41)) }.
         r1132: strncmp <Regular(4247267)> <- Const { value: 4199232, size: 8 }
         r1139: unknown <UnknownUnsized> <- CArg { value: r116, next_arg: None }
         r1140: unknown <UnknownUnsized> <- CArg { value: r527, next_arg: Some(r1139) }
         r1141: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r1140) }
  (  2)  r1142: unknown <UnknownUnsized> <- Call { callee: r1132, first_arg: Some(r1141) }
         r1153: unknown <UnknownUnsized> <- Part { src: r1142, offset: 0, size: 4 }
         r1154: unknown <UnknownUnsized> <- Part { src: r1142, offset: 0, size: 4 }
         r1155: unknown <UnknownUnsized> <- Arith(BitAnd, r1153, r1154)
         r1157: unknown <UnknownUnsized> <- IsZero(r1155)
         r1162: unknown <UnknownUnsized> <- Not(r1157)
         r1163: unknown <UnknownUnsized> <- SetJumpCondition(r1162)
.B41:    ;; preds:B40  → Always(Block(BlockID(23))).
         r1511: unknown <UnknownUnsized> <- Upsilon { value: r530, phi_ref: r1455 }
.B23:    ;; preds:B22,B39,B41  → Always(Block(BlockID(24))).
         r1455: unknown <UnknownUnsized> <- Phi
         r1502: unknown <UnknownUnsized> <- Upsilon { value: r445, phi_ref: r1456 }
         r1503: unknown <UnknownUnsized> <- Upsilon { value: r1455, phi_ref: r1457 }
         r1504: unknown <UnknownUnsized> <- Upsilon { value: r1445, phi_ref: r1458 }
         r1505: unknown <UnknownUnsized> <- Upsilon { value: r151, phi_ref: r1459 }
.B24:    ;; preds:B21,B23,B48,B50,B52  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(25)) }.
         r1459: unknown <UnknownUnsized> <- Phi
         r1458: unknown <UnknownUnsized> <- Phi
         r1457: unknown <UnknownUnsized> <- Phi
         r1456: unknown <UnknownUnsized> <- Phi
         r729: unknown <UnknownUnsized> <- ArithK(Mul, r1459, 8)
         r730: unknown <UnknownUnsized> <- Arith(Add, r19, r729)
         r731: unknown <UnknownUnsized> <- StoreMem { addr: r730, value: r1456 }
         r732: unknown <UnknownUnsized> <- Arith(Sub, r1457, r1458)
         r736: unknown <UnknownUnsized> <- IsZero(r732)
         r739: unknown <UnknownUnsized> <- SetJumpCondition(r736)
         r1494: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1466 }
.B25:    ;; preds:B24  → Conditional { pos: Block(BlockID(34)), neg: Block(BlockID(26)) }.
         r742: unknown <UnknownUnsized> <- ArithK(Add, r24, 32)
         r743: unknown <UnknownUnsized> <- LoadMem { addr: r742, size: 8 }
         r749: unknown <UnknownUnsized> <- IsZero(r743)
         r752: unknown <UnknownUnsized> <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
         r753: unknown <UnknownUnsized> <- Not(r749)
         r754: unknown <UnknownUnsized> <- SetJumpCondition(r753)
         r1495: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1463 }
         r1496: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1460 }
.B26:    ;; preds:B25,B33  → Conditional { pos: Block(BlockID(54)), neg: Block(BlockID(27)) }.
  (  2)  r1460: unknown <UnknownUnsized> <- Phi
         r756: unknown <UnknownUnsized> <- Part { src: r1460, offset: 0, size: 1 }
         r757: unknown <UnknownUnsized> <- Part { src: r1460, offset: 0, size: 1 }
         r758: unknown <UnknownUnsized> <- Arith(BitAnd, r756, r757)
         r760: unknown <UnknownUnsized> <- IsZero(r758)
         r765: unknown <UnknownUnsized> <- SetJumpCondition(r760)
.B27:    ;; preds:B26  → Conditional { pos: Block(BlockID(43)), neg: Block(BlockID(28)) }.
  (  2)  r768: unknown <UnknownUnsized> <- ArithK(Add, r1444, 1)
  (  2)  r770: unknown <UnknownUnsized> <- Const { value: 46, size: 4 }
         r771: unknown <UnknownUnsized> <- Part { src: r14, offset: 4, size: 4 }
         r772: unknown <UnknownUnsized> <- Concat { lo: r770, hi: r771 }
         r774: unknown <UnknownUnsized> <- ArithK(Add, r11, -136)
         r775: unknown <UnknownUnsized> <- StoreMem { addr: r774, value: r768 }
         r776: strchr <Regular(4247322)> <- Const { value: 4199040, size: 8 }
         r782: unknown <UnknownUnsized> <- CArg { value: r770, next_arg: None }
         r783: unknown <UnknownUnsized> <- CArg { value: r768, next_arg: Some(r782) }
  (  2)  r784: unknown <UnknownUnsized> <- Call { callee: r776, first_arg: Some(r783) }
         r798: unknown <UnknownUnsized> <- IsZero(r784)
         r803: unknown <UnknownUnsized> <- SetJumpCondition(r798)
.B28:    ;; preds:B27  → Conditional { pos: Block(BlockID(44)), neg: Block(BlockID(29)) }.
         r815: unknown <UnknownUnsized> <- ArithK(Add, r151, 1)
         r833: unknown <UnknownUnsized> <- LoadMem { addr: r20, size: 8 }
         r834: unknown <UnknownUnsized> <- Arith(Sub, r815, r833)
         r836: unknown <UnknownUnsized> <- CarryOf(r834)
         r841: unknown <UnknownUnsized> <- Not(r836)
         r842: unknown <UnknownUnsized> <- SetJumpCondition(r841)
.B43:    ;; preds:B27  → Conditional { pos: Block(BlockID(29)), neg: Block(BlockID(44)) }.
         r1203: unknown <UnknownUnsized> <- ArithK(Add, r151, 1)
         r1212: __builtin_strlen <Regular(4551370)> <- Const { value: 4199136, size: 8 }
         r1213: unknown <UnknownUnsized> <- Call { callee: r1212, first_arg: None }
         r1235: unknown <UnknownUnsized> <- LoadMem { addr: r20, size: 8 }
         r1236: unknown <UnknownUnsized> <- Arith(Sub, r1203, r1235)
         r1238: unknown <UnknownUnsized> <- CarryOf(r1236)
         r1243: unknown <UnknownUnsized> <- SetJumpCondition(r1238)
.B44:    ;; preds:B28,B43  → Always(Block(BlockID(45))).
         r1487: unknown <UnknownUnsized> <- Upsilon { value: r17, phi_ref: r1467 }
.B29:    ;; preds:B28,B43  → Conditional { pos: Block(BlockID(4)), neg: Block(BlockID(30)) }.
         r846: unknown <UnknownUnsized> <- ArithK(Add, r24, 24)
         r847: unknown <UnknownUnsized> <- LoadMem { addr: r846, size: 8 }
         r851: unknown <UnknownUnsized> <- LoadMem { addr: r847, size: 1 }
         r857: unknown <UnknownUnsized> <- IsZero(r851)
         r860: unknown <UnknownUnsized> <- Not(r857)
         r861: unknown <UnknownUnsized> <- SetJumpCondition(r860)
         r1488: unknown <UnknownUnsized> <- Upsilon { value: r24, phi_ref: r1445 }
         r1489: unknown <UnknownUnsized> <- Upsilon { value: r772, phi_ref: r1461 }
         r1490: unknown <UnknownUnsized> <- Upsilon { value: r784, phi_ref: r1462 }
.B54:    ;; preds:B26  → Always(Block(BlockID(35))).
         r1486: unknown <UnknownUnsized> <- Upsilon { value: r17, phi_ref: r1464 }
.B18:    ;; preds:B17,B40  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(19)) }.
         r573: unknown <UnknownUnsized> <- ArithK(Add, r195, 4)
         r576: unknown <UnknownUnsized> <- ArithK(Add, r1453, 160)
         r578: unknown <UnknownUnsized> <- Arith(Sub, r573, r176)
         r582: unknown <UnknownUnsized> <- IsZero(r578)
         r585: unknown <UnknownUnsized> <- SetJumpCondition(r582)
         r1512: unknown <UnknownUnsized> <- Upsilon { value: r559, phi_ref: r1466 }
         r1513: unknown <UnknownUnsized> <- Upsilon { value: r576, phi_ref: r1453 }
.B30:    ;; preds:B3,B29  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(31)) }.
  (  2)  r1462: unknown <UnknownUnsized> <- Phi
  (  3)  r1461: unknown <UnknownUnsized> <- Phi
         r867: unknown <UnknownUnsized> <- Part { src: r1461, offset: 0, size: 4 }
         r868: unknown <UnknownUnsized> <- Part { src: r1461, offset: 0, size: 4 }
         r869: unknown <UnknownUnsized> <- Arith(BitXor, r867, r868)
         r870: unknown <UnknownUnsized> <- Part { src: r1461, offset: 4, size: 4 }
         r871: unknown <UnknownUnsized> <- Concat { lo: r869, hi: r870 }
         r878: unknown <UnknownUnsized> <- Const { value: 10, size: 4 }
         r882: unknown <UnknownUnsized> <- ArithK(Add, r11, -128)
         r883: unknown <UnknownUnsized> <- StoreMem { addr: r882, value: r1462 }
         r884: je_malloc_strtoumax <Regular(4247235)> <- Const { value: 6451424, size: 8 }
         r892: unknown <UnknownUnsized> <- CArg { value: r878, next_arg: None }
         r893: unknown <UnknownUnsized> <- CArg { value: r871, next_arg: Some(r892) }
         r894: unknown <UnknownUnsized> <- CArg { value: r18, next_arg: Some(r893) }
  (  2)  r895: unknown <UnknownUnsized> <- Call { callee: r884, first_arg: Some(r894) }
  (  6)  r911: unknown <UnknownUnsized> <- ArithK(Add, r895, 1)
         r915: unknown <UnknownUnsized> <- IsZero(r911)
         r919: unknown <UnknownUnsized> <- SetJumpCondition(r915)
         r1482: unknown <UnknownUnsized> <- Upsilon { value: r911, phi_ref: r1466 }
.B31:    ;; preds:B30  → Conditional { pos: Ext(4206915), neg: Block(BlockID(32)) }.
         r922: unknown <UnknownUnsized> <- ArithK(Add, r14, 24)
  (  2)  r923: unknown <UnknownUnsized> <- LoadMem { addr: r922, size: 8 }
         r926: unknown <UnknownUnsized> <- ArithK(Add, r11, -136)
         r927: unknown <UnknownUnsized> <- StoreMem { addr: r926, value: r1462 }
         r930: unknown <UnknownUnsized> <- LoadMem { addr: r923, size: 1 }
         r936: unknown <UnknownUnsized> <- IsZero(r930)
         r939: unknown <UnknownUnsized> <- Not(r936)
         r940: unknown <UnknownUnsized> <- SetJumpCondition(r939)
.B32:    ;; preds:B31  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(33)) }.
         r956: unknown <UnknownUnsized> <- LoadMem { addr: r20, size: 8 }
         r961: unknown <UnknownUnsized> <- ArithK(Add, r923, 8)
         r962: unknown <UnknownUnsized> <- LoadMem { addr: r961, size: 8 }
         r963: unknown <UnknownUnsized> <- LoadMem { addr: r962, size: 8 }
         r964: unknown <UnknownUnsized> <- CArg { value: r911, next_arg: None }
         r965: unknown <UnknownUnsized> <- CArg { value: r956, next_arg: Some(r964) }
         r966: unknown <UnknownUnsized> <- CArg { value: r19, next_arg: Some(r965) }
         r967: unknown <UnknownUnsized> <- CArg { value: r13, next_arg: Some(r966) }
         r968: unknown <UnknownUnsized> <- Call { callee: r963, first_arg: Some(r967) }
         r982: unknown <UnknownUnsized> <- IsZero(r911)
         r987: unknown <UnknownUnsized> <- SetJumpCondition(r982)
         r1483: unknown <UnknownUnsized> <- Upsilon { value: r911, phi_ref: r1466 }
.B33:    ;; preds:B32  → Conditional { pos: Block(BlockID(26)), neg: Block(BlockID(34)) }.
         r994: unknown <UnknownUnsized> <- ArithK(Add, r895, 33)
         r995: unknown <UnknownUnsized> <- LoadMem { addr: r994, size: 8 }
         r1001: unknown <UnknownUnsized> <- IsZero(r995)
         r1006: unknown <UnknownUnsized> <- ArithK(Mul, r151, 8)
         r1007: unknown <UnknownUnsized> <- Arith(Add, r19, r1006)
         r1008: unknown <UnknownUnsized> <- StoreMem { addr: r1007, value: r911 }
         r1009: unknown <UnknownUnsized> <- NotYetImplemented("unsupported: movzx edi,byte ptr [r8]")
         r1010: unknown <UnknownUnsized> <- SetJumpCondition(r1001)
         r1484: unknown <UnknownUnsized> <- Upsilon { value: r13, phi_ref: r1460 }
         r1485: unknown <UnknownUnsized> <- Upsilon { value: r13, phi_ref: r1463 }
.B34:    ;; preds:B25,B33  → Conditional { pos: Block(BlockID(42)), neg: Block(BlockID(35)) }.
  (  2)  r1463: unknown <UnknownUnsized> <- Phi
         r1016: unknown <UnknownUnsized> <- Part { src: r1463, offset: 0, size: 1 }
         r1017: unknown <UnknownUnsized> <- Part { src: r1463, offset: 0, size: 1 }
         r1018: unknown <UnknownUnsized> <- Arith(BitAnd, r1016, r1017)
         r1020: unknown <UnknownUnsized> <- IsZero(r1018)
         r1025: unknown <UnknownUnsized> <- Not(r1020)
         r1026: unknown <UnknownUnsized> <- SetJumpCondition(r1025)
         r1480: unknown <UnknownUnsized> <- Upsilon { value: r18, phi_ref: r1466 }
         r1481: unknown <UnknownUnsized> <- Upsilon { value: r17, phi_ref: r1464 }
.B35:    ;; preds:B34,B54  → Conditional { pos: Block(BlockID(46)), neg: Block(BlockID(36)) }.
  (  2)  r1464: unknown <UnknownUnsized> <- Phi
         r1029: unknown <UnknownUnsized> <- ArithK(Add, r151, 1)
         r1037: unknown <UnknownUnsized> <- StoreMem { addr: r20, value: r1029 }
         r1040: unknown <UnknownUnsized> <- IsZero(r1464)
         r1045: unknown <UnknownUnsized> <- Not(r1040)
         r1046: unknown <UnknownUnsized> <- SetJumpCondition(r1045)
         r1479: unknown <UnknownUnsized> <- Upsilon { value: r1464, phi_ref: r1468 }
.B55:    ;; preds:B2  → Always(Block(BlockID(45))).
         r1472: unknown <UnknownUnsized> <- Upsilon { value: r17, phi_ref: r1467 }
.B45:    ;; preds:B44,B55  → Conditional { pos: Block(BlockID(36)), neg: Block(BlockID(46)) }.
  (  2)  r1467: unknown <UnknownUnsized> <- Phi
         r1251: unknown <UnknownUnsized> <- IsZero(r1467)
         r1256: unknown <UnknownUnsized> <- SetJumpCondition(r1251)
         r1474: unknown <UnknownUnsized> <- Upsilon { value: r1467, phi_ref: r1468 }
.B46:    ;; preds:B35,B45  → Always(Block(BlockID(37))).
         r1468: unknown <UnknownUnsized> <- Phi
         r1260: unknown <UnknownUnsized> <- StoreMem { addr: r1468, value: r24 }
         r1261: unknown <UnknownUnsized> <- Part { src: r18, offset: 0, size: 4 }
         r1262: unknown <UnknownUnsized> <- Part { src: r18, offset: 0, size: 4 }
         r1263: unknown <UnknownUnsized> <- Arith(BitXor, r1261, r1262)
         r1264: unknown <UnknownUnsized> <- Part { src: r18, offset: 4, size: 4 }
         r1265: unknown <UnknownUnsized> <- Concat { lo: r1263, hi: r1264 }
         r1473: unknown <UnknownUnsized> <- Upsilon { value: r1265, phi_ref: r1465 }
.B36:    ;; preds:B35,B45  → Always(Block(BlockID(37))).
         r1048: unknown <UnknownUnsized> <- Part { src: r18, offset: 0, size: 4 }
         r1049: unknown <UnknownUnsized> <- Part { src: r18, offset: 0, size: 4 }
         r1050: unknown <UnknownUnsized> <- Arith(BitXor, r1048, r1049)
         r1051: unknown <UnknownUnsized> <- Part { src: r18, offset: 4, size: 4 }
         r1052: unknown <UnknownUnsized> <- Concat { lo: r1050, hi: r1051 }
         r1475: unknown <UnknownUnsized> <- Upsilon { value: r1052, phi_ref: r1465 }
.B37:    ;; preds:B36,B46  → Always(Return).
         r1465: unknown <UnknownUnsized> <- Phi
         r1086: unknown <UnknownUnsized> <- SetReturnValue(r1465)
.B42:    ;; preds:B1,B4,B13,B18,B24,B30,B32,B34  → Always(Return).
         r1466: unknown <UnknownUnsized> <- Phi
         r1175: unknown <UnknownUnsized> <- Const { value: 2, size: 4 }
         r1176: unknown <UnknownUnsized> <- Part { src: r1466, offset: 4, size: 4 }
         r1177: unknown <UnknownUnsized> <- Concat { lo: r1175, hi: r1176 }
         r1196: unknown <UnknownUnsized> <- SetReturnValue(r1177)


 --- ast

T0: {
  [pre:RSP - 8]:* := pre:R15;
  [pre:RSP - 16]:* := pre:R14;
  [pre:RSP - 24]:* := pre:R13;
  [pre:RSP - 32]:* := pre:R12;
  [pre:RSP - 40]:* := pre:RBP;
  [pre:RSP - 48]:* := pre:RBX;
  [pre:RSP - 72]:* := pre:RDI;
  [pre:RSP - 104]:* := pre:R8;
  [pre:RSP - 136]:* := pre:RDX;
  [pre:RSP - 112]:* := pre:R9;
  let r90: Bytes(8) = strchr(pre:RDX,
                             46);
  ;
  r1444 := strchr(pre:RDX,
                  46);
  if IsZero (r90) {
    __builtin_strlen();
    r1444 := pre:RDX + r90;
    goto T1
  }
  goto T1
  T1: {
    let mut r1444: Bytes(8);
    let r116: Bytes(8) = r1444 - pre:RDX;
    ;
    r1466 := pre:RDX;
    if IsZero (r116) {
      goto T42
    }
    ;
    if IsZero ([pre:R9]:8) {
      r1467 := pre:RCX;
      goto T45
    }
    let r145: Bytes(8) = [pre:RSI + 24]:8;
    let r151: Bytes(8) = pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
    [pre:RSP - 64]:* := pre:RCX;
    ;
    r1461 := pre:RSI[8 .. 4] ++ 46;
    r1462 := phi ();
    r1445 := pre:RSI;
    if IsZero ([r145]:1) {
      goto T30
    }
    goto T4
    T4: {
      let mut r1445: Bytes(8);
      let r176: Bytes(8) = [r1445 + 16]:8;
      [pre:RSP - 120]:* := r176;
      ;
      r1466 := pre:RDX;
      if IsZero (r176) {
        goto T42
      }
      let r195: Bytes(8) = pre:RCX[8 .. 4] ++ (pre:RCX[4 .. 0] ^ pre:RCX[4 .. 0]);
      let r204: Bytes(4) = r176[4 .. 0] & 3;
      let r206: Bytes(8) = r176[8 .. 4] ++ r204;
      ;
      r1451 := phi ();
      r1452 := [pre:RSI + 24]:8;
      if IsZero (r204) {
        goto T14
      }
      ;
      r1449 := phi ();
      r1450 := [pre:RSI + 24]:8;
      if IsZero (r206 - 1) {
        goto T12
      }
      ;
      r1447 := phi ();
      r1448 := [pre:RSI + 24]:8;
      if IsZero (r206 - 3) {
        goto T10
      }
      let r237: Bytes(8) = [r145 + 8]:8;
      [pre:RSP - 88]:* := r1444;
      [pre:RSP - 96]:* := r145;
      [pre:RSP - 128]:* := r237;
      strlen(r237);
      ;
      r1446 := [pre:RSI + 24]:8;
      if IsZero (strlen(r237) - r116) {
        [pre:RSP - 96]:* := r1444;
        [pre:RSP - 128]:* := r145;
        let r1386: Bytes(8) = strncmp(pre:RDX,
                                      r237,
                                      r116);
        ;
        r1446 := [pre:RSI + 24]:8;
        if ! IsZero (r1386[4 .. 0] & r1386[4 .. 0]) {
          goto T9
        }
        r1456 := pre:RCX[8 .. 4] ++ (pre:RCX[4 .. 0] ^ pre:RCX[4 .. 0]);
        r1457 := [pre:RSI + 24]:8;
        r1458 := phi ();
        r1459 := pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
        goto T24
      }
      goto T9
      T9: {
        let mut r1446: Bytes(8);
        r1447 := phi ();
        r1448 := r1446 + 40;
        goto T10
      }
      
      T10: {
        let mut r1448: Bytes(8);
        let mut r1447: Bytes(8);
        let r291: Bytes(8) = [r1448 + 8]:8;
        [pre:RSP - 96]:* := r1447;
        [pre:RSP - 128]:* := r291;
        strlen(r291);
        ;
        if IsZero (strlen(r291) - r116) {
          [pre:RSP - 128]:* := r1447;
          let r1337: Bytes(8) = strncmp(pre:RDX,
                                        r291,
                                        r116);
          ;
          if ! IsZero (r1337[4 .. 0] & r1337[4 .. 0]) {
            goto T11
          }
          r1456 := pre:RCX[8 .. 4] ++ (pre:RCX[4 .. 0] ^ pre:RCX[4 .. 0]);
          r1457 := phi ();
          r1458 := phi ();
          r1459 := pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
          goto T24
        }
        goto T11
        T11: {
          r1449 := phi ();
          r1450 := r1448 + 40;
          goto T12
        }
      
      }
      
      T12: {
        let mut r1450: Bytes(8);
        let mut r1449: Bytes(8);
        let r353: Bytes(8) = [r1450 + 8]:8;
        [pre:RSP - 96]:* := r1449;
        [pre:RSP - 128]:* := r353;
        strlen(r353);
        let r386: Bytes(8) = strlen(r353) - r116;
        ;
        if IsZero (r386) {
          [pre:RSP - 128]:* := r1449;
          let r1291: Bytes(8) = strncmp(pre:RDX,
                                        r353,
                                        r116);
          ;
          if ! IsZero (r1291[4 .. 0] & r1291[4 .. 0]) {
            goto T13
          }
          r1456 := pre:RCX[8 .. 4] ++ (pre:RCX[4 .. 0] ^ pre:RCX[4 .. 0]);
          r1457 := phi ();
          r1458 := phi ();
          r1459 := pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
          goto T24
        }
        goto T13
        T13: {
          ;
          r1466 := strlen(r353) - r116;
          r1451 := phi ();
          r1452 := r1450 + 40;
          if IsZero (r195 + 1 - r176) {
            goto T42
          }
          goto T14
        }
      
      }
      
      T14: {
        let mut r1452: Bytes(8);
        let mut r1451: Bytes(8);
        [pre:RSP - 80]:* := r1445;
        [pre:RSP - 96]:* := r151;
        [pre:RSP - 88]:* := r1451;
        r1453 := phi ();
        goto T19
        T19: {
          let mut r1453: Bytes(8);
          let r589: Bytes(8) = [r1453 + 8]:8;
          strlen(r589);
          ;
          if ! IsZero (strlen(r589) - r116) {
            goto T15
          }
          let r634: Bytes(8) = strncmp(pre:RDX,
                                       r589,
                                       r116);
          ;
          if ! IsZero (r634[4 .. 0] & r634[4 .. 0]) {
            goto T15
          }
          r1456 := pre:RCX[8 .. 4] ++ (pre:RCX[4 .. 0] ^ pre:RCX[4 .. 0]);
          r1457 := phi ();
          r1458 := phi ();
          r1459 := pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
          goto T24
          T15: {
            let r439: Bytes(8) = [r1453 + 48]:8;
            [pre:RSP - 128]:* := r439;
            strlen(r439);
            ;
            if IsZero (strlen(r439) - r116) {
              let r686: Bytes(8) = strncmp(pre:RDX,
                                           r439,
                                           r116);
              ;
              r1455 := r1453 + 40;
              if ! IsZero (r686[4 .. 0] & r686[4 .. 0]) {
                goto T16
              }
              goto T23
            }
            goto T16
            T16: {
              let r484: Bytes(8) = [r1453 + 88]:8;
              [pre:RSP - 128]:* := r484;
              strlen(r484);
              ;
              if IsZero (strlen(r484) - r116) {
                let r1103: Bytes(8) = strncmp(pre:RDX,
                                              r484,
                                              r116);
                ;
                if ! IsZero (r1103[4 .. 0] & r1103[4 .. 0]) {
                  goto T17
                }
                r1455 := r1453 + 80;
                goto T23
              }
              goto T17
              T17: {
                let r527: Bytes(8) = [r1453 + 128]:8;
                [pre:RSP - 128]:* := r527;
                strlen(r527);
                let r559: Bytes(8) = strlen(r527) - r116;
                ;
                if IsZero (r559) {
                  let r1142: Bytes(8) = strncmp(pre:RDX,
                                                r527,
                                                r116);
                  ;
                  if ! IsZero (r1142[4 .. 0] & r1142[4 .. 0]) {
                    goto T18
                  }
                  r1455 := r1453 + 120;
                  goto T23
                }
                goto T18
                T18: {
                  ;
                  r1466 := strlen(r527) - r116;
                  r1453 := r1453 + 160;
                  if IsZero (r195 + 4 - r176) {
                    goto T42
                  }
                  loop T19
                }
              
              }
            
            }
            
            T23: {
              let mut r1455: Bytes(8);
              r1456 := r195 + 1;
              r1457 := phi ();
              r1458 := phi ();
              r1459 := pre:R15[8 .. 4] ++ (pre:R15[4 .. 0] ^ pre:R15[4 .. 0]);
              goto T24
            }
          
          }
        
        }
      
      }
      
      T24: {
        let mut r1459: Bytes(8);
        let mut r1458: Bytes(8);
        let mut r1457: Bytes(8);
        let mut r1456: Bytes(8);
        [pre:R8 + r1459 * 8]:* := r1456;
        ;
        r1466 := pre:RDX;
        if IsZero (r1457 - r1458) {
          goto T42
        }
        TODO /* unsupported: movzx edi,byte ptr [r8] */;
        ;
        r1463 := pre:RDX;
        r1460 := pre:RDX;
        if ! IsZero ([pre:R13 + 32]:8) {
          goto T34
        }
        goto T26
      }
    
    }
    
    T26: {
      let mut r1460: Bytes(8);
      ;
      if IsZero (r1460[1 .. 0] & r1460[1 .. 0]) {
        r1464 := pre:RCX;
        goto T35
      }
      let r768: Bytes(8) = r1444 + 1;
      [pre:RSP - 136]:* := r768;
      let r784: Bytes(8) = strchr(r768,
                                  46);
      ;
      if IsZero (r784) {
        __builtin_strlen();
        ;
        if CarryOf (r151 + 1 - [pre:R9]:8) {
          goto T29
        }
        goto T44
      }
      ;
      if ! CarryOf (r151 + 1 - [pre:R9]:8) {
        goto T44
      }
      goto T29
      T29: {
        ;
        r1445 := pre:R13;
        r1461 := pre:RSI[8 .. 4] ++ 46;
        r1462 := strchr(r768,
                        46);
        if ! IsZero ([[pre:R13 + 24]:8]:1) {
          goto T4
        }
        goto T30
      }
      
      T44: {
        r1467 := pre:RCX;
        goto T45
      }
    
    }
    
    T30: {
      let mut r1462: Bytes(8);
      let mut r1461: Bytes(8);
      [pre:RSP - 128]:* := r1462;
      let r895: Bytes(8) = je_malloc_strtoumax(pre:RDX,
                                               r1461[8 .. 4] ++ (r1461[4 .. 0] ^ r1461[4 .. 0]),
                                               10);
      let r911: Bytes(8) = r895 + 1;
      ;
      r1466 := r895 + 1;
      if IsZero (r911) {
        goto T42
      }
      let r923: Bytes(8) = [pre:RSI + 24]:8;
      [pre:RSP - 136]:* := r1462;
      ;
      if ! IsZero ([r923]:1) {
        goto ext 0x403143
      }
      [[r923 + 8]:8]:8(pre:RDI,
                       pre:R8,
                       [pre:R9]:8,
                       r911);
      ;
      r1466 := r895 + 1;
      if IsZero (r911) {
        goto T42
      }
      [pre:R8 + r151 * 8]:* := r911;
      TODO /* unsupported: movzx edi,byte ptr [r8] */;
      ;
      r1460 := pre:RDI;
      r1463 := pre:RDI;
      if IsZero ([r895 + 33]:8) {
        goto T26
      }
      goto T34
    }
    
    T34: {
      let mut r1463: Bytes(8);
      ;
      r1466 := pre:RDX;
      r1464 := pre:RCX;
      if ! IsZero (r1463[1 .. 0] & r1463[1 .. 0]) {
        goto T42
      }
      goto T35
    }
    
    T35: {
      let mut r1464: Bytes(8);
      [pre:R9]:* := r151 + 1;
      ;
      r1468 := phi ();
      if ! IsZero (r1464) {
        goto T46
      }
      goto T36
    }
    
    T36: {
      r1465 := pre:RDX[8 .. 4] ++ (pre:RDX[4 .. 0] ^ pre:RDX[4 .. 0]);
      goto T37
    }
    
    T37: {
      let mut r1465: Bytes(8);
      ;
      return r1465
    }
    
    T45: {
      let mut r1467: Bytes(8);
      ;
      r1468 := phi ();
      if IsZero (r1467) {
        goto T36
      }
      goto T46
    }
    
    T46: {
      let mut r1468: Bytes(8);
      [r1468]:* := pre:R13;
      r1465 := pre:RDX[8 .. 4] ++ (pre:RDX[4 .. 0] ^ pre:RDX[4 .. 0]);
      goto T37
    }
    
    T42: {
      let mut r1466: Bytes(8);
      ;
      return r1466[8 .. 4] ++ 2
    }
  
  }

}
