---
source: tests/test_tool.rs
expression: out
---
func099 0x4012fb+1 (file 0x12fb)
          4012fb: c3                      ret

function type: "func099" func (arg0 *void <TypeID(1v1)>,
                               arg1 *void <TypeID(1v1)>,
                               arg2 *void <TypeID(1v1)>,
                               arg3 small <TypeID(784v1)>,
                               arg4 small_xmms <TypeID(791v1)>) small_xmms <TypeID(791v1)>
0 warnings.


mil program = 
program  91 instrs
                 0 r12 <- Ancestral(AncestralName("stack_bottom"))
                 1 r2 <- Ancestral(AncestralName("CF"))
                 2 r3 <- Ancestral(AncestralName("PF"))
                 3 r4 <- Ancestral(AncestralName("AF"))
                 4 r5 <- Ancestral(AncestralName("ZF"))
                 5 r6 <- Ancestral(AncestralName("SF"))
                 6 r7 <- Ancestral(AncestralName("TF"))
                 7 r8 <- Ancestral(AncestralName("IF"))
                 8 r9 <- Ancestral(AncestralName("DF"))
                 9 r10 <- Ancestral(AncestralName("OF"))
                10 r11 <- Ancestral(AncestralName("RBP"))
                11 r12 <- Ancestral(AncestralName("RSP"))
                12 r13 <- Ancestral(AncestralName("RIP"))
                13 r14 <- Ancestral(AncestralName("RDI"))
                14 r15 <- Ancestral(AncestralName("RSI"))
                15 r16 <- Ancestral(AncestralName("RAX"))
                16 r17 <- Ancestral(AncestralName("RBX"))
                17 r18 <- Ancestral(AncestralName("RCX"))
                18 r19 <- Ancestral(AncestralName("RDX"))
                19 r20 <- Ancestral(AncestralName("R8"))
                20 r21 <- Ancestral(AncestralName("R9"))
                21 r22 <- Ancestral(AncestralName("R10"))
                22 r23 <- Ancestral(AncestralName("R11"))
                23 r24 <- Ancestral(AncestralName("R12"))
                24 r25 <- Ancestral(AncestralName("R13"))
                25 r26 <- Ancestral(AncestralName("R14"))
                26 r27 <- Ancestral(AncestralName("R15"))
                27 r28 <- Ancestral(AncestralName("ZMM0"))
                28 r29 <- Ancestral(AncestralName("ZMM1"))
                29 r30 <- Ancestral(AncestralName("ZMM2"))
                30 r31 <- Ancestral(AncestralName("ZMM3"))
                31 r32 <- Ancestral(AncestralName("ZMM4"))
                32 r33 <- Ancestral(AncestralName("ZMM5"))
                33 r34 <- Ancestral(AncestralName("ZMM6"))
                34 r35 <- Ancestral(AncestralName("ZMM7"))
                35 r36 <- Ancestral(AncestralName("ZMM8"))
                36 r37 <- Ancestral(AncestralName("ZMM9"))
                37 r38 <- Ancestral(AncestralName("ZMM10"))
                38 r39 <- Ancestral(AncestralName("ZMM11"))
                39 r40 <- Ancestral(AncestralName("ZMM12"))
                40 r41 <- Ancestral(AncestralName("ZMM13"))
                41 r42 <- Ancestral(AncestralName("ZMM14"))
                42 r43 <- Ancestral(AncestralName("ZMM15"))
                43 r44 <- Ancestral(AncestralName("memory"))
                44 r45 <- Undefined
                45 r46 <- Undefined
                46 r47 <- Undefined
                47 r48 <- Undefined
                48 r49 <- Undefined
                49 r50 <- Undefined
                50 r51 <- Undefined
                51 r52 <- Undefined
                52 r53 <- Undefined
                53 r54 <- Undefined
                54 r55 <- Undefined
                55 r56 <- Undefined
                56 r57 <- Undefined
                57 r58 <- Undefined
                58 r59 <- Undefined
                59 r60 <- Undefined
                60 r61 <- Undefined
                61 r62 <- Undefined
                62 r63 <- Undefined
                63 r64 <- Undefined
                64 r65 <- Undefined
                65 r45 <- Ancestral(AncestralName("arg0"))
                66 r14 <- Get(r45)
                67 r46 <- Ancestral(AncestralName("arg1"))
                68 r15 <- Get(r46)
                69 r47 <- Ancestral(AncestralName("arg2"))
                70 r19 <- Get(r47)
                71 r48 <- Ancestral(AncestralName("arg3"))
                72 r49 <- Part { src: r48, offset: 0, size: 8 }
                73 r18 <- Get(r49)
                74 r50 <- Part { src: r48, offset: 8, size: 8 }
                75 r20 <- Get(r50)
                76 r51 <- Ancestral(AncestralName("arg4"))
                77 r52 <- Part { src: r51, offset: 0, size: 8 }
                78 r53 <- Part { src: r28, offset: 8, size: 56 }
                79 r28 <- Concat { lo: r52, hi: r53 }
                80 r54 <- Part { src: r51, offset: 8, size: 8 }
                81 r55 <- Part { src: r29, offset: 8, size: 56 }
                82 r29 <- Concat { lo: r54, hi: r55 }
0x4012fb:
                83 r45 <- Void
                84 r46 <- Part { src: r28, offset: 0, size: 8 }
                85 r45 <- Concat { lo: r45, hi: r46 }
                86 r46 <- Part { src: r29, offset: 0, size: 8 }
                87 r45 <- Concat { lo: r45, hi: r46 }
                88 r45 <- Part { src: r45, offset: 0, size: 16 }
                89 r47 <- SetReturnValue(r45)
                90 r47 <- Control(Ret)


ssa pre-xform:
ssa program  91 instrs
.B0:    ;;  → Always(Return).
         r28 <- Ancestral(AncestralName("ZMM1"))
         r81 <- Part { src: r28, offset: 8, size: 56 }
  (  2)  r76 <- Ancestral(AncestralName("arg4"))
         r80 <- Part { src: r76, offset: 8, size: 8 }
         r82 <- Concat { lo: r80, hi: r81 }
         r86 <- Part { src: r82, offset: 0, size: 8 }
         r27 <- Ancestral(AncestralName("ZMM0"))
         r78 <- Part { src: r27, offset: 8, size: 56 }
         r77 <- Part { src: r76, offset: 0, size: 8 }
         r79 <- Concat { lo: r77, hi: r78 }
         r84 <- Part { src: r79, offset: 0, size: 8 }
         r83 <- Void
         r85 <- Concat { lo: r83, hi: r84 }
         r87 <- Concat { lo: r85, hi: r86 }
         r88 <- Part { src: r87, offset: 0, size: 16 }
         r89 <- SetReturnValue(r88)


cfg:
  entry: BlockID(0)
  BlockID(0) [0:91] -> Always(Return)
  domtree:
    BlockID(0)

ssa post-xform:
ssa program  91 instrs
.B0:    ;;  → Always(Return).
  (  2)  r76 <- Ancestral(AncestralName("arg4"))
         r86 <- Part { src: r76, offset: 8, size: 8 }
         r84 <- Part { src: r76, offset: 0, size: 8 }
         r87 <- Concat { lo: r84, hi: r86 }
         r89 <- SetReturnValue(r87)



T0: {
  ;
  return pre:arg4[16 .. 8] ++ pre:arg4[8 .. 0]
}
