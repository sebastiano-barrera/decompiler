---
source: decompiler/tests/test_tool.rs
expression: out
---
func035 0x4011a6+4 (file 0x11a6)
          4011a6: 0f 28 c1                movaps xmm0,xmm1
          4011a9: c3                      ret

function type: "func035" func (arg0 small <TypeID(784v1)>,
                               arg1 small_xmms <TypeID(791v1)>) double <TypeID(783v1)>
0 warnings.


mil program = 
program  85 instrs
                 0 r12 <- Ancestral(AncestralName("stack_bottom"))
                 1 r2 <- Ancestral(AncestralName("CF"))
                 2 r3 <- Ancestral(AncestralName("PF"))
                 3 r4 <- Ancestral(AncestralName("AF"))
                 4 r5 <- Ancestral(AncestralName("ZF"))
                 5 r6 <- Ancestral(AncestralName("SF"))
                 6 r7 <- Ancestral(AncestralName("TF"))
                 7 r8 <- Ancestral(AncestralName("IF"))
                 8 r9 <- Ancestral(AncestralName("DF"))
                 9 r10 <- Ancestral(AncestralName("OF"))
                10 r11 <- Ancestral(AncestralName("RBP"))
                11 r12 <- Ancestral(AncestralName("RSP"))
                12 r13 <- Ancestral(AncestralName("RIP"))
                13 r14 <- Ancestral(AncestralName("RDI"))
                14 r15 <- Ancestral(AncestralName("RSI"))
                15 r16 <- Ancestral(AncestralName("RAX"))
                16 r17 <- Ancestral(AncestralName("RBX"))
                17 r18 <- Ancestral(AncestralName("RCX"))
                18 r19 <- Ancestral(AncestralName("RDX"))
                19 r20 <- Ancestral(AncestralName("R8"))
                20 r21 <- Ancestral(AncestralName("R9"))
                21 r22 <- Ancestral(AncestralName("R10"))
                22 r23 <- Ancestral(AncestralName("R11"))
                23 r24 <- Ancestral(AncestralName("R12"))
                24 r25 <- Ancestral(AncestralName("R13"))
                25 r26 <- Ancestral(AncestralName("R14"))
                26 r27 <- Ancestral(AncestralName("R15"))
                27 r28 <- Ancestral(AncestralName("ZMM0"))
                28 r29 <- Ancestral(AncestralName("ZMM1"))
                29 r30 <- Ancestral(AncestralName("ZMM2"))
                30 r31 <- Ancestral(AncestralName("ZMM3"))
                31 r32 <- Ancestral(AncestralName("ZMM4"))
                32 r33 <- Ancestral(AncestralName("ZMM5"))
                33 r34 <- Ancestral(AncestralName("ZMM6"))
                34 r35 <- Ancestral(AncestralName("ZMM7"))
                35 r36 <- Ancestral(AncestralName("ZMM8"))
                36 r37 <- Ancestral(AncestralName("ZMM9"))
                37 r38 <- Ancestral(AncestralName("ZMM10"))
                38 r39 <- Ancestral(AncestralName("ZMM11"))
                39 r40 <- Ancestral(AncestralName("ZMM12"))
                40 r41 <- Ancestral(AncestralName("ZMM13"))
                41 r42 <- Ancestral(AncestralName("ZMM14"))
                42 r43 <- Ancestral(AncestralName("ZMM15"))
                43 r45 <- Undefined
                44 r46 <- Undefined
                45 r47 <- Undefined
                46 r48 <- Undefined
                47 r49 <- Undefined
                48 r50 <- Undefined
                49 r51 <- Undefined
                50 r52 <- Undefined
                51 r53 <- Undefined
                52 r54 <- Undefined
                53 r55 <- Undefined
                54 r56 <- Undefined
                55 r57 <- Undefined
                56 r58 <- Undefined
                57 r59 <- Undefined
                58 r60 <- Undefined
                59 r61 <- Undefined
                60 r62 <- Undefined
                61 r63 <- Undefined
                62 r64 <- Undefined
                63 r65 <- Undefined
                64 r45 <- Ancestral(AncestralName("arg0"))
                65 r46 <- Part { src: r45, offset: 0, size: 8 }
                66 r15 <- Get(r46)
                67 r47 <- Part { src: r45, offset: 8, size: 8 }
                68 r19 <- Get(r47)
                69 r48 <- Ancestral(AncestralName("arg1"))
                70 r49 <- Part { src: r48, offset: 0, size: 8 }
                71 r50 <- Part { src: r28, offset: 8, size: 56 }
                72 r28 <- Concat { lo: r49, hi: r50 }
                73 r51 <- Part { src: r48, offset: 8, size: 8 }
                74 r52 <- Part { src: r29, offset: 8, size: 56 }
                75 r29 <- Concat { lo: r51, hi: r52 }
0x4011a6:
                76 r46 <- Part { src: r29, offset: 0, size: 16 }
                77 r47 <- Part { src: r28, offset: 16, size: 48 }
                78 r28 <- Concat { lo: r46, hi: r47 }
0x4011a9:
                79 r45 <- Void
                80 r46 <- Part { src: r28, offset: 0, size: 8 }
                81 r45 <- Concat { lo: r45, hi: r46 }
                82 r45 <- Part { src: r45, offset: 0, size: 8 }
                83 r47 <- SetReturnValue(r45)
                84 r47 <- Control(Ret)


ssa pre-xform:
ssa program  85 instrs
.B0:    ;;  → Always(Return).
         r27 <- Ancestral(AncestralName("ZMM0"))
         r28 <- Ancestral(AncestralName("ZMM1"))
  (  2)  r69 <- Ancestral(AncestralName("arg1"))
         r70 <- Part { src: r69, offset: 0, size: 8 }
         r71 <- Part { src: r27, offset: 8, size: 56 }
         r72 <- Concat { lo: r70, hi: r71 }
         r73 <- Part { src: r69, offset: 8, size: 8 }
         r74 <- Part { src: r28, offset: 8, size: 56 }
         r75 <- Concat { lo: r73, hi: r74 }
         r76 <- Part { src: r75, offset: 0, size: 16 }
         r77 <- Part { src: r72, offset: 16, size: 48 }
         r78 <- Concat { lo: r76, hi: r77 }
         r80 <- Part { src: r78, offset: 0, size: 8 }
         r81 <- Concat { lo: r79, hi: r80 }
         r82 <- Part { src: r81, offset: 0, size: 8 }
         r83 <- SetReturnValue(r82)


cfg:
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r27, r28, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83]
  domtree:
    BlockID(0)

ssa post-xform:
ssa program  85 instrs
.B0:    ;;  → Always(Return).
         r69 <- Ancestral(AncestralName("arg1"))
         r82 <- Part { src: r69, offset: 8, size: 8 }
         r83 <- SetReturnValue(r82)



T0: {
  ;
  return pre:arg1[16 .. 8]
}
