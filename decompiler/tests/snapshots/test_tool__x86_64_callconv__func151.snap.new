---
source: decompiler/tests/test_tool.rs
assertion_line: 136
expression: out
---
 --- mil
program  83 instrs
    0 r12: UnknownUnsized <- Ancestral(AncestralName("stack_bottom"))
    1 r2: UnknownUnsized <- Ancestral(AncestralName("CF"))
    2 r3: UnknownUnsized <- Ancestral(AncestralName("PF"))
    3 r4: UnknownUnsized <- Ancestral(AncestralName("AF"))
    4 r5: UnknownUnsized <- Ancestral(AncestralName("ZF"))
    5 r6: UnknownUnsized <- Ancestral(AncestralName("SF"))
    6 r7: UnknownUnsized <- Ancestral(AncestralName("TF"))
    7 r8: UnknownUnsized <- Ancestral(AncestralName("IF"))
    8 r9: UnknownUnsized <- Ancestral(AncestralName("DF"))
    9 r10: UnknownUnsized <- Ancestral(AncestralName("OF"))
   10 r11: UnknownUnsized <- Ancestral(AncestralName("RBP"))
   11 r12: UnknownUnsized <- Ancestral(AncestralName("RSP"))
   12 r13: UnknownUnsized <- Ancestral(AncestralName("RIP"))
   13 r14: UnknownUnsized <- Ancestral(AncestralName("RDI"))
   14 r15: UnknownUnsized <- Ancestral(AncestralName("RSI"))
   15 r16: UnknownUnsized <- Ancestral(AncestralName("RAX"))
   16 r17: UnknownUnsized <- Ancestral(AncestralName("RBX"))
   17 r18: UnknownUnsized <- Ancestral(AncestralName("RCX"))
   18 r19: UnknownUnsized <- Ancestral(AncestralName("RDX"))
   19 r20: UnknownUnsized <- Ancestral(AncestralName("R8"))
   20 r21: UnknownUnsized <- Ancestral(AncestralName("R9"))
   21 r22: UnknownUnsized <- Ancestral(AncestralName("R10"))
   22 r23: UnknownUnsized <- Ancestral(AncestralName("R11"))
   23 r24: UnknownUnsized <- Ancestral(AncestralName("R12"))
   24 r25: UnknownUnsized <- Ancestral(AncestralName("R13"))
   25 r26: UnknownUnsized <- Ancestral(AncestralName("R14"))
   26 r27: UnknownUnsized <- Ancestral(AncestralName("R15"))
   27 r28: UnknownUnsized <- Ancestral(AncestralName("ZMM0"))
   28 r29: UnknownUnsized <- Ancestral(AncestralName("ZMM1"))
   29 r30: UnknownUnsized <- Ancestral(AncestralName("ZMM2"))
   30 r31: UnknownUnsized <- Ancestral(AncestralName("ZMM3"))
   31 r32: UnknownUnsized <- Ancestral(AncestralName("ZMM4"))
   32 r33: UnknownUnsized <- Ancestral(AncestralName("ZMM5"))
   33 r34: UnknownUnsized <- Ancestral(AncestralName("ZMM6"))
   34 r35: UnknownUnsized <- Ancestral(AncestralName("ZMM7"))
   35 r36: UnknownUnsized <- Ancestral(AncestralName("ZMM8"))
   36 r37: UnknownUnsized <- Ancestral(AncestralName("ZMM9"))
   37 r38: UnknownUnsized <- Ancestral(AncestralName("ZMM10"))
   38 r39: UnknownUnsized <- Ancestral(AncestralName("ZMM11"))
   39 r40: UnknownUnsized <- Ancestral(AncestralName("ZMM12"))
   40 r41: UnknownUnsized <- Ancestral(AncestralName("ZMM13"))
   41 r42: UnknownUnsized <- Ancestral(AncestralName("ZMM14"))
   42 r43: UnknownUnsized <- Ancestral(AncestralName("ZMM15"))
   43 r45: UnknownUnsized <- Ancestral(AncestralName("arg0"))
   44 r14: UnknownUnsized <- Get(r45)
   45 r46: UnknownUnsized <- Ancestral(AncestralName("arg1"))
   46 r15: UnknownUnsized <- Get(r46)
   47 r47: UnknownUnsized <- Ancestral(AncestralName("arg2"))
   48 r19: UnknownUnsized <- Get(r47)
   49 r48: UnknownUnsized <- Ancestral(AncestralName("arg3"))
   50 r18: UnknownUnsized <- Get(r48)
   51 r49: UnknownUnsized <- Ancestral(AncestralName("arg4"))
   52 r20: UnknownUnsized <- Get(r49)
   53 r50: UnknownUnsized <- Ancestral(AncestralName("arg5"))
   54 r52: UnknownUnsized <- Part { src: r50, offset: 0, size: 8 }
   55 r51: UnknownUnsized <- ArithK(Add, r12, 8)
   56 r51: UnknownUnsized <- StoreMem { addr: r51, value: r52 }
   57 r52: UnknownUnsized <- Part { src: r50, offset: 8, size: 8 }
   58 r51: UnknownUnsized <- ArithK(Add, r12, 16)
   59 r51: UnknownUnsized <- StoreMem { addr: r51, value: r52 }
   60 r53: UnknownUnsized <- Ancestral(AncestralName("arg6"))
   61 r55: UnknownUnsized <- Part { src: r53, offset: 0, size: 8 }
   62 r54: UnknownUnsized <- ArithK(Add, r12, 24)
   63 r54: UnknownUnsized <- StoreMem { addr: r54, value: r55 }
   64 r55: UnknownUnsized <- Part { src: r53, offset: 8, size: 8 }
   65 r54: UnknownUnsized <- ArithK(Add, r12, 32)
   66 r54: UnknownUnsized <- StoreMem { addr: r54, value: r55 }
   67 r55: UnknownUnsized <- Part { src: r53, offset: 16, size: 8 }
   68 r54: UnknownUnsized <- ArithK(Add, r12, 40)
   69 r54: UnknownUnsized <- StoreMem { addr: r54, value: r55 }
   70 r55: UnknownUnsized <- Part { src: r53, offset: 24, size: 8 }
   71 r54: UnknownUnsized <- ArithK(Add, r12, 48)
   72 r54: UnknownUnsized <- StoreMem { addr: r54, value: r55 }
0x401423:
   73 r46: UnknownUnsized <- Const { value: 49, size: 8 }
   74 r46: UnknownUnsized <- Arith(Add, r46, r12)
   75 r45: UnknownUnsized <- LoadMem { addr: r46, size: 1 }
   76 r47: UnknownUnsized <- Part { src: r16, offset: 1, size: 7 }
   77 r16: UnknownUnsized <- Concat { lo: r45, hi: r47 }
0x401427:
   78 r45: UnknownUnsized <- Void
   79 r45: UnknownUnsized <- Concat { lo: r45, hi: r16 }
   80 r45: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
   81 r47: UnknownUnsized <- SetReturnValue(r45)
   82 r47: UnknownUnsized <- Control(Ret)


 --- ssa pre-xform
ssa program  83 instrs
.B0:    ;;  → Always(Return).
  (  7)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
         r15: unknown <UnknownUnsized> <- Ancestral(AncestralName("RAX"))
  (  2)  r53: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg5"))
         r54: unknown <UnknownUnsized> <- Part { src: r53, offset: 0, size: 8 }
         r55: unknown <UnknownUnsized> <- ArithK(Add, r11, 8)
         r56: unknown <UnknownUnsized> <- StoreMem { addr: r55, value: r54 }
         r57: unknown <UnknownUnsized> <- Part { src: r53, offset: 8, size: 8 }
         r58: unknown <UnknownUnsized> <- ArithK(Add, r11, 16)
         r59: unknown <UnknownUnsized> <- StoreMem { addr: r58, value: r57 }
  (  4)  r60: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg6"))
         r61: unknown <UnknownUnsized> <- Part { src: r60, offset: 0, size: 8 }
         r62: unknown <UnknownUnsized> <- ArithK(Add, r11, 24)
         r63: unknown <UnknownUnsized> <- StoreMem { addr: r62, value: r61 }
         r64: unknown <UnknownUnsized> <- Part { src: r60, offset: 8, size: 8 }
         r65: unknown <UnknownUnsized> <- ArithK(Add, r11, 32)
         r66: unknown <UnknownUnsized> <- StoreMem { addr: r65, value: r64 }
         r67: unknown <UnknownUnsized> <- Part { src: r60, offset: 16, size: 8 }
         r68: unknown <UnknownUnsized> <- ArithK(Add, r11, 40)
         r69: unknown <UnknownUnsized> <- StoreMem { addr: r68, value: r67 }
         r70: unknown <UnknownUnsized> <- Part { src: r60, offset: 24, size: 8 }
         r71: unknown <UnknownUnsized> <- ArithK(Add, r11, 48)
         r72: unknown <UnknownUnsized> <- StoreMem { addr: r71, value: r70 }
         r73: unknown <UnknownUnsized> <- Const { value: 49, size: 8 }
         r74: unknown <UnknownUnsized> <- Arith(Add, r73, r11)
         r75: unknown <UnknownUnsized> <- LoadMem { addr: r74, size: 1 }
         r76: unknown <UnknownUnsized> <- Part { src: r15, offset: 1, size: 7 }
         r77: unknown <UnknownUnsized> <- Concat { lo: r75, hi: r76 }
         r79: unknown <UnknownUnsized> <- Concat { lo: r78, hi: r77 }
         r80: unknown <UnknownUnsized> <- Part { src: r79, offset: 0, size: 1 }
         r81: unknown <UnknownUnsized> <- SetReturnValue(r80)


 --- cfg
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r11, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r84, r81]
  domtree:
    BlockID(0)

 --- ssa
ssa program  88 instrs
.B0:    ;;  → Always(Return).
  (  6)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  2)  r53: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg5"))
         r54: unknown <UnknownUnsized> <- Part { src: r53, offset: 0, size: 8 }
         r55: unknown <UnknownUnsized> <- ArithK(Add, r11, 8)
         r56: unknown <UnknownUnsized> <- StoreMem { addr: r55, value: r54 }
         r57: unknown <UnknownUnsized> <- Part { src: r53, offset: 8, size: 8 }
         r58: unknown <UnknownUnsized> <- ArithK(Add, r11, 16)
         r59: unknown <UnknownUnsized> <- StoreMem { addr: r58, value: r57 }
  (  5)  r60: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg6"))
         r61: unknown <UnknownUnsized> <- Part { src: r60, offset: 0, size: 8 }
         r62: unknown <UnknownUnsized> <- ArithK(Add, r11, 24)
         r63: unknown <UnknownUnsized> <- StoreMem { addr: r62, value: r61 }
         r64: unknown <UnknownUnsized> <- Part { src: r60, offset: 8, size: 8 }
         r65: unknown <UnknownUnsized> <- ArithK(Add, r11, 32)
         r66: unknown <UnknownUnsized> <- StoreMem { addr: r65, value: r64 }
         r67: unknown <UnknownUnsized> <- Part { src: r60, offset: 16, size: 8 }
         r68: unknown <UnknownUnsized> <- ArithK(Add, r11, 40)
         r69: unknown <UnknownUnsized> <- StoreMem { addr: r68, value: r67 }
         r70: unknown <UnknownUnsized> <- Part { src: r60, offset: 24, size: 8 }
         r71: unknown <UnknownUnsized> <- ArithK(Add, r11, 48)
         r72: unknown <UnknownUnsized> <- StoreMem { addr: r71, value: r70 }
         r84: unknown <UnknownUnsized> <- Part { src: r60, offset: 25, size: 1 }
         r81: unknown <UnknownUnsized> <- SetReturnValue(r84)


 --- ast

T0: {
  [pre:RSP + 8]:* := pre:arg5[8 .. 0];
  [pre:RSP + 16]:* := pre:arg5[16 .. 8];
  [pre:RSP + 24]:* := pre:arg6[8 .. 0];
  [pre:RSP + 32]:* := pre:arg6[16 .. 8];
  [pre:RSP + 40]:* := pre:arg6[24 .. 16];
  [pre:RSP + 48]:* := pre:arg6[32 .. 24];
  ;
  return pre:arg6[26 .. 25]
}
