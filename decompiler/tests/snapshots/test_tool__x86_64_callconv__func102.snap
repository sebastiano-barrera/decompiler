---
source: decompiler/tests/test_tool.rs
expression: out
---
 --- mil
program  64 instrs
    0 r12: UnknownUnsized <- Ancestral(AncestralName("stack_bottom"))
    1 r2: UnknownUnsized <- Ancestral(AncestralName("CF"))
    2 r3: UnknownUnsized <- Ancestral(AncestralName("PF"))
    3 r4: UnknownUnsized <- Ancestral(AncestralName("AF"))
    4 r5: UnknownUnsized <- Ancestral(AncestralName("ZF"))
    5 r6: UnknownUnsized <- Ancestral(AncestralName("SF"))
    6 r7: UnknownUnsized <- Ancestral(AncestralName("TF"))
    7 r8: UnknownUnsized <- Ancestral(AncestralName("IF"))
    8 r9: UnknownUnsized <- Ancestral(AncestralName("DF"))
    9 r10: UnknownUnsized <- Ancestral(AncestralName("OF"))
   10 r11: UnknownUnsized <- Ancestral(AncestralName("RBP"))
   11 r12: UnknownUnsized <- Ancestral(AncestralName("RSP"))
   12 r13: UnknownUnsized <- Ancestral(AncestralName("RIP"))
   13 r14: UnknownUnsized <- Ancestral(AncestralName("RDI"))
   14 r15: UnknownUnsized <- Ancestral(AncestralName("RSI"))
   15 r16: UnknownUnsized <- Ancestral(AncestralName("RAX"))
   16 r17: UnknownUnsized <- Ancestral(AncestralName("RBX"))
   17 r18: UnknownUnsized <- Ancestral(AncestralName("RCX"))
   18 r19: UnknownUnsized <- Ancestral(AncestralName("RDX"))
   19 r20: UnknownUnsized <- Ancestral(AncestralName("R8"))
   20 r21: UnknownUnsized <- Ancestral(AncestralName("R9"))
   21 r22: UnknownUnsized <- Ancestral(AncestralName("R10"))
   22 r23: UnknownUnsized <- Ancestral(AncestralName("R11"))
   23 r24: UnknownUnsized <- Ancestral(AncestralName("R12"))
   24 r25: UnknownUnsized <- Ancestral(AncestralName("R13"))
   25 r26: UnknownUnsized <- Ancestral(AncestralName("R14"))
   26 r27: UnknownUnsized <- Ancestral(AncestralName("R15"))
   27 r28: UnknownUnsized <- Ancestral(AncestralName("ZMM0"))
   28 r29: UnknownUnsized <- Ancestral(AncestralName("ZMM1"))
   29 r30: UnknownUnsized <- Ancestral(AncestralName("ZMM2"))
   30 r31: UnknownUnsized <- Ancestral(AncestralName("ZMM3"))
   31 r32: UnknownUnsized <- Ancestral(AncestralName("ZMM4"))
   32 r33: UnknownUnsized <- Ancestral(AncestralName("ZMM5"))
   33 r34: UnknownUnsized <- Ancestral(AncestralName("ZMM6"))
   34 r35: UnknownUnsized <- Ancestral(AncestralName("ZMM7"))
   35 r36: UnknownUnsized <- Ancestral(AncestralName("ZMM8"))
   36 r37: UnknownUnsized <- Ancestral(AncestralName("ZMM9"))
   37 r38: UnknownUnsized <- Ancestral(AncestralName("ZMM10"))
   38 r39: UnknownUnsized <- Ancestral(AncestralName("ZMM11"))
   39 r40: UnknownUnsized <- Ancestral(AncestralName("ZMM12"))
   40 r41: UnknownUnsized <- Ancestral(AncestralName("ZMM13"))
   41 r42: UnknownUnsized <- Ancestral(AncestralName("ZMM14"))
   42 r43: UnknownUnsized <- Ancestral(AncestralName("ZMM15"))
0x401301:
   43 r16: UnknownUnsized <- Get(r14)
0x401304:
   44 r46: UnknownUnsized <- Const { value: 8, size: 8 }
   45 r46: UnknownUnsized <- Arith(Add, r46, r12)
   46 r45: UnknownUnsized <- LoadMem { addr: r46, size: 16 }
   47 r47: UnknownUnsized <- Part { src: r28, offset: 16, size: 48 }
   48 r28: UnknownUnsized <- Concat { lo: r45, hi: r47 }
0x401309:
   49 r46: UnknownUnsized <- Const { value: 24, size: 8 }
   50 r46: UnknownUnsized <- Arith(Add, r46, r12)
   51 r45: UnknownUnsized <- LoadMem { addr: r46, size: 16 }
   52 r47: UnknownUnsized <- Part { src: r29, offset: 16, size: 48 }
   53 r29: UnknownUnsized <- Concat { lo: r45, hi: r47 }
0x40130e:
   54 r46: UnknownUnsized <- Part { src: r29, offset: 0, size: 16 }
   55 r47: UnknownUnsized <- Const { value: 16, size: 8 }
   56 r47: UnknownUnsized <- Arith(Add, r47, r14)
   57 r47: UnknownUnsized <- StoreMem { addr: r47, value: r46 }
0x401312:
   58 r46: UnknownUnsized <- Part { src: r28, offset: 0, size: 16 }
   59 r47: UnknownUnsized <- Const { value: 0, size: 8 }
   60 r47: UnknownUnsized <- Arith(Add, r47, r14)
   61 r47: UnknownUnsized <- StoreMem { addr: r47, value: r46 }
0x401315:
   62 r46: UnknownUnsized <- SetReturnValue(r16)
   63 r46: UnknownUnsized <- Control(Ret)


 --- ssa pre-xform
ssa program  64 instrs
.B0:    ;;  → Always(Return).
  (  2)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  3)  r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
         r27: unknown <UnknownUnsized> <- Ancestral(AncestralName("ZMM0"))
         r28: unknown <UnknownUnsized> <- Ancestral(AncestralName("ZMM1"))
         r44: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r45: unknown <UnknownUnsized> <- Arith(Add, r44, r11)
         r46: unknown <UnknownUnsized> <- LoadMem { addr: r45, size: 16 }
         r47: unknown <UnknownUnsized> <- Part { src: r27, offset: 16, size: 48 }
         r48: unknown <UnknownUnsized> <- Concat { lo: r46, hi: r47 }
         r49: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r50: unknown <UnknownUnsized> <- Arith(Add, r49, r11)
         r51: unknown <UnknownUnsized> <- LoadMem { addr: r50, size: 16 }
         r52: unknown <UnknownUnsized> <- Part { src: r28, offset: 16, size: 48 }
         r53: unknown <UnknownUnsized> <- Concat { lo: r51, hi: r52 }
         r54: unknown <UnknownUnsized> <- Part { src: r53, offset: 0, size: 16 }
         r55: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r56: unknown <UnknownUnsized> <- Arith(Add, r55, r13)
         r57: unknown <UnknownUnsized> <- StoreMem { addr: r56, value: r54 }
         r58: unknown <UnknownUnsized> <- Part { src: r48, offset: 0, size: 16 }
         r59: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r60: unknown <UnknownUnsized> <- Arith(Add, r59, r13)
         r61: unknown <UnknownUnsized> <- StoreMem { addr: r60, value: r58 }
         r62: unknown <UnknownUnsized> <- SetReturnValue(r13)


 --- cfg
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r11, r13, r45, r46, r50, r51, r56, r57, r61, r62]
  domtree:
    BlockID(0)

 --- ssa
ssa program  64 instrs
.B0:    ;;  → Always(Return).
  (  2)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  3)  r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
         r45: unknown <UnknownUnsized> <- ArithK(Add, r11, 8)
         r46: unknown <UnknownUnsized> <- LoadMem { addr: r45, size: 16 }
         r50: unknown <UnknownUnsized> <- ArithK(Add, r11, 24)
         r51: unknown <UnknownUnsized> <- LoadMem { addr: r50, size: 16 }
         r56: unknown <UnknownUnsized> <- ArithK(Add, r13, 16)
         r57: unknown <UnknownUnsized> <- StoreMem { addr: r56, value: r51 }
         r61: unknown <UnknownUnsized> <- StoreMem { addr: r13, value: r46 }
         r62: unknown <UnknownUnsized> <- SetReturnValue(r13)


 --- ast

T0: {
  [pre:RDI + 16]:* := [pre:RSP + 24]:16;
  [pre:RDI]:* := [pre:RSP + 8]:16;
  ;
  return pre:RDI
}
