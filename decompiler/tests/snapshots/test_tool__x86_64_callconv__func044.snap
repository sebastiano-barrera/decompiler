---
source: decompiler/tests/test_tool.rs
expression: out
---
func044 0x4011e7+3 (file 0x11e7)
          4011e7: 89 c8                   mov eax,ecx
          4011e9: c3                      ret

function type: "func044" func (arg0 *void <TypeID(1v1)>,
                               arg1 small <TypeID(784v1)>,
                               arg2 char <TypeID(778v1)>) char <TypeID(778v1)>
0 warnings.


mil program = 
program  83 instrs
                 0 r12 <- Ancestral(AncestralName("stack_bottom"))
                 1 r2 <- Ancestral(AncestralName("CF"))
                 2 r3 <- Ancestral(AncestralName("PF"))
                 3 r4 <- Ancestral(AncestralName("AF"))
                 4 r5 <- Ancestral(AncestralName("ZF"))
                 5 r6 <- Ancestral(AncestralName("SF"))
                 6 r7 <- Ancestral(AncestralName("TF"))
                 7 r8 <- Ancestral(AncestralName("IF"))
                 8 r9 <- Ancestral(AncestralName("DF"))
                 9 r10 <- Ancestral(AncestralName("OF"))
                10 r11 <- Ancestral(AncestralName("RBP"))
                11 r12 <- Ancestral(AncestralName("RSP"))
                12 r13 <- Ancestral(AncestralName("RIP"))
                13 r14 <- Ancestral(AncestralName("RDI"))
                14 r15 <- Ancestral(AncestralName("RSI"))
                15 r16 <- Ancestral(AncestralName("RAX"))
                16 r17 <- Ancestral(AncestralName("RBX"))
                17 r18 <- Ancestral(AncestralName("RCX"))
                18 r19 <- Ancestral(AncestralName("RDX"))
                19 r20 <- Ancestral(AncestralName("R8"))
                20 r21 <- Ancestral(AncestralName("R9"))
                21 r22 <- Ancestral(AncestralName("R10"))
                22 r23 <- Ancestral(AncestralName("R11"))
                23 r24 <- Ancestral(AncestralName("R12"))
                24 r25 <- Ancestral(AncestralName("R13"))
                25 r26 <- Ancestral(AncestralName("R14"))
                26 r27 <- Ancestral(AncestralName("R15"))
                27 r28 <- Ancestral(AncestralName("ZMM0"))
                28 r29 <- Ancestral(AncestralName("ZMM1"))
                29 r30 <- Ancestral(AncestralName("ZMM2"))
                30 r31 <- Ancestral(AncestralName("ZMM3"))
                31 r32 <- Ancestral(AncestralName("ZMM4"))
                32 r33 <- Ancestral(AncestralName("ZMM5"))
                33 r34 <- Ancestral(AncestralName("ZMM6"))
                34 r35 <- Ancestral(AncestralName("ZMM7"))
                35 r36 <- Ancestral(AncestralName("ZMM8"))
                36 r37 <- Ancestral(AncestralName("ZMM9"))
                37 r38 <- Ancestral(AncestralName("ZMM10"))
                38 r39 <- Ancestral(AncestralName("ZMM11"))
                39 r40 <- Ancestral(AncestralName("ZMM12"))
                40 r41 <- Ancestral(AncestralName("ZMM13"))
                41 r42 <- Ancestral(AncestralName("ZMM14"))
                42 r43 <- Ancestral(AncestralName("ZMM15"))
                43 r44 <- Ancestral(AncestralName("memory"))
                44 r45 <- Undefined
                45 r46 <- Undefined
                46 r47 <- Undefined
                47 r48 <- Undefined
                48 r49 <- Undefined
                49 r50 <- Undefined
                50 r51 <- Undefined
                51 r52 <- Undefined
                52 r53 <- Undefined
                53 r54 <- Undefined
                54 r55 <- Undefined
                55 r56 <- Undefined
                56 r57 <- Undefined
                57 r58 <- Undefined
                58 r59 <- Undefined
                59 r60 <- Undefined
                60 r61 <- Undefined
                61 r62 <- Undefined
                62 r63 <- Undefined
                63 r64 <- Undefined
                64 r65 <- Undefined
                65 r45 <- Ancestral(AncestralName("arg0"))
                66 r14 <- Get(r45)
                67 r46 <- Ancestral(AncestralName("arg1"))
                68 r47 <- Part { src: r46, offset: 0, size: 8 }
                69 r15 <- Get(r47)
                70 r48 <- Part { src: r46, offset: 8, size: 8 }
                71 r19 <- Get(r48)
                72 r49 <- Ancestral(AncestralName("arg2"))
                73 r50 <- Widen { reg: r49, target_size: 8, sign: false }
                74 r18 <- Get(r50)
0x4011e7:
                75 r46 <- Part { src: r18, offset: 0, size: 4 }
                76 r47 <- Part { src: r16, offset: 4, size: 4 }
                77 r16 <- Concat { lo: r46, hi: r47 }
0x4011e9:
                78 r45 <- Void
                79 r45 <- Concat { lo: r45, hi: r16 }
                80 r45 <- Part { src: r45, offset: 0, size: 1 }
                81 r47 <- SetReturnValue(r45)
                82 r47 <- Control(Ret)


ssa pre-xform:
ssa program  83 instrs
.B0:    ;;  → Always(Return).
         r15 <- Ancestral(AncestralName("RAX"))
         r72 <- Ancestral(AncestralName("arg2"))
         r73 <- Widen { reg: r72, target_size: 8, sign: false }
         r75 <- Part { src: r73, offset: 0, size: 4 }
         r76 <- Part { src: r15, offset: 4, size: 4 }
         r77 <- Concat { lo: r75, hi: r76 }
         r79 <- Concat { lo: r78, hi: r77 }
         r80 <- Part { src: r79, offset: 0, size: 1 }
         r81 <- SetReturnValue(r80)


cfg:
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r15, r72, r73, r75, r76, r77, r78, r79, r80, r81]
  domtree:
    BlockID(0)

ssa post-xform:
ssa program  83 instrs
.B0:    ;;  → Always(Return).
         r72 <- Ancestral(AncestralName("arg2"))
         r81 <- SetReturnValue(r72)



T0: {
  ;
  return pre:arg2
}
