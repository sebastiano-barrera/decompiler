---
source: decompiler/tests/test_tool.rs
expression: out
---
func074 0x401273+4 (file 0x1273)
          401273: 4c 89 c0                mov rax,r8
          401276: c3                      ret

function type: "func074" func (arg0 *void <TypeID(1v1)>,
                               arg1 *void <TypeID(1v1)>,
                               arg2 small <TypeID(785v1)>,
                               arg3 small <TypeID(785v1)>) *void <TypeID(1v1)>
0 warnings.


mil program = 
program  84 instrs
    0 r12: TypeID(2v1) <- Ancestral(AncestralName("stack_bottom"))
    1 r2: TypeID(2v1) <- Ancestral(AncestralName("CF"))
    2 r3: TypeID(2v1) <- Ancestral(AncestralName("PF"))
    3 r4: TypeID(2v1) <- Ancestral(AncestralName("AF"))
    4 r5: TypeID(2v1) <- Ancestral(AncestralName("ZF"))
    5 r6: TypeID(2v1) <- Ancestral(AncestralName("SF"))
    6 r7: TypeID(2v1) <- Ancestral(AncestralName("TF"))
    7 r8: TypeID(2v1) <- Ancestral(AncestralName("IF"))
    8 r9: TypeID(2v1) <- Ancestral(AncestralName("DF"))
    9 r10: TypeID(2v1) <- Ancestral(AncestralName("OF"))
   10 r11: TypeID(2v1) <- Ancestral(AncestralName("RBP"))
   11 r12: TypeID(2v1) <- Ancestral(AncestralName("RSP"))
   12 r13: TypeID(2v1) <- Ancestral(AncestralName("RIP"))
   13 r14: TypeID(2v1) <- Ancestral(AncestralName("RDI"))
   14 r15: TypeID(2v1) <- Ancestral(AncestralName("RSI"))
   15 r16: TypeID(2v1) <- Ancestral(AncestralName("RAX"))
   16 r17: TypeID(2v1) <- Ancestral(AncestralName("RBX"))
   17 r18: TypeID(2v1) <- Ancestral(AncestralName("RCX"))
   18 r19: TypeID(2v1) <- Ancestral(AncestralName("RDX"))
   19 r20: TypeID(2v1) <- Ancestral(AncestralName("R8"))
   20 r21: TypeID(2v1) <- Ancestral(AncestralName("R9"))
   21 r22: TypeID(2v1) <- Ancestral(AncestralName("R10"))
   22 r23: TypeID(2v1) <- Ancestral(AncestralName("R11"))
   23 r24: TypeID(2v1) <- Ancestral(AncestralName("R12"))
   24 r25: TypeID(2v1) <- Ancestral(AncestralName("R13"))
   25 r26: TypeID(2v1) <- Ancestral(AncestralName("R14"))
   26 r27: TypeID(2v1) <- Ancestral(AncestralName("R15"))
   27 r28: TypeID(2v1) <- Ancestral(AncestralName("ZMM0"))
   28 r29: TypeID(2v1) <- Ancestral(AncestralName("ZMM1"))
   29 r30: TypeID(2v1) <- Ancestral(AncestralName("ZMM2"))
   30 r31: TypeID(2v1) <- Ancestral(AncestralName("ZMM3"))
   31 r32: TypeID(2v1) <- Ancestral(AncestralName("ZMM4"))
   32 r33: TypeID(2v1) <- Ancestral(AncestralName("ZMM5"))
   33 r34: TypeID(2v1) <- Ancestral(AncestralName("ZMM6"))
   34 r35: TypeID(2v1) <- Ancestral(AncestralName("ZMM7"))
   35 r36: TypeID(2v1) <- Ancestral(AncestralName("ZMM8"))
   36 r37: TypeID(2v1) <- Ancestral(AncestralName("ZMM9"))
   37 r38: TypeID(2v1) <- Ancestral(AncestralName("ZMM10"))
   38 r39: TypeID(2v1) <- Ancestral(AncestralName("ZMM11"))
   39 r40: TypeID(2v1) <- Ancestral(AncestralName("ZMM12"))
   40 r41: TypeID(2v1) <- Ancestral(AncestralName("ZMM13"))
   41 r42: TypeID(2v1) <- Ancestral(AncestralName("ZMM14"))
   42 r43: TypeID(2v1) <- Ancestral(AncestralName("ZMM15"))
   43 r45: TypeID(2v1) <- Undefined
   44 r46: TypeID(2v1) <- Undefined
   45 r47: TypeID(2v1) <- Undefined
   46 r48: TypeID(2v1) <- Undefined
   47 r49: TypeID(2v1) <- Undefined
   48 r50: TypeID(2v1) <- Undefined
   49 r51: TypeID(2v1) <- Undefined
   50 r52: TypeID(2v1) <- Undefined
   51 r53: TypeID(2v1) <- Undefined
   52 r54: TypeID(2v1) <- Undefined
   53 r55: TypeID(2v1) <- Undefined
   54 r56: TypeID(2v1) <- Undefined
   55 r57: TypeID(2v1) <- Undefined
   56 r58: TypeID(2v1) <- Undefined
   57 r59: TypeID(2v1) <- Undefined
   58 r60: TypeID(2v1) <- Undefined
   59 r61: TypeID(2v1) <- Undefined
   60 r62: TypeID(2v1) <- Undefined
   61 r63: TypeID(2v1) <- Undefined
   62 r64: TypeID(2v1) <- Undefined
   63 r65: TypeID(2v1) <- Undefined
   64 r45: TypeID(2v1) <- Ancestral(AncestralName("arg0"))
   65 r14: TypeID(2v1) <- Get(r45)
   66 r46: TypeID(2v1) <- Ancestral(AncestralName("arg1"))
   67 r15: TypeID(2v1) <- Get(r46)
   68 r47: TypeID(2v1) <- Ancestral(AncestralName("arg2"))
   69 r48: TypeID(2v1) <- Part { src: r47, offset: 0, size: 8 }
   70 r19: TypeID(2v1) <- Get(r48)
   71 r49: TypeID(2v1) <- Part { src: r47, offset: 8, size: 8 }
   72 r18: TypeID(2v1) <- Get(r49)
   73 r50: TypeID(2v1) <- Ancestral(AncestralName("arg3"))
   74 r51: TypeID(2v1) <- Part { src: r50, offset: 0, size: 8 }
   75 r20: TypeID(2v1) <- Get(r51)
   76 r52: TypeID(2v1) <- Part { src: r50, offset: 8, size: 8 }
   77 r21: TypeID(2v1) <- Get(r52)
0x401273:
   78 r16: TypeID(2v1) <- Get(r20)
0x401276:
   79 r45: TypeID(2v1) <- Void
   80 r45: TypeID(2v1) <- Concat { lo: r45, hi: r16 }
   81 r45: TypeID(2v1) <- Part { src: r45, offset: 0, size: 8 }
   82 r47: TypeID(2v1) <- SetReturnValue(r45)
   83 r47: TypeID(2v1) <- Control(Ret)


ssa pre-xform:
ssa program  84 instrs
.B0:    ;;  → Always(Return).
         r73: ? <- Ancestral(AncestralName("arg3"))
         r74: ? <- Part { src: r73, offset: 0, size: 8 }
         r80: ? <- Concat { lo: r79, hi: r74 }
         r81: ? <- Part { src: r80, offset: 0, size: 8 }
         r82: ? <- SetReturnValue(r81)


cfg:
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r73, r74, r79, r80, r81, r82]
  domtree:
    BlockID(0)

ssa post-xform:
ssa program  84 instrs
.B0:    ;;  → Always(Return).
         r73: ? <- Ancestral(AncestralName("arg3"))
         r81: ? <- Part { src: r73, offset: 0, size: 8 }
         r82: ? <- SetReturnValue(r81)



T0: {
  ;
  return pre:arg3[8 .. 0]
}
