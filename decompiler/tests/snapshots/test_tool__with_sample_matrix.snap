---
source: tests/test_tool.rs
expression: out
---
sum_matrix 0x4011c9+115 (file 0x11c9)
          4011c9: 55                      push rbp
          4011ca: 48 89 e5                mov rbp,rsp
          4011cd: 48 89 f8                mov rax,rdi
          4011d0: 48 89 f1                mov rcx,rsi
          4011d3: 48 89 c0                mov rax,rax
          4011d6: ba 00 00 00 00          mov edx,0
          4011db: 48 89 ca                mov rdx,rcx
          4011de: 48 89 45 e0             mov [rbp-20h],rax
          4011e2: 48 89 55 e8             mov [rbp-18h],rdx
          4011e6: c7 45 fc 00 00 00 00    mov dword ptr [rbp-4],0
          4011ed: c7 45 f8 00 00 00 00    mov dword ptr [rbp-8],0
          4011f4: eb 39                   jmp short 000000000040122Fh
          4011f6: c7 45 f4 00 00 00 00    mov dword ptr [rbp-0Ch],0
          4011fd: eb 24                   jmp short 0000000000401223h
          4011ff: 48 8b 55 e0             mov rdx,[rbp-20h]
          401203: 8b 45 ec                mov eax,[rbp-14h]
          401206: 0f af 45 f8             imul eax,[rbp-8]
          40120a: 89 c1                   mov ecx,eax
          40120c: 8b 45 f4                mov eax,[rbp-0Ch]
          40120f: 01 c8                   add eax,ecx
          401211: 48 98                   cdqe
          401213: 48 c1 e0 02             shl rax,2
          401217: 48 01 d0                add rax,rdx
          40121a: 8b 00                   mov eax,[rax]
          40121c: 01 45 fc                add [rbp-4],eax
          40121f: 83 45 f4 01             add dword ptr [rbp-0Ch],1
          401223: 8b 45 ec                mov eax,[rbp-14h]
          401226: 39 45 f4                cmp [rbp-0Ch],eax
          401229: 7c d4                   jl short 00000000004011FFh
          40122b: 83 45 f8 01             add dword ptr [rbp-8],1
          40122f: 8b 45 e8                mov eax,[rbp-18h]
          401232: 39 45 f8                cmp [rbp-8],eax
          401235: 7c bf                   jl short 00000000004011F6h
          401237: 8b 45 fc                mov eax,[rbp-4]
          40123a: 5d                      pop rbp
          40123b: c3                      ret

function type: 0x4011c9: [TypeID(13v1)]
mil program = 
program  198 instrs
    0 r12 <- #pre:stack_bottom
    1 r2 <- #pre:CF
    2 r3 <- #pre:PF
    3 r4 <- #pre:AF
    4 r5 <- #pre:ZF
    5 r6 <- #pre:SF
    6 r7 <- #pre:TF
    7 r8 <- #pre:IF
    8 r9 <- #pre:DF
    9 r10 <- #pre:OF
   10 r11 <- #pre:RBP
   11 r12 <- #pre:RSP
   12 r13 <- #pre:RIP
   13 r14 <- #pre:RDI
   14 r15 <- #pre:RSI
   15 r16 <- #pre:RAX
   16 r17 <- #pre:RBX
   17 r18 <- #pre:RCX
   18 r19 <- #pre:RDX
   19 r20 <- #pre:R8
   20 r21 <- #pre:R9
   21 r22 <- #pre:R10
   22 r23 <- #pre:R11
   23 r24 <- #pre:R12
   24 r25 <- #pre:R13
   25 r26 <- #pre:R14
   26 r27 <- #pre:R15
   27 r28 <- #pre:arg0
   28 r14 <- sget8    r28,0
   29 r15 <- sget8    r28,8
   30 r28 <- undef
   31 r29 <- undef
   32 r30 <- undef
   33 r31 <- undef
   34 r32 <- undef
   35 r33 <- undef
   36 r34 <- undef
0x4011c9:
   37 r12 <- addk     r12,-8 qword
   38 r29 <- store    *r12 ← r11
0x4011ca:
   39 r11 <- get      r12
0x4011cd:
   40 r16 <- get      r14
0x4011d0:
   41 r18 <- get      r15
0x4011d3:
   42 r16 <- get      r16
0x4011d6:
   43 r28 <- const4   0 (0x0)
   44 r19 <- v8.l4=   r19 ← r28
0x4011db:
   45 r19 <- get      r18
0x4011de:
   46 r29 <- const8   -32 (0xffffffffffffffe0)
   47 r29 <- add      r29,r11  qword
   48 r30 <- store    *r29 ← r16
0x4011e2:
   49 r29 <- const8   -24 (0xffffffffffffffe8)
   50 r29 <- add      r29,r11  qword
   51 r30 <- store    *r29 ← r19
0x4011e6:
   52 r28 <- const4   0 (0x0)
   53 r29 <- const8   -4 (0xfffffffffffffffc)
   54 r29 <- add      r29,r11  qword
   55 r30 <- store    *r29 ← r28
0x4011ed:
   56 r28 <- const4   0 (0x0)
   57 r29 <- const8   -8 (0xfffffffffffffff8)
   58 r29 <- add      r29,r11  qword
   59 r30 <- store    *r29 ← r28
0x4011f4:
   60 r28 <- jmp      172
0x4011f6:
   61 r28 <- const4   0 (0x0)
   62 r29 <- const8   -12 (0xfffffffffffffff4)
   63 r29 <- add      r29,r11  qword
   64 r30 <- store    *r29 ← r28
0x4011fd:
   65 r28 <- jmp      140
0x4011ff:
   66 r29 <- const8   -32 (0xffffffffffffffe0)
   67 r29 <- add      r29,r11  qword
   68 r28 <- loadm8   addr:r29
   69 r19 <- get      r28
0x401203:
   70 r29 <- const8   -20 (0xffffffffffffffec)
   71 r29 <- add      r29,r11  qword
   72 r28 <- loadm4   addr:r29
   73 r16 <- v8.l4=   r16 ← r28
0x401206:
   74 r28 <- TODO     unsupported: imul eax,[rbp-8]
0x40120a:
   75 r28 <- l4       r16
   76 r18 <- v8.l4=   r18 ← r28
0x40120c:
   77 r29 <- const8   -12 (0xfffffffffffffff4)
   78 r29 <- add      r29,r11  qword
   79 r28 <- loadm4   addr:r29
   80 r16 <- v8.l4=   r16 ← r28
0x40120f:
   81 r28 <- l4       r16
   82 r29 <- l4       r18
   83 r28 <- add      r28,r29  dword
   84 r16 <- v8.l4=   r16 ← r28
   85 r10 <- overflow r28
   86 r2 <- carry    r28
   87 r6 <- sign     r28
   88 r5 <- is0      r28
   89 r30 <- l1       r28
   90 r3 <- parity   r30
0x401211:
   91 r28 <- TODO     unsupported: cdqe
0x401213:
   92 r29 <- const1   2 (0x2)
   93 r29 <- widen    1->8 r29
   94 r16 <- shl      r16,r29  qword
   95 r16 <- get      r16
   96 r6 <- sign     r16
   97 r5 <- is0      r16
   98 r30 <- l1       r16
   99 r3 <- parity   r30
0x401217:
  100 r16 <- add      r16,r19  qword
  101 r16 <- get      r16
  102 r10 <- overflow r16
  103 r2 <- carry    r16
  104 r6 <- sign     r16
  105 r5 <- is0      r16
  106 r30 <- l1       r16
  107 r3 <- parity   r30
0x40121a:
  108 r29 <- const8   0 (0x0)
  109 r29 <- add      r29,r16  qword
  110 r28 <- loadm4   addr:r29
  111 r16 <- v8.l4=   r16 ← r28
0x40121c:
  112 r29 <- const8   -4 (0xfffffffffffffffc)
  113 r29 <- add      r29,r11  qword
  114 r28 <- loadm4   addr:r29
  115 r30 <- l4       r16
  116 r28 <- add      r28,r30  dword
  117 r31 <- const8   -4 (0xfffffffffffffffc)
  118 r31 <- add      r31,r11  qword
  119 r32 <- store    *r31 ← r28
  120 r10 <- overflow r28
  121 r2 <- carry    r28
  122 r6 <- sign     r28
  123 r5 <- is0      r28
  124 r33 <- l1       r28
  125 r3 <- parity   r33
0x40121f:
  126 r29 <- const8   -12 (0xfffffffffffffff4)
  127 r29 <- add      r29,r11  qword
  128 r28 <- loadm4   addr:r29
  129 r30 <- const4   1 (0x1)
  130 r28 <- add      r28,r30  dword
  131 r31 <- const8   -12 (0xfffffffffffffff4)
  132 r31 <- add      r31,r11  qword
  133 r32 <- store    *r31 ← r28
  134 r10 <- overflow r28
  135 r2 <- carry    r28
  136 r6 <- sign     r28
  137 r5 <- is0      r28
  138 r33 <- l1       r28
  139 r3 <- parity   r33
0x401223:
  140 r29 <- const8   -20 (0xffffffffffffffec)
  141 r29 <- add      r29,r11  qword
  142 r28 <- loadm4   addr:r29
  143 r16 <- v8.l4=   r16 ← r28
0x401226:
  144 r29 <- const8   -12 (0xfffffffffffffff4)
  145 r29 <- add      r29,r11  qword
  146 r28 <- loadm4   addr:r29
  147 r30 <- l4       r16
  148 r28 <- sub      r28,r30  dword
  149 r10 <- overflow r28
  150 r2 <- carry    r28
  151 r6 <- sign     r28
  152 r5 <- is0      r28
  153 r31 <- l1       r28
  154 r3 <- parity   r31
0x401229:
  155 r28 <- ==       r6,r10
  156 r28 <- not      r28
  157 r29 <- jmp.if   r28,66
0x40122b:
  158 r29 <- const8   -8 (0xfffffffffffffff8)
  159 r29 <- add      r29,r11  qword
  160 r28 <- loadm4   addr:r29
  161 r30 <- const4   1 (0x1)
  162 r28 <- add      r28,r30  dword
  163 r31 <- const8   -8 (0xfffffffffffffff8)
  164 r31 <- add      r31,r11  qword
  165 r32 <- store    *r31 ← r28
  166 r10 <- overflow r28
  167 r2 <- carry    r28
  168 r6 <- sign     r28
  169 r5 <- is0      r28
  170 r33 <- l1       r28
  171 r3 <- parity   r33
0x40122f:
  172 r29 <- const8   -24 (0xffffffffffffffe8)
  173 r29 <- add      r29,r11  qword
  174 r28 <- loadm4   addr:r29
  175 r16 <- v8.l4=   r16 ← r28
0x401232:
  176 r29 <- const8   -8 (0xfffffffffffffff8)
  177 r29 <- add      r29,r11  qword
  178 r28 <- loadm4   addr:r29
  179 r30 <- l4       r16
  180 r28 <- sub      r28,r30  dword
  181 r10 <- overflow r28
  182 r2 <- carry    r28
  183 r6 <- sign     r28
  184 r5 <- is0      r28
  185 r31 <- l1       r28
  186 r3 <- parity   r31
0x401235:
  187 r28 <- ==       r6,r10
  188 r28 <- not      r28
  189 r29 <- jmp.if   r28,61
0x401237:
  190 r29 <- const8   -4 (0xfffffffffffffffc)
  191 r29 <- add      r29,r11  qword
  192 r28 <- loadm4   addr:r29
  193 r16 <- v8.l4=   r16 ← r28
0x40123a:
  194 r28 <- loadm8   addr:r12
  195 r11 <- get      r28
  196 r12 <- addk     r12,8 qword
0x40123b:
  197 r28 <- ret      r16


ssa pre-xform:
ssa program  113 instrs
.B0:    ;;  addr:0x0; 61 insn 0 phis
         r10 <- #pre:RBP
         r11 <- #pre:RSP
  (  2)  r27 <- #pre:arg0
  (  2)  r28 <- sget8    r27,0
  (  2)  r29 <- sget8    r27,8
  ( 20)  r37 <- addk     r11,-8 qword
         r38 <- store    *r37 ← r10
         r46 <- const8   -32 (0xffffffffffffffe0)
         r47 <- add      r46,r37  qword
         r48 <- store    *r47 ← r28
         r49 <- const8   -24 (0xffffffffffffffe8)
         r50 <- add      r49,r37  qword
         r51 <- store    *r50 ← r29
         r52 <- const4   0 (0x0)
         r53 <- const8   -4 (0xfffffffffffffffc)
         r54 <- add      r53,r37  qword
         r55 <- store    *r54 ← r52
         r56 <- const4   0 (0x0)
         r57 <- const8   -8 (0xfffffffffffffff8)
         r58 <- add      r57,r37  qword
         r59 <- store    *r58 ← r56
         r60 <- jmp      172
.B5:    ;;  preds:B0,B4  addr:0x40122f; 18 insn 1 phis
                  ɸ  B0     B4     
           r201   <- r28    r143   
         r172 <- const8   -24 (0xffffffffffffffe8)
         r173 <- add      r172,r37  qword
         r174 <- loadm4   addr:r173
  (  3)  r175 <- v8.l4=   r201 ← r174
         r176 <- const8   -8 (0xfffffffffffffff8)
         r177 <- add      r176,r37  qword
         r178 <- loadm4   addr:r177
         r179 <- l4       r175
  (  2)  r180 <- sub      r178,r179  dword
         r181 <- overflow r180
         r183 <- sign     r180
         r187 <- ==       r183,r181
         r188 <- not      r187
         r189 <- jmp.if   r188,61
.B1:    ;;  preds:B5  addr:0x4011f6; 5 insn 0 phis
         r61 <- const4   0 (0x0)
         r62 <- const8   -12 (0xfffffffffffffff4)
         r63 <- add      r62,r37  qword
         r64 <- store    *r63 ← r61
         r65 <- jmp      140
.B3:    ;;  preds:B1,B2  addr:0x401223; 18 insn 1 phis
                  ɸ  B1     B2     
           r198   <- r175   r111   
         r140 <- const8   -20 (0xffffffffffffffec)
         r141 <- add      r140,r37  qword
         r142 <- loadm4   addr:r141
  (  3)  r143 <- v8.l4=   r198 ← r142
         r144 <- const8   -12 (0xfffffffffffffff4)
         r145 <- add      r144,r37  qword
         r146 <- loadm4   addr:r145
         r147 <- l4       r143
  (  2)  r148 <- sub      r146,r147  dword
         r149 <- overflow r148
         r151 <- sign     r148
         r155 <- ==       r151,r149
         r156 <- not      r155
         r157 <- jmp.if   r156,66
.B2:    ;;  preds:B3  addr:0x4011ff; 74 insn 0 phis
         r66 <- const8   -32 (0xffffffffffffffe0)
         r67 <- add      r66,r37  qword
  (  2)  r68 <- loadm8   addr:r67
         r70 <- const8   -20 (0xffffffffffffffec)
         r71 <- add      r70,r37  qword
         r72 <- loadm4   addr:r71
  (  3)  r73 <- v8.l4=   r143 ← r72
         r74 <- TODO     unsupported: imul eax,[rbp-8]
         r75 <- l4       r73
         r76 <- v8.l4=   r29 ← r75
         r77 <- const8   -12 (0xfffffffffffffff4)
         r78 <- add      r77,r37  qword
  (  2)  r79 <- loadm4   addr:r78
  (  2)  r80 <- v8.l4=   r73 ← r79
         r81 <- l4       r80
         r82 <- l4       r76
         r83 <- add      r81,r82  dword
         r84 <- v8.l4=   r80 ← r83
         r91 <- TODO     unsupported: cdqe
         r92 <- const1   2 (0x2)
         r93 <- widen    1->8 r92
  (  2)  r94 <- shl      r84,r93  qword
  (  2)  r100 <- add      r94,r68  qword
         r108 <- const8   0 (0x0)
         r109 <- add      r108,r100  qword
         r110 <- loadm4   addr:r109
  (  2)  r111 <- v8.l4=   r100 ← r110
         r112 <- const8   -4 (0xfffffffffffffffc)
         r113 <- add      r112,r37  qword
         r114 <- loadm4   addr:r113
         r115 <- l4       r111
         r116 <- add      r114,r115  dword
         r117 <- const8   -4 (0xfffffffffffffffc)
         r118 <- add      r117,r37  qword
         r119 <- store    *r118 ← r116
         r126 <- const8   -12 (0xfffffffffffffff4)
         r127 <- add      r126,r37  qword
         r128 <- loadm4   addr:r127
         r129 <- const4   1 (0x1)
         r130 <- add      r128,r129  dword
         r131 <- const8   -12 (0xfffffffffffffff4)
         r132 <- add      r131,r37  qword
         r133 <- store    *r132 ← r130
.B4:    ;;  preds:B3  addr:0x40122b; 14 insn 0 phis
         r158 <- const8   -8 (0xfffffffffffffff8)
         r159 <- add      r158,r37  qword
         r160 <- loadm4   addr:r159
         r161 <- const4   1 (0x1)
         r162 <- add      r160,r161  dword
         r163 <- const8   -8 (0xfffffffffffffff8)
         r164 <- add      r163,r37  qword
         r165 <- store    *r164 ← r162
.B6:    ;;  preds:B5  addr:0x401237; 8 insn 0 phis
         r190 <- const8   -4 (0xfffffffffffffffc)
         r191 <- add      r190,r37  qword
         r192 <- loadm4   addr:r191
         r193 <- v8.l4=   r175 ← r192
         r197 <- ret      r193


ssa post-xform:
ssa program  81 instrs
.B0:    ;;  addr:0x0; 61 insn 0 phis
         r10 <- #pre:RBP
  ( 20)  r11 <- #pre:RSP
  (  2)  r27 <- #pre:arg0
  (  2)  r28 <- sget8    r27,0
         r29 <- sget8    r27,8
         r37 <- addk     r11,-8 qword
         r38 <- store    *r37 ← r10
         r47 <- addk     r11,-40 qword
         r48 <- store    *r47 ← r28
         r50 <- addk     r11,-32 qword
         r51 <- store    *r50 ← r29
         r52 <- const4   0 (0x0)
         r54 <- addk     r11,-12 qword
         r55 <- store    *r54 ← r52
         r56 <- const4   0 (0x0)
         r58 <- addk     r11,-16 qword
         r59 <- store    *r58 ← r56
         r60 <- jmp      172
.B5:    ;;  preds:B0,B4  addr:0x40122f; 18 insn 1 phis
                  ɸ  B0     B4     
  (  2)    r201   <- r28    r143   
         r173 <- addk     r11,-32 qword
  (  2)  r174 <- loadm4   addr:r173
         r175 <- v8.l4=   r201 ← r174
         r177 <- addk     r11,-16 qword
         r178 <- loadm4   addr:r177
  (  2)  r180 <- sub      r178,r174  dword
         r181 <- overflow r180
         r183 <- sign     r180
         r187 <- ==       r183,r181
         r188 <- not      r187
         r189 <- jmp.if   r188,61
.B1:    ;;  preds:B5  addr:0x4011f6; 5 insn 0 phis
         r61 <- const4   0 (0x0)
         r63 <- addk     r11,-20 qword
         r64 <- store    *r63 ← r61
         r65 <- jmp      140
.B3:    ;;  preds:B1,B2  addr:0x401223; 18 insn 1 phis
                  ɸ  B1     B2     
  (  2)    r198   <- r175   r111   
         r141 <- addk     r11,-28 qword
  (  2)  r142 <- loadm4   addr:r141
         r143 <- v8.l4=   r198 ← r142
         r145 <- addk     r11,-20 qword
         r146 <- loadm4   addr:r145
  (  2)  r148 <- sub      r146,r142  dword
         r149 <- overflow r148
         r151 <- sign     r148
         r155 <- ==       r151,r149
         r156 <- not      r155
         r157 <- jmp.if   r156,66
.B2:    ;;  preds:B3  addr:0x4011ff; 74 insn 0 phis
         r67 <- addk     r11,-40 qword
  (  2)  r68 <- loadm8   addr:r67
         r71 <- addk     r11,-28 qword
         r72 <- loadm4   addr:r71
         r74 <- TODO     unsupported: imul eax,[rbp-8]
         r78 <- addk     r11,-20 qword
         r79 <- loadm4   addr:r78
         r83 <- add      r79,r72  dword
         r84 <- v8.l4=   r198 ← r83
         r91 <- TODO     unsupported: cdqe
         r92 <- const1   2 (0x2)
         r93 <- widen    1->8 r92
  (  2)  r94 <- shl      r84,r93  qword
  (  2)  r100 <- add      r94,r68  qword
  (  2)  r110 <- loadm4   addr:r100
         r111 <- v8.l4=   r100 ← r110
         r113 <- addk     r11,-12 qword
         r114 <- loadm4   addr:r113
         r116 <- add      r114,r110  dword
         r118 <- addk     r11,-12 qword
         r119 <- store    *r118 ← r116
         r127 <- addk     r11,-20 qword
         r128 <- loadm4   addr:r127
         r130 <- addk     r128,1 qword
         r132 <- addk     r11,-20 qword
         r133 <- store    *r132 ← r130
.B4:    ;;  preds:B3  addr:0x40122b; 14 insn 0 phis
         r159 <- addk     r11,-16 qword
         r160 <- loadm4   addr:r159
         r162 <- addk     r160,1 qword
         r164 <- addk     r11,-16 qword
         r165 <- store    *r164 ← r162
.B6:    ;;  preds:B5  addr:0x401237; 8 insn 0 phis
         r191 <- addk     r11,-12 qword
         r192 <- loadm4   addr:r191
         r193 <- v8.l4=   r201 ← r192
         r197 <- ret      r193


T0(): {
  let r28 = StructGet8[0](pre:arg0);
  [pre:RSP + -8] = pre:RBP;
  [pre:RSP + -40] = r28;
  [pre:RSP + -32] = StructGet8[8](pre:arg0);
  [pre:RSP + -12] = 0x0 /* 0 */;
  [pre:RSP + -16] = 0x0 /* 0 */;
  goto T5 (
    r201 = r28
  )
  
  T5(r201): {
    let r180 = [pre:RSP + -16]:4 - [pre:RSP + -32]:4;
    if !(EQ(SignOf(r180), OverflowOf(r180))) {
      [pre:RSP + -20] = 0x0 /* 0 */;
      goto T3 (
        r198 = V8WithL4(r201, [pre:RSP + -32]:4)
      )
      
      T3(r198): {
        let r148 = [pre:RSP + -20]:4 - [pre:RSP + -28]:4;
        if !(EQ(SignOf(r148), OverflowOf(r148))) {
          TODO /* unsupported: imul eax,[rbp-8] */;
          TODO /* unsupported: cdqe */;
          let r94 = V8WithL4(r198, [pre:RSP + -20]:4 + [pre:RSP + -28]:4) / Widen1_8(0x2 /* 2 */);
          let r100 = r94 + [pre:RSP + -40]:8;
          [pre:RSP + -12] = [pre:RSP + -12]:4 + [r100]:4;
          [pre:RSP + -20] = [pre:RSP + -20]:4 + 1;
          loop T3 (
            r198 = V8WithL4(r100, [r100]:4)
          )
        
        }
        [pre:RSP + -16] = [pre:RSP + -16]:4 + 1;
        loop T5 (
          r201 = V8WithL4(r198, [pre:RSP + -28]:4)
        )
      }
    
    }
    Ret(V8WithL4(r201, [pre:RSP + -12]:4));
  }
}
