---
source: decompiler/tests/test_tool.rs
expression: out
---
 --- mil
program  67 instrs
    0 r12: UnknownUnsized <- Ancestral(AncestralName("stack_bottom"))
    1 r2: UnknownUnsized <- Ancestral(AncestralName("CF"))
    2 r3: UnknownUnsized <- Ancestral(AncestralName("PF"))
    3 r4: UnknownUnsized <- Ancestral(AncestralName("AF"))
    4 r5: UnknownUnsized <- Ancestral(AncestralName("ZF"))
    5 r6: UnknownUnsized <- Ancestral(AncestralName("SF"))
    6 r7: UnknownUnsized <- Ancestral(AncestralName("TF"))
    7 r8: UnknownUnsized <- Ancestral(AncestralName("IF"))
    8 r9: UnknownUnsized <- Ancestral(AncestralName("DF"))
    9 r10: UnknownUnsized <- Ancestral(AncestralName("OF"))
   10 r11: UnknownUnsized <- Ancestral(AncestralName("RBP"))
   11 r12: UnknownUnsized <- Ancestral(AncestralName("RSP"))
   12 r13: UnknownUnsized <- Ancestral(AncestralName("RIP"))
   13 r14: UnknownUnsized <- Ancestral(AncestralName("RDI"))
   14 r15: UnknownUnsized <- Ancestral(AncestralName("RSI"))
   15 r16: UnknownUnsized <- Ancestral(AncestralName("RAX"))
   16 r17: UnknownUnsized <- Ancestral(AncestralName("RBX"))
   17 r18: UnknownUnsized <- Ancestral(AncestralName("RCX"))
   18 r19: UnknownUnsized <- Ancestral(AncestralName("RDX"))
   19 r20: UnknownUnsized <- Ancestral(AncestralName("R8"))
   20 r21: UnknownUnsized <- Ancestral(AncestralName("R9"))
   21 r22: UnknownUnsized <- Ancestral(AncestralName("R10"))
   22 r23: UnknownUnsized <- Ancestral(AncestralName("R11"))
   23 r24: UnknownUnsized <- Ancestral(AncestralName("R12"))
   24 r25: UnknownUnsized <- Ancestral(AncestralName("R13"))
   25 r26: UnknownUnsized <- Ancestral(AncestralName("R14"))
   26 r27: UnknownUnsized <- Ancestral(AncestralName("R15"))
   27 r28: UnknownUnsized <- Ancestral(AncestralName("ZMM0"))
   28 r29: UnknownUnsized <- Ancestral(AncestralName("ZMM1"))
   29 r30: UnknownUnsized <- Ancestral(AncestralName("ZMM2"))
   30 r31: UnknownUnsized <- Ancestral(AncestralName("ZMM3"))
   31 r32: UnknownUnsized <- Ancestral(AncestralName("ZMM4"))
   32 r33: UnknownUnsized <- Ancestral(AncestralName("ZMM5"))
   33 r34: UnknownUnsized <- Ancestral(AncestralName("ZMM6"))
   34 r35: UnknownUnsized <- Ancestral(AncestralName("ZMM7"))
   35 r36: UnknownUnsized <- Ancestral(AncestralName("ZMM8"))
   36 r37: UnknownUnsized <- Ancestral(AncestralName("ZMM9"))
   37 r38: UnknownUnsized <- Ancestral(AncestralName("ZMM10"))
   38 r39: UnknownUnsized <- Ancestral(AncestralName("ZMM11"))
   39 r40: UnknownUnsized <- Ancestral(AncestralName("ZMM12"))
   40 r41: UnknownUnsized <- Ancestral(AncestralName("ZMM13"))
   41 r42: UnknownUnsized <- Ancestral(AncestralName("ZMM14"))
   42 r43: UnknownUnsized <- Ancestral(AncestralName("ZMM15"))
   43 r45: UnknownUnsized <- Ancestral(AncestralName("arg0"))
   44 r46: UnknownUnsized <- Part { src: r45, offset: 0, size: 8 }
   45 r14: UnknownUnsized <- Get(r46)
   46 r47: UnknownUnsized <- Part { src: r45, offset: 8, size: 8 }
   47 r15: UnknownUnsized <- Get(r47)
   48 r48: UnknownUnsized <- Ancestral(AncestralName("arg1"))
   49 r49: UnknownUnsized <- Part { src: r48, offset: 0, size: 8 }
   50 r19: UnknownUnsized <- Get(r49)
   51 r50: UnknownUnsized <- Part { src: r48, offset: 8, size: 8 }
   52 r18: UnknownUnsized <- Get(r50)
0x40119c:
   53 r16: UnknownUnsized <- Get(r18)
0x40119f:
   54 r46: UnknownUnsized <- Const { value: 32, size: 1 }
   55 r46: UnknownUnsized <- Widen { reg: r46, target_size: 8, sign: false }
   56 r16: UnknownUnsized <- Arith(Shr, r16, r46)
   57 r16: UnknownUnsized <- Get(r16)
   58 r6: UnknownUnsized <- SignOf(r16)
   59 r5: UnknownUnsized <- IsZero(r16)
   60 r47: UnknownUnsized <- Part { src: r16, offset: 0, size: 1 }
   61 r3: UnknownUnsized <- Parity(r47)
0x4011a3:
   62 r45: UnknownUnsized <- Void
   63 r45: UnknownUnsized <- Concat { lo: r45, hi: r16 }
   64 r45: UnknownUnsized <- Part { src: r45, offset: 0, size: 1 }
   65 r47: UnknownUnsized <- SetReturnValue(r45)
   66 r47: UnknownUnsized <- Control(Ret)


 --- ssa pre-xform
ssa program  67 instrs
.B0:    ;;  → Always(Return).
         r48: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg1"))
         r51: unknown <UnknownUnsized> <- Part { src: r48, offset: 8, size: 8 }
         r54: unknown <UnknownUnsized> <- Const { value: 32, size: 1 }
         r55: unknown <UnknownUnsized> <- Widen { reg: r54, target_size: 8, sign: false }
         r56: unknown <UnknownUnsized> <- Arith(Shr, r51, r55)
         r63: unknown <UnknownUnsized> <- Concat { lo: r62, hi: r56 }
         r64: unknown <UnknownUnsized> <- Part { src: r63, offset: 0, size: 1 }
         r65: unknown <UnknownUnsized> <- SetReturnValue(r64)


 --- cfg
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r48, r51, r54, r55, r56, r64, r65]
  domtree:
    BlockID(0)

 --- ssa
ssa program  67 instrs
.B0:    ;;  → Always(Return).
         r48: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg1"))
         r51: unknown <UnknownUnsized> <- Part { src: r48, offset: 8, size: 8 }
         r54: unknown <UnknownUnsized> <- Const { value: 32, size: 1 }
         r55: unknown <UnknownUnsized> <- Widen { reg: r54, target_size: 8, sign: false }
         r56: unknown <UnknownUnsized> <- Arith(Shr, r51, r55)
         r64: unknown <UnknownUnsized> <- Part { src: r56, offset: 0, size: 1 }
         r65: unknown <UnknownUnsized> <- SetReturnValue(r64)


 --- ast

T0: {
  ;
  return (pre:arg1[16 .. 8] >> 32 as u64)[1 .. 0]
}
