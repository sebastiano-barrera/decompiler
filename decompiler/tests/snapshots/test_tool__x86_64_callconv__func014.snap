---
source: decompiler/tests/test_tool.rs
expression: out
---
 --- mil
program  91 instrs
    0 r12: UnknownUnsized <- Ancestral(AncestralName("stack_bottom"))
    1 r2: UnknownUnsized <- Ancestral(AncestralName("CF"))
    2 r3: UnknownUnsized <- Ancestral(AncestralName("PF"))
    3 r4: UnknownUnsized <- Ancestral(AncestralName("AF"))
    4 r5: UnknownUnsized <- Ancestral(AncestralName("ZF"))
    5 r6: UnknownUnsized <- Ancestral(AncestralName("SF"))
    6 r7: UnknownUnsized <- Ancestral(AncestralName("TF"))
    7 r8: UnknownUnsized <- Ancestral(AncestralName("IF"))
    8 r9: UnknownUnsized <- Ancestral(AncestralName("DF"))
    9 r10: UnknownUnsized <- Ancestral(AncestralName("OF"))
   10 r11: UnknownUnsized <- Ancestral(AncestralName("RBP"))
   11 r12: UnknownUnsized <- Ancestral(AncestralName("RSP"))
   12 r13: UnknownUnsized <- Ancestral(AncestralName("RIP"))
   13 r14: UnknownUnsized <- Ancestral(AncestralName("RDI"))
   14 r15: UnknownUnsized <- Ancestral(AncestralName("RSI"))
   15 r16: UnknownUnsized <- Ancestral(AncestralName("RAX"))
   16 r17: UnknownUnsized <- Ancestral(AncestralName("RBX"))
   17 r18: UnknownUnsized <- Ancestral(AncestralName("RCX"))
   18 r19: UnknownUnsized <- Ancestral(AncestralName("RDX"))
   19 r20: UnknownUnsized <- Ancestral(AncestralName("R8"))
   20 r21: UnknownUnsized <- Ancestral(AncestralName("R9"))
   21 r22: UnknownUnsized <- Ancestral(AncestralName("R10"))
   22 r23: UnknownUnsized <- Ancestral(AncestralName("R11"))
   23 r24: UnknownUnsized <- Ancestral(AncestralName("R12"))
   24 r25: UnknownUnsized <- Ancestral(AncestralName("R13"))
   25 r26: UnknownUnsized <- Ancestral(AncestralName("R14"))
   26 r27: UnknownUnsized <- Ancestral(AncestralName("R15"))
   27 r28: UnknownUnsized <- Ancestral(AncestralName("ZMM0"))
   28 r29: UnknownUnsized <- Ancestral(AncestralName("ZMM1"))
   29 r30: UnknownUnsized <- Ancestral(AncestralName("ZMM2"))
   30 r31: UnknownUnsized <- Ancestral(AncestralName("ZMM3"))
   31 r32: UnknownUnsized <- Ancestral(AncestralName("ZMM4"))
   32 r33: UnknownUnsized <- Ancestral(AncestralName("ZMM5"))
   33 r34: UnknownUnsized <- Ancestral(AncestralName("ZMM6"))
   34 r35: UnknownUnsized <- Ancestral(AncestralName("ZMM7"))
   35 r36: UnknownUnsized <- Ancestral(AncestralName("ZMM8"))
   36 r37: UnknownUnsized <- Ancestral(AncestralName("ZMM9"))
   37 r38: UnknownUnsized <- Ancestral(AncestralName("ZMM10"))
   38 r39: UnknownUnsized <- Ancestral(AncestralName("ZMM11"))
   39 r40: UnknownUnsized <- Ancestral(AncestralName("ZMM12"))
   40 r41: UnknownUnsized <- Ancestral(AncestralName("ZMM13"))
   41 r42: UnknownUnsized <- Ancestral(AncestralName("ZMM14"))
   42 r43: UnknownUnsized <- Ancestral(AncestralName("ZMM15"))
   43 r45: UnknownUnsized <- Ancestral(AncestralName("arg0"))
   44 r47: UnknownUnsized <- Part { src: r45, offset: 0, size: 8 }
   45 r46: UnknownUnsized <- ArithK(Add, r12, 8)
   46 r46: UnknownUnsized <- StoreMem { addr: r46, value: r47 }
   47 r47: UnknownUnsized <- Part { src: r45, offset: 8, size: 8 }
   48 r46: UnknownUnsized <- ArithK(Add, r12, 16)
   49 r46: UnknownUnsized <- StoreMem { addr: r46, value: r47 }
   50 r47: UnknownUnsized <- Part { src: r45, offset: 16, size: 8 }
   51 r46: UnknownUnsized <- ArithK(Add, r12, 24)
   52 r46: UnknownUnsized <- StoreMem { addr: r46, value: r47 }
   53 r47: UnknownUnsized <- Part { src: r45, offset: 24, size: 8 }
   54 r46: UnknownUnsized <- ArithK(Add, r12, 32)
   55 r46: UnknownUnsized <- StoreMem { addr: r46, value: r47 }
0x40113c:
   56 r16: UnknownUnsized <- Get(r14)
0x40113f:
   57 r46: UnknownUnsized <- Const { value: 8, size: 8 }
   58 r46: UnknownUnsized <- Arith(Add, r46, r12)
   59 r45: UnknownUnsized <- LoadMem { addr: r46, size: 16 }
   60 r47: UnknownUnsized <- Part { src: r28, offset: 16, size: 48 }
   61 r28: UnknownUnsized <- Concat { lo: r45, hi: r47 }
0x401144:
   62 r46: UnknownUnsized <- Const { value: 24, size: 8 }
   63 r46: UnknownUnsized <- Arith(Add, r46, r12)
   64 r45: UnknownUnsized <- LoadMem { addr: r46, size: 16 }
   65 r47: UnknownUnsized <- Part { src: r29, offset: 16, size: 48 }
   66 r29: UnknownUnsized <- Concat { lo: r45, hi: r47 }
0x401149:
   67 r46: UnknownUnsized <- Part { src: r29, offset: 0, size: 16 }
   68 r47: UnknownUnsized <- Const { value: 16, size: 8 }
   69 r47: UnknownUnsized <- Arith(Add, r47, r14)
   70 r47: UnknownUnsized <- StoreMem { addr: r47, value: r46 }
0x40114d:
   71 r46: UnknownUnsized <- Part { src: r28, offset: 0, size: 16 }
   72 r47: UnknownUnsized <- Const { value: 0, size: 8 }
   73 r47: UnknownUnsized <- Arith(Add, r47, r14)
   74 r47: UnknownUnsized <- StoreMem { addr: r47, value: r46 }
0x401150:
   75 r45: UnknownUnsized <- Void
   76 r47: UnknownUnsized <- ArithK(Add, r16, 0)
   77 r48: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
   78 r45: UnknownUnsized <- Concat { lo: r45, hi: r48 }
   79 r47: UnknownUnsized <- ArithK(Add, r16, 8)
   80 r49: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
   81 r45: UnknownUnsized <- Concat { lo: r45, hi: r49 }
   82 r47: UnknownUnsized <- ArithK(Add, r16, 16)
   83 r50: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
   84 r45: UnknownUnsized <- Concat { lo: r45, hi: r50 }
   85 r47: UnknownUnsized <- ArithK(Add, r16, 24)
   86 r51: UnknownUnsized <- LoadMem { addr: r47, size: 8 }
   87 r45: UnknownUnsized <- Concat { lo: r45, hi: r51 }
   88 r45: UnknownUnsized <- Part { src: r45, offset: 0, size: 32 }
   89 r52: UnknownUnsized <- SetReturnValue(r45)
   90 r52: UnknownUnsized <- Control(Ret)


 --- ssa pre-xform
ssa program  91 instrs
.B0:    ;;  → Always(Return).
  (  6)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  6)  r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
         r27: unknown <UnknownUnsized> <- Ancestral(AncestralName("ZMM0"))
         r28: unknown <UnknownUnsized> <- Ancestral(AncestralName("ZMM1"))
  (  4)  r43: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg0"))
         r44: unknown <UnknownUnsized> <- Part { src: r43, offset: 0, size: 8 }
         r45: unknown <UnknownUnsized> <- ArithK(Add, r11, 8)
         r46: unknown <UnknownUnsized> <- StoreMem { addr: r45, value: r44 }
         r47: unknown <UnknownUnsized> <- Part { src: r43, offset: 8, size: 8 }
         r48: unknown <UnknownUnsized> <- ArithK(Add, r11, 16)
         r49: unknown <UnknownUnsized> <- StoreMem { addr: r48, value: r47 }
         r50: unknown <UnknownUnsized> <- Part { src: r43, offset: 16, size: 8 }
         r51: unknown <UnknownUnsized> <- ArithK(Add, r11, 24)
         r52: unknown <UnknownUnsized> <- StoreMem { addr: r51, value: r50 }
         r53: unknown <UnknownUnsized> <- Part { src: r43, offset: 24, size: 8 }
         r54: unknown <UnknownUnsized> <- ArithK(Add, r11, 32)
         r55: unknown <UnknownUnsized> <- StoreMem { addr: r54, value: r53 }
         r57: unknown <UnknownUnsized> <- Const { value: 8, size: 8 }
         r58: unknown <UnknownUnsized> <- Arith(Add, r57, r11)
         r59: unknown <UnknownUnsized> <- LoadMem { addr: r58, size: 16 }
         r60: unknown <UnknownUnsized> <- Part { src: r27, offset: 16, size: 48 }
         r61: unknown <UnknownUnsized> <- Concat { lo: r59, hi: r60 }
         r62: unknown <UnknownUnsized> <- Const { value: 24, size: 8 }
         r63: unknown <UnknownUnsized> <- Arith(Add, r62, r11)
         r64: unknown <UnknownUnsized> <- LoadMem { addr: r63, size: 16 }
         r65: unknown <UnknownUnsized> <- Part { src: r28, offset: 16, size: 48 }
         r66: unknown <UnknownUnsized> <- Concat { lo: r64, hi: r65 }
         r67: unknown <UnknownUnsized> <- Part { src: r66, offset: 0, size: 16 }
         r68: unknown <UnknownUnsized> <- Const { value: 16, size: 8 }
         r69: unknown <UnknownUnsized> <- Arith(Add, r68, r13)
         r70: unknown <UnknownUnsized> <- StoreMem { addr: r69, value: r67 }
         r71: unknown <UnknownUnsized> <- Part { src: r61, offset: 0, size: 16 }
         r72: unknown <UnknownUnsized> <- Const { value: 0, size: 8 }
         r73: unknown <UnknownUnsized> <- Arith(Add, r72, r13)
         r74: unknown <UnknownUnsized> <- StoreMem { addr: r73, value: r71 }
         r76: unknown <UnknownUnsized> <- ArithK(Add, r13, 0)
         r77: unknown <UnknownUnsized> <- LoadMem { addr: r76, size: 8 }
         r78: unknown <UnknownUnsized> <- Concat { lo: r75, hi: r77 }
         r79: unknown <UnknownUnsized> <- ArithK(Add, r13, 8)
         r80: unknown <UnknownUnsized> <- LoadMem { addr: r79, size: 8 }
         r81: unknown <UnknownUnsized> <- Concat { lo: r78, hi: r80 }
         r82: unknown <UnknownUnsized> <- ArithK(Add, r13, 16)
         r83: unknown <UnknownUnsized> <- LoadMem { addr: r82, size: 8 }
         r84: unknown <UnknownUnsized> <- Concat { lo: r81, hi: r83 }
         r85: unknown <UnknownUnsized> <- ArithK(Add, r13, 24)
         r86: unknown <UnknownUnsized> <- LoadMem { addr: r85, size: 8 }
         r87: unknown <UnknownUnsized> <- Concat { lo: r84, hi: r86 }
         r88: unknown <UnknownUnsized> <- Part { src: r87, offset: 0, size: 32 }
         r89: unknown <UnknownUnsized> <- SetReturnValue(r88)


 --- cfg
  entry: BlockID(0)
  BlockID(0) -> Always(Return) [r11, r13, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r102, r107, r92, r95, r97, r100, r69, r70, r74, r77, r79, r80, r81, r82, r83, r84, r85, r86, r87, r89]
  domtree:
    BlockID(0)

 --- ssa
ssa program  111 instrs
.B0:    ;;  → Always(Return).
  (  4)  r11: unknown <UnknownUnsized> <- Ancestral(AncestralName("RSP"))
  (  6)  r13: unknown <UnknownUnsized> <- Ancestral(AncestralName("RDI"))
  (  8)  r43: unknown <UnknownUnsized> <- Ancestral(AncestralName("arg0"))
         r44: unknown <UnknownUnsized> <- Part { src: r43, offset: 0, size: 8 }
         r45: unknown <UnknownUnsized> <- ArithK(Add, r11, 8)
         r46: unknown <UnknownUnsized> <- StoreMem { addr: r45, value: r44 }
         r47: unknown <UnknownUnsized> <- Part { src: r43, offset: 8, size: 8 }
         r48: unknown <UnknownUnsized> <- ArithK(Add, r11, 16)
         r49: unknown <UnknownUnsized> <- StoreMem { addr: r48, value: r47 }
         r50: unknown <UnknownUnsized> <- Part { src: r43, offset: 16, size: 8 }
         r51: unknown <UnknownUnsized> <- ArithK(Add, r11, 24)
         r52: unknown <UnknownUnsized> <- StoreMem { addr: r51, value: r50 }
         r53: unknown <UnknownUnsized> <- Part { src: r43, offset: 24, size: 8 }
         r54: unknown <UnknownUnsized> <- ArithK(Add, r11, 32)
         r55: unknown <UnknownUnsized> <- StoreMem { addr: r54, value: r53 }
         r102: unknown <UnknownUnsized> <- Part { src: r43, offset: 0, size: 8 }
         r107: unknown <UnknownUnsized> <- Part { src: r43, offset: 16, size: 8 }
         r92: unknown <UnknownUnsized> <- Part { src: r43, offset: 8, size: 8 }
         r95: unknown <UnknownUnsized> <- Concat { lo: r92, hi: r102 }
         r97: unknown <UnknownUnsized> <- Part { src: r43, offset: 24, size: 8 }
         r100: unknown <UnknownUnsized> <- Concat { lo: r97, hi: r107 }
         r69: unknown <UnknownUnsized> <- ArithK(Add, r13, 16)
         r70: unknown <UnknownUnsized> <- StoreMem { addr: r69, value: r100 }
         r74: unknown <UnknownUnsized> <- StoreMem { addr: r13, value: r95 }
         r77: unknown <UnknownUnsized> <- LoadMem { addr: r13, size: 8 }
         r79: unknown <UnknownUnsized> <- ArithK(Add, r13, 8)
         r80: unknown <UnknownUnsized> <- LoadMem { addr: r79, size: 8 }
         r81: unknown <UnknownUnsized> <- Concat { lo: r77, hi: r80 }
         r82: unknown <UnknownUnsized> <- ArithK(Add, r13, 16)
         r83: unknown <UnknownUnsized> <- LoadMem { addr: r82, size: 8 }
         r84: unknown <UnknownUnsized> <- Concat { lo: r81, hi: r83 }
         r85: unknown <UnknownUnsized> <- ArithK(Add, r13, 24)
         r86: unknown <UnknownUnsized> <- LoadMem { addr: r85, size: 8 }
         r87: unknown <UnknownUnsized> <- Concat { lo: r84, hi: r86 }
         r89: unknown <UnknownUnsized> <- SetReturnValue(r87)


 --- ast

T0: {
  [pre:RSP + 8]:* := pre:arg0[8 .. 0];
  [pre:RSP + 16]:* := pre:arg0[16 .. 8];
  [pre:RSP + 24]:* := pre:arg0[24 .. 16];
  [pre:RSP + 32]:* := pre:arg0[32 .. 24];
  [pre:RDI + 16]:* := pre:arg0[24 .. 16] ++ pre:arg0[32 .. 24];
  [pre:RDI]:* := pre:arg0[8 .. 0] ++ pre:arg0[16 .. 8];
  ;
  return [pre:RDI + 24]:8 as i8 ++ [pre:RDI + 16]:8 as i8 ++ [pre:RDI + 8]:8 ++ [pre:RDI]:8 as i16 as i24
}
